{"version":3,"sources":["components/header/icon-help.svg","components/header/icon-settings.svg","components/header/dicematch-logo-wide.svg","constants/index.js","components/AnimatedDieFace.js","components/getDieColor.js","components/DieFace.js","components/Die.js","components/GameBoard.js","util/useLocalStorage.js","components/modal/GameOverScoreTable.js","components/modal/Modal.js","components/modal/GameOverModal.js","components/header/GameHeaderBar.js","components/gameStatus/UpcomingDice.js","components/gameStatus/Level.js","components/gameStatus/Moves.js","components/gameStatus/Score.js","components/gameStatus/GameStatusBar.js","components/ScoreAnnouncer.js","util/circularClamp.js","util/rollDie.js","reducers/dieReducer.js","components/modal/MeetDice.js","components/modal/HelpModal.js","App.js","reducers/createDieState.js","util/getDieFromBoard.js","util/findBoardMatches.js","reducers/gameBoardReducer.js","reducers/movesReducer.js","reducers/levelReducer.js","reducers/gameStateReducer.js","reducers/trackingReducer.js","reducers/rootReducer.js","reducers/scoreReducer.js","reducers/inputEnabledReducer.js","reducers/modalReducer.js","store/matchSagas.js","index.js","store/configureStore.js"],"names":["module","exports","__webpack_require__","p","ACTIONS","ADD_SCORE","UPDATE_DIE","REMOVE_DIE","ADD_DIE","MOVE_DIE","CASCADE_DICE","INPUT_DISABLE","INPUT_ENABLE","ADD_MOVES","SET_LEVEL","GAME_END","GAME_RESET","OPEN_MODAL","CLOSE_MODAL","DIE_TYPES","UP","DOWN","RANDOM","BLOCKER","FLIP","BOMB","GAME_STATES","MODALS","BOARD_WIDTH","BOARD_HEIGHT","scaleInVertical","keyframes","_templateObject","scaleOutVertical","_templateObject2","scaleInHorizontal","_templateObject3","scaleOutHorizontal","_templateObject4","shake","degree","_templateObject5","FaceContainer","styled","div","_templateObject14","animatedChild","css","_templateObject15","CurrentChild","_templateObject16","_ref","dieType","diceSize","animate","_templateObject6","_templateObject7","_templateObject8","_templateObject9","PrevChild","_templateObject17","_ref2","_templateObject10","_templateObject11","_templateObject12","_templateObject13","AnimatedDieFace","state","prevChildren","removePrevChild","id","_this","setState","_ref3","filter","child","_this2","this","_ref4","value","props","concat","Object","toConsumableArray","children","timeout","setTimeout","_this3","_this$props","react_default","a","createElement","className","assign","length","key","map","_ref5","React","Component","flicker","getDieColor_templateObject","getDieColor","getDieColor_templateObject2","theme","dice","down","pip","getDieColor_templateObject3","blocker","getDieColor_templateObject4","_ref6","_ref7","random","getDieColor_templateObject5","_ref8","_ref9","getDieColor_templateObject6","_ref10","flip","_ref11","getDieColor_templateObject7","_ref12","up","_ref13","DieSvg","svg","DieFace_templateObject","getPos","size","percent","margin","Pip","x","y","objectWithoutProperties","r","cx","cy","Face0","width","height","Face1","DieFace_Pip","Face2","Face3","Face4","Face5","Face6","DieFace","DieFace_Face1","DieFace_Face2","DieFace_Face3","DieFace_Face4","DieFace_Face5","DieFace_Face6","DieFace_Face0","DieButton","Die_templateObject","Positioner","Die_templateObject2","getInlineStyle","transform","DiePositioner","style","Die","handleDieUpdate","moves","inputEnabled","updateDie","limit","used","_this$props2","Die_DiePositioner","onClick","title","components_AnimatedDieFace","components_DieFace","defaultStyle","transition","opacity","transitionStyles","entering","entered","exiting","Fade","react_transition_group","objectSpread","BoardWrapper","GameBoard_templateObject","background","Board","GameBoard_templateObject2","getBoardSize","GameBoard","gameBoard","die","i","GameBoard_Fade","components_Die","useLocalStorage","initialValue","transformFn","arguments","undefined","JSON","parse","_useState","useState","item","localStorage","getItem","error","_useState2","slicedToArray","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","Table","table","GameOverScoreTable_templateObject","Th","th","GameOverScoreTable_templateObject2","Td","td","GameOverScoreTable_templateObject3","ScoreEntry","tr","GameOverScoreTable_templateObject4","currentScore","ScoreTable","scores","currentScoreId","endTime","score","level","isCurrentScore","gameEndDateFormat","Date","toLocaleDateString","year","month","day","containerEnter","Modal_templateObject","modalEnter","Modal_templateObject2","containerExit","Modal_templateObject3","modalExit","Modal_templateObject4","ModalContainer","Modal_templateObject5","StyledModal","Modal_templateObject6","CloseButton","button","Modal_templateObject7","foreground","connect","dispatch","closeModal","type","showCloseButton","closing","setClosing","RestartButton","GameOverModal_templateObject","ScoreDisplay","name","_ref$level","clearedDice","upcomingDice","_ref$tracking","tracking","gameId","gameStart","gameEnd","setInputActive","_useLocalStorage","_useLocalStorage2","setScores","currentGameScore","diceCleared","diceRemainingInLevel","turnsUsed","startTime","useEffect","find","previousScores","sort","b","slice","newScores","GameOverScoreTable","GameOverModal","restartGame","modal_Modal","GameOverModal_ScoreDisplay","GameHeaderBarContainer","GameHeaderBar_templateObject","backgroundSecondary","Button","GameHeaderBar_templateObject2","HelpButton","GameHeaderBar_templateObject3","require","GameTitle","GameHeaderBar_templateObject4","GameHeaderBar_templateObject5","GameHeaderBar","openModal","StyledUpcomingDice","UpcomingDice_templateObject","header","textSecondary","MiniDie","UpcomingDice_templateObject2","More","span","UpcomingDice_templateObject3","UpcomingDice","nextNiceDisplay","nextMore","StyledLevelContainer","Level_templateObject","backgroundInset","StyledLevel","Level_templateObject2","text","Level","gameStatus_UpcomingDice","Moves_templateObject","StyledMoves","Moves_templateObject2","border","Moves_templateObject3","Moves_templateObject4","Moves_templateObject5","Moves_templateObject6","StepBox","Moves_templateObject7","ready","danger","warning","insideBorder","Moves","_ref9$moves","cap","movesLeft","times","index","StyledScore","Score_templateObject","Score","GameStatus","GameStatusBar_templateObject","GameStatusBar","gameStatus_Score","gameStatus_Level","gameStatus_Moves","Announcements","ScoreAnnouncer_templateObject","position","top","left","textAlign","marginLeft","marginTop","ScoreAnnouncer","announcements","aId","gameState","drop","change","ScoreAnnouncer_Fade","circularClamp","min","max","rollDie","dieSize","Math","floor","ensureIdMatch","subReducer","action","updateDieUp","updateDieDown","updateDieRandom","roll","valueForFlip","updateDieFlip","updateDieBomb","moveDie","MeetDieContainer","MeetDice_templateObject","bounceLeft","MeetDice_templateObject2","bounceRight","MeetDice_templateObject3","NavigateButton","MeetDice_templateObject4","DieListContainer","MeetDice_templateObject5","DieContainer","MeetDice_templateObject6","foregroundSecondary","MeetDice_templateObject7","DICE_DESCRIPTIONS","description","updater","MeetDice","viewIndex","setViewIndex","_useState3","_useState4","dieDescriptions","setDieDescriptions","atStart","atEnd","navigate","direction","clamp","console","log","disabled","MeetDice_DieButton","FlexCenter","HelpModal_templateObject","Header","HelpModal_templateObject2","divider","Line","HelpModal_templateObject3","DieDisplay","HelpModal_templateObject4","LevelDisplay","HelpModal_templateObject5","HelpModal","modal_MeetDice","clampDieSize","colors","white","charcoal","charcoal_200","charcoal_100","grey_500","grey_700","grey_900","grey_1000","grey_1100","red","teal","green","yellow","beige","styleThemeLight","AppContainer","backgroundTertiary","App_templateObject","GameContainer","App_templateObject2","GlobalStyle","createGlobalStyle","App_templateObject3","App","getDiceSize","window","innerWidth","addEventListener","removeEventListener","matchMedia","matches","modal","styled_components_browser_esm","Helmet","content","header_GameHeaderBar","gameStatus_GameStatusBar","components_GameBoard","components_ScoreAnnouncer","modal_GameOverModal","modal_HelpModal","initialValueFor","createDieState","nanoid","getDieFromBoard","board","checkDiceMatch","nextDie","getId","intersectionById","intersectionBy","uniqById","uniqBy","findMatches","horzontalMatches","getDie","matchGroups","currGroup","push","hasMatch","findMatchesHorizontal","verticalMatches","reverse","findMatchesVertical","hGroup","intersectingGroup","vGroup","getInitalState","findBoardMatches","deferToDice","dieState","dieReducer","getDieToShift","initialState","clampVal","Infinity","round","log10","getCountDown","getCountFlip","getCountRandom","getCountBlocker","getCountBomb","checkForRuns","levelDice","getLevelDice","attempts","shuffle","combineReducers","removeDie","addDie","updatedState","dieToShift","cascadeDice","multiplier","handleMatchGroup","removeMatches","onUpdateDie","matchSaga","delay","duration","Promise","resolve","getMatchScore","matchLength","getScoreValueBonus","matchValue","removedDie","regenerator_default","wrap","_context","prev","next","select","sent","put","stop","_marked","matchGroup","scoreMultipler","gameBoardIds","diceToRemove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context2","includes","all","first","Symbol","iterator","done","t0","return","finish","_marked2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","nextMatches","_args3","_context3","abrupt","_marked3","BOMB_MATRIX","findDiceToExplode","getDieAt","offsetX","offsetY","postMatchState","diceToExplode","finalState","_context4","_marked4","_context5","takeEvery","_marked5","store","sagaMiddleware","createSagaMiddleware","applyMiddleware","createLogger","collapsed","save","namespace","ignoreStates","createStore","createStoreWithMiddleware","rootReducer","load","run","sagas","_store","configureStore","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mPCA3BC,EAAU,CACnBC,UAAW,YAEXC,WAAY,aACZC,WAAY,aACZC,QAAS,UACTC,SAAU,WAEVC,aAAc,eAEdC,cAAe,gBACfC,aAAc,eAEdC,UAAW,YAEXC,UAAW,YAEXC,SAAU,WACVC,WAAY,aAEZC,WAAY,aACZC,YAAa,eAGJC,EAAY,CACrBC,GAAI,KACJC,KAAM,OACNC,OAAQ,SACRC,QAAS,UACTC,KAAM,OACNC,KAAM,QAGGC,EACD,SADCA,EAEC,WAGDC,EACH,OAKGC,EAAc,EACdC,EAAe,8tFCxC5B,IAEMC,EAAkBC,YAAHC,KAKfC,EAAmBF,YAAHG,KAKhBC,EAAoBJ,YAAHK,KAKjBC,EAAqBN,YAAHO,KAKlBC,EAAQ,SAACC,GAAD,OAAYT,YAAZU,IAKeD,EAMDA,IAoDtBE,EAAgBC,IAAOC,IAAVC,KAIbC,EAAgBC,YAAHC,KAQbC,EAAeN,IAAOC,IAAVM,IACZJ,EA7DoB,SAAAK,GAAoC,IAAjCC,EAAiCD,EAAjCC,QAAiCD,EAAxBE,SAClC,IAD0DF,EAAdG,QAC9B,OAAO,KAErB,OAAQF,GACJ,KAAKjC,EAAUE,KACX,OAAO0B,YAAPQ,IACiBzB,EA3CP,KA8Cd,KAAKX,EAAUG,OACX,OAAOyB,YAAPS,IACiBjB,EAAM,KAE3B,KAAKpB,EAAUK,KACX,OAAOuB,YAAPU,IACiBtB,GAErB,QACI,OAAOY,YAAPW,IACiB5B,EAxDP,QAsGhB6B,EAAYhB,IAAOC,IAAVgB,IACTd,EAzCmB,SAAAe,GAA2B,IAAxBT,EAAwBS,EAAxBT,QAAwBS,EAAfR,SACjC,OAAQD,GACJ,KAAKjC,EAAUE,KACX,OAAO0B,YAAPe,IACiB7B,EAlEP,KAqEd,KAAKd,EAAUG,OACX,OAAOyB,YAAPgB,IACiBxB,EAAM,KAE3B,KAAKpB,EAAUK,KACX,OAAOuB,YAAPiB,IACiB3B,GAErB,QACI,OAAOU,YAAPkB,IACiBhC,EA/EP,QAqJPiC,8MAzCXC,MAAQ,CAAEC,aAAc,MAmBxBC,gBAAkB,SAACC,GAAD,OAAQ,kBACtBC,EAAKC,SAAS,SAAAC,GAAA,MAAuB,CACjCL,aADUK,EAAGL,aACcM,OAAO,SAACC,GAAD,OAAWA,EAAML,KAAOA,qGAnB7B,IAAAM,EAAAC,KACjC,GADiCC,EAATC,QACVF,KAAKG,MAAMD,MAAO,CAC5B,IAAMT,EAAKO,KAAKG,MAAMD,MAEtBF,KAAKL,SAAS,SAACL,GAAD,MAAY,CACtBC,aAAY,GAAAa,OAAAC,OAAAC,EAAA,EAAAD,CACLf,EAAMC,cADD,CAER,CACIO,MAAOC,EAAKI,MAAMI,SAClBd,GAAIA,EACJe,QAASC,WAAWV,EAAKP,gBAAgBC,GAxH3C,6CAqIT,IAAAiB,EAAAV,KACGT,EAAiBS,KAAKV,MAAtBC,aADHoB,EAEuBX,KAAKG,MAAzBI,EAFHI,EAEGJ,SAAUL,EAFbS,EAEaT,MAElB,OACIU,EAAAC,EAAAC,cAACjD,EAAD,CAAekD,UAAU,QACrBH,EAAAC,EAAAC,cAAC1C,EAADiC,OAAAW,OAAA,GAAkBhB,KAAKG,MAAvB,CAA8B1B,QAASc,EAAa0B,OAAQC,IAAKhB,IAC5DK,GAGJhB,EAAa4B,IAAI,SAAAC,GAAA,IAAGtB,EAAHsB,EAAGtB,MAAOL,EAAV2B,EAAU3B,GAAV,OAAmBmB,EAAAC,EAAAC,cAAChC,EAADuB,OAAAW,OAAA,GAAeN,EAAKP,MAApB,CAA2Be,IAAKzB,IAAKK,aApC5DuB,IAAMC,ulDC5GpC,IAAMC,GAAUrE,YAAHsE,MAmEEC,GA7DK,SAAAnD,GAAwB,IAArBC,EAAqBD,EAArBC,QAAS2B,EAAY5B,EAAZ4B,MAC5B,OAAQ3B,GACJ,KAAKjC,EAAUE,KACX,OAAO0B,YAAPwD,KACkB,SAAA1C,GAAA,OAAAA,EAAG2C,MAAkBC,KAAKC,MAG5B,SAAAjC,GAAA,OAAAA,EAAG+B,MAAkBC,KAAKE,MAI9C,KAAKxF,EAAUI,QACX,OAAOwB,YAAP6D,KACkB,SAAA9B,GAAA,OAAAA,EAAG0B,MAAkBC,KAAKI,SAG5B,SAAAZ,GAAA,OAAAA,EAAGO,MAAkBC,KAAKE,MAI9C,KAAKxF,EAAUM,KACX,OAAOsB,YAAP+D,KACkB,SAAAC,GAAA,OAAAA,EAAGP,MAAkBC,KAAKI,SAG5B,SAAAG,GAAA,OAAAA,EAAGR,MAAkBC,KAAKQ,QACrBb,GAAmB,IAAPrB,GAGrC,KAAK5D,EAAUG,OACX,OAAOyB,YAAPmE,KACkB,SAAAC,GAAA,OAAAA,EAAGX,MAAkBC,KAAKQ,QAG5B,SAAAG,GAAA,OAAAA,EAAGZ,MAAkBC,KAAKE,MAI9C,KAAKxF,EAAUK,KACX,OAAOuB,YAAPsE,KACkB,SAAAC,GAAA,OAAAA,EAAGd,MAAkBC,KAAKc,MAI5B,SAAAC,GAAA,OAAAA,EAAGhB,MAAkBC,KAAKE,MAI9C,KAAKxF,EAAUC,GACf,QACI,OAAO2B,YAAP0E,KACkB,SAAAC,GAAA,OAAAA,EAAGlB,MAAkBC,KAAKkB,IAG5B,SAAAC,GAAA,OAAAA,EAAGpB,MAAkBC,KAAKE,qHC1DtD,IAAMkB,GAASlF,IAAOmF,IAAVC,KAGNzB,IAGA0B,GAAS,SAACC,EAAMC,GAClB,IAAMC,EAAgB,IAAPF,EACf,OAAOE,EAASD,GAAWD,EAAgB,EAATE,IAGhCC,GAAM,SAAAjF,GAAA,IAAGkF,EAAHlF,EAAGkF,EAAGC,EAANnF,EAAMmF,EAAGjF,EAATF,EAASE,SAAT6B,OAAAqD,EAAA,EAAArD,CAAA/B,EAAA,6BACRsC,EAAAC,EAAAC,cAAA,UAAQ6C,EAAc,IAAXnF,EAAiBoF,GAAIT,GAAO3E,EAAUgF,GAAIK,GAAIV,GAAO3E,EAAUiF,MAGxEK,GAAQ,SAAA9E,GAAA,IAAGR,EAAHQ,EAAGR,SAAa2B,EAAhBE,OAAAqD,EAAA,EAAArD,CAAArB,EAAA,qBACV4B,EAAAC,EAAAC,cAACkC,GAAD3C,OAAAW,OAAA,GAAYb,EAAZ,CAAmB4D,MAAOvF,EAAUwF,OAAQxF,MAG1CyF,GAAQ,SAAArE,GAAA,IAAGpB,EAAHoB,EAAGpB,SAAa2B,EAAhBE,OAAAqD,EAAA,EAAArD,CAAAT,EAAA,qBACVgB,EAAAC,EAAAC,cAACkC,GAAD3C,OAAAW,OAAA,GAAYb,EAAZ,CAAmB4D,MAAOvF,EAAUwF,OAAQxF,IACxCoC,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,GAAKC,EAAG,QAIjDU,GAAQ,SAAAlE,GAAA,IAAGzB,EAAHyB,EAAGzB,SAAa2B,EAAhBE,OAAAqD,EAAA,EAAArD,CAAAJ,EAAA,qBACVW,EAAAC,EAAAC,cAACkC,GAAD3C,OAAAW,OAAA,GAAYb,EAAZ,CAAmB4D,MAAOvF,EAAUwF,OAAQxF,IACxCoC,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,KAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,OAI/CW,GAAQ,SAAAhD,GAAA,IAAG5C,EAAH4C,EAAG5C,SAAa2B,EAAhBE,OAAAqD,EAAA,EAAArD,CAAAe,EAAA,qBACVR,EAAAC,EAAAC,cAACkC,GAAD3C,OAAAW,OAAA,GAAYb,EAAZ,CAAmB4D,MAAOvF,EAAUwF,OAAQxF,IACxCoC,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,KAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,GAAKC,EAAG,MAC/C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,OAI/CY,GAAQ,SAAAnC,GAAA,IAAG1D,EAAH0D,EAAG1D,SAAa2B,EAAhBE,OAAAqD,EAAA,EAAArD,CAAA6B,EAAA,qBACVtB,EAAAC,EAAAC,cAACkC,GAAD3C,OAAAW,OAAA,GAAYb,EAAZ,CAAmB4D,MAAOvF,EAAUwF,OAAQxF,IACxCoC,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,KAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,KAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,KAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,OAK/Ca,GAAQ,SAAAnC,GAAA,IAAG3D,EAAH2D,EAAG3D,SAAa2B,EAAhBE,OAAAqD,EAAA,EAAArD,CAAA8B,EAAA,qBACVvB,EAAAC,EAAAC,cAACkC,GAAD3C,OAAAW,OAAA,GAAYb,EAAZ,CAAmB4D,MAAOvF,EAAUwF,OAAQxF,IACxCoC,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,KAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,KAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,GAAKC,EAAG,MAC/C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,KAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,OAI/Cc,GAAQ,SAAAjC,GAAA,IAAG9D,EAAH8D,EAAG9D,SAAa2B,EAAhBE,OAAAqD,EAAA,EAAArD,CAAAiC,EAAA,qBACV1B,EAAAC,EAAAC,cAACkC,GAAD3C,OAAAW,OAAA,GAAYb,EAAZ,CAAmB4D,MAAOvF,EAAUwF,OAAQxF,IACxCoC,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,KAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,MAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,KAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,KAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,MAC7C7C,EAAAC,EAAAC,cAACoD,GAAD7D,OAAAW,OAAA,GAASb,EAAT,CAAgB3B,SAAUA,EAAUgF,EAAG,EAAGC,EAAG,OAuBtCe,GAnBC,SAACrE,GACb,OAAQA,EAAMD,OACV,KAAK,EACD,OAAOU,EAAAC,EAAAC,cAAC2D,GAAUtE,GACtB,KAAK,EACD,OAAOS,EAAAC,EAAAC,cAAC4D,GAAUvE,GACtB,KAAK,EACD,OAAOS,EAAAC,EAAAC,cAAC6D,GAAUxE,GACtB,KAAK,EACD,OAAOS,EAAAC,EAAAC,cAAC8D,GAAUzE,GACtB,KAAK,EACD,OAAOS,EAAAC,EAAAC,cAAC+D,GAAU1E,GACtB,KAAK,EACD,OAAOS,EAAAC,EAAAC,cAACgE,GAAU3E,GACtB,QACI,OAAOS,EAAAC,EAAAC,cAACiE,GAAU5E,4ZCpF9B,IAAM6E,GAAYlH,IAAOC,IAAVkH,MAYTC,GAAapH,IAAOC,IAAVoH,MAOVC,GAAiB,SAAA9G,GAAA,IAAGkF,EAAHlF,EAAGkF,EAAGC,EAANnF,EAAMmF,EAAGjF,EAATF,EAASE,SAAT,MAAyB,CAC5C6G,UAAS,aAAAjF,OAAe5B,EAAWgF,EAA1B,QAAApD,OAAkC5B,EAAWiF,EAAI,GAAjD,SAGP6B,GAAgB,SAAAtG,GAAA,IAAGuB,EAAHvB,EAAGuB,SAAaJ,EAAhBE,OAAAqD,EAAA,EAAArD,CAAArB,EAAA,qBAClB4B,EAAAC,EAAAC,cAACoE,GAAD,CAAYK,MAAOH,GAAejF,IAC7BI,IAqDMiF,8MAxCXC,gBAAkB,WAAM,IAAA9E,EAOhBjB,EAAKS,MALLuF,EAFgB/E,EAEhB+E,MACAC,EAHgBhF,EAGhBgF,aACApH,EAJgBoC,EAIhBpC,QACAqH,EALgBjF,EAKhBiF,UACAnG,EANgBkB,EAMhBlB,GAIAiG,EAAMG,MAAQH,EAAMI,MAAQ,IAC3BH,GACApH,IAAYjC,EAAUI,SAAW6B,IAAYjC,EAAUM,MAG5DgJ,EAAUnG,4FAvByB,IAAfS,EAAeN,EAAfM,MAAOsD,EAAQ5D,EAAR4D,EAAGC,EAAK7D,EAAL6D,EAC9B,QACIvD,IAAUF,KAAKG,MAAMD,OACrBsD,IAAMxD,KAAKG,MAAMqD,GACjBC,IAAMzD,KAAKG,MAAMsD,oCAsBhB,IAAAsC,EAMD/F,KAAKG,MAJL3B,EAFCuH,EAEDvH,SACAgF,EAHCuC,EAGDvC,EACAC,EAJCsC,EAIDtC,EACAhE,EALCsG,EAKDtG,GAGJ,OACImB,EAAAC,EAAAC,cAACkF,GAAkBhG,KAAKG,MACpBS,EAAAC,EAAAC,cAACkE,GAAD3E,OAAAW,OAAA,GAAehB,KAAKG,MAApB,CACQ8F,QAASjG,KAAKyF,gBACdS,MAAK,OAAA9F,OAASX,EAAT,QAAAW,OAAkBoD,EAAlB,QAAApD,OAA0BqD,KACnC7C,EAAAC,EAAAC,cAACqF,GAAoBnG,KAAKG,MACtBS,EAAAC,EAAAC,cAACsF,GAAD/F,OAAAW,OAAA,GAAahB,KAAKG,MAAlB,CAAyB3B,SAAUA,EAAW,eAzCpD6C,IAAMC,yPC7BxB,IAEM+E,GAAe,CACjBC,WAAU,WAAAlG,OAHG,IAGH,cACVmG,QAAS,GAGPC,GAAmB,CACrBC,SAAU,CAAEF,QAAS,GACrBG,QAAU,CAAEH,QAAS,GACrBI,QAAU,CAAEJ,QAAS,IAGnBK,GAAO,SAAAtI,GAAA,IAAGiC,EAAHjC,EAAGiC,SAAaJ,EAAhBE,OAAAqD,EAAA,EAAArD,CAAA/B,EAAA,qBACTsC,EAAAC,EAAAC,cAAC+F,EAAA,WAADxG,OAAAW,OAAA,GAAgBb,EAAhB,CAAuBK,QAdV,MAeR,SAAClB,GAAD,OACGsB,EAAAC,EAAAC,cAAA,QAAMyE,MAAKlF,OAAAyG,EAAA,EAAAzG,CAAA,GAAOgG,GAAiBG,GAAiBlH,KAC/CiB,MAMXwG,GAAejJ,IAAOC,IAAViJ,KAGA,SAAA7G,GAAK,OAAIA,EAAMwB,MAAMsF,aAGjCC,GAAQpJ,IAAOC,IAAVoJ,MAILC,GAAe,SAAApI,GAAA,IAAGR,EAAHQ,EAAGR,SAAH,MAAmB,CACpCuF,MAAOvF,EAAWzB,EAClBiH,OAAQxF,EAAWxB,EAAe,KAiBvBqK,GAdG,SAAAzH,GAAA,IAAG0H,EAAH1H,EAAG0H,UAAcnH,EAAjBE,OAAAqD,EAAA,EAAArD,CAAAT,EAAA,sBACdgB,EAAAC,EAAAC,cAACiG,GAAD,KACInG,EAAAC,EAAAC,cAACoG,GAAD,CAAO3B,MAAO6B,GAAajH,IACvBS,EAAAC,EAAAC,cAAC+F,EAAA,gBAAD,KACKS,EAAUnG,IAAI,SAACoG,EAAKC,GAAN,OACX5G,EAAAC,EAAAC,cAAC2G,GAAD,CAAMvG,IAAKqG,EAAI9H,IACXmB,EAAAC,EAAAC,cAAC4G,GAADrH,OAAAW,OAAA,GAASb,EAAWoH,oBCrB7BI,GA5BS,SAACzG,EAAK0G,GAA2C,IAA7BC,EAA6BC,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,GAAAA,UAAA,GAAfE,KAAKC,MAAUC,EAG/BC,mBAAS,WAC3C,IAEI,IAAMC,EAAOC,aAAaC,QAAQpH,GAElC,OAAOkH,EAAOP,EAAYO,GAAQR,EACpC,MAAOW,GACL,OAAOX,KAVsDY,EAAAnI,OAAAoI,GAAA,EAAApI,CAAA6H,EAAA,GAG9DQ,EAH8DF,EAAA,GAGjDG,EAHiDH,EAAA,GAyBrE,MAAO,CAACE,EATS,SAAAxI,GAEb,IAAM0I,EAAe1I,aAAiB2I,SAAW3I,EAAMwI,GAAexI,EAEtEyI,EAAeC,GAEfP,aAAaS,QAAQ5H,EAAK8G,KAAKe,UAAUH,8fCtBjD,IAAMI,GAAQlL,IAAOmL,MAAVC,MAILC,GAAKrL,IAAOsL,GAAVC,MASFC,GAAKxL,IAAOyL,GAAVC,MAQFC,GAAa3L,IAAO4L,GAAVC,KACE,SAAArL,GAAA,OAAAA,EAAGsL,aAAiC,SAAW,gBA0ClDC,GAvCI,SAAA7K,GAAA,IAAG8K,EAAH9K,EAAG8K,OAAQC,EAAX/K,EAAW+K,eAAX,OACfnJ,EAAAC,EAAAC,cAACkI,GAAD,KACIpI,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACqI,GAAD,cAGAvI,EAAAC,EAAAC,cAACqI,GAAD,cAGAvI,EAAAC,EAAAC,cAACqI,GAAD,CAAIpI,UAAU,QAAd,UAKJH,EAAAC,EAAAC,cAAA,aACCgJ,EAAO3I,IAAI,SAAAvB,GAAmC,IAAhCH,EAAgCG,EAAhCH,GAAIuK,EAA4BpK,EAA5BoK,QAASC,EAAmBrK,EAAnBqK,MAAOC,EAAYtK,EAAZsK,MACzBC,EAAiBJ,IAAmBtK,EAEpC2K,GADcJ,GAAW,IAAIK,KAAKL,IACFM,wBAAmBvC,EAAW,CAAEwC,KAAM,UAAWC,MAAO,UAAWC,IAAK,YAE9G,OACI7J,EAAAC,EAAAC,cAAC2I,GAAD,CAAYvI,IAAKzB,EAAImK,aAAcO,GAC/BvJ,EAAAC,EAAAC,cAACwI,GAAD,KACKW,GAELrJ,EAAAC,EAAAC,cAACwI,GAAD,KACKY,GAELtJ,EAAAC,EAAAC,cAACwI,GAAD,CAAIvI,UAAU,QACTqJ,k+CCrDzB,IAAMM,GAAiBxN,YAAHyN,MAKdC,GAAa1N,YAAH2N,MAKVC,GAAgB5N,YAAH6N,MAMbC,GAAY9N,YAAH+N,MAKTC,GAAiBpN,IAAOC,IAAVoN,KASHT,GAGII,IAIfM,GAActN,IAAOC,IAAVsN,KACE,SAAA/M,GAAA,OAAAA,EAAGqD,MAAkBsF,YAMvB2D,GAGII,IAIfM,GAAcxN,IAAOyN,OAAVC,KAaH,SAAAxM,GAAA,OAAAA,EAAG2C,MAAkB8J,aA8BpBC,eAAQ,KAzBI,SAACC,GAAD,MAAe,CACtCC,WAAY,kBAAMD,EAAS,CAAEE,KAAMtQ,EAAQc,iBAwBhCqP,CArBD,SAAA9L,GAA+C,IAA5CkM,EAA4ClM,EAA5CkM,gBAAiBvL,EAA2BX,EAA3BW,SAAUqL,EAAiBhM,EAAjBgM,WAAiB1D,EAC3BC,qBAD2BK,EAAAnI,OAAAoI,GAAA,EAAApI,CAAA6H,EAAA,GAClD6D,EADkDvD,EAAA,GACzCwD,EADyCxD,EAAA,GAWzD,OACI5H,EAAAC,EAAAC,cAACoK,GAAD,CAAgBnK,UAAWgL,EAAU,eAAYhE,GAC7CnH,EAAAC,EAAAC,cAACsK,GAAD,KACKU,GAAmBlL,EAAAC,EAAAC,cAACwK,GAAD,CAAarF,QAXpB,WACrB+F,GAAW,GACXvL,WAAW,WACPmL,IACAI,GAAW,IACZ,OAMyB,KACnBzL,8LCtFjB,IAAM0L,GAAgBnO,IAAOyN,OAAVW,MAQbC,GAAe,SAAA7N,GAOfA,EANF8N,KAME,IALFnC,EAKE3L,EALF2L,MAKEoC,EAAA/N,EAJF4L,MAASA,EAIPmC,EAJOnC,MAAOoC,EAIdD,EAJcC,YAAaC,EAI3BF,EAJ2BE,aACpBzG,EAGPxH,EAHFoH,MAASI,KAGP0G,EAAAlO,EAFFmO,SAAYC,EAEVF,EAFUE,OAAQC,EAElBH,EAFkBG,UAAWC,EAE7BJ,EAF6BI,QAC/BC,EACEvO,EADFuO,eACEC,EAC0BnF,GAAgB,mBAAoB,IAD9DoF,EAAA1M,OAAAoI,GAAA,EAAApI,CAAAyM,EAAA,GACKhD,EADLiD,EAAA,GACaC,EADbD,EAAA,GAGIE,EAAmB,CACrBxN,GAAIiN,EACJzC,QACAC,QACAgD,YAAaZ,EACba,qBAAsBZ,EAAatL,OACnCmM,UAAWtH,EACXuH,UAAWV,EACX3C,QAAS4C,GAmBb,OAhBAU,oBAAU,WACN,IAAIxD,EAAOyD,KAAK,SAAAvO,GAAA,OAAAA,EAAGS,KAAgBiN,IAAnC,CAEA,IAAMc,EAAiB1D,EAClBjK,OAAO,SAAAoK,GAAK,QAAMA,IAClBwD,KAAK,SAAC5M,EAAG6M,GAAJ,OAAUA,EAAEzD,MAAQpJ,EAAEoJ,QAC3B0D,MAAM,EAAG,IAERC,EAAY,GAAAxN,OAAAC,OAAAC,EAAA,EAAAD,CACXmN,GADW,CAEdP,IACFQ,KAAK,SAAC5M,EAAG6M,GAAJ,OAAUA,EAAEzD,MAAQpJ,EAAEoJ,QAE7B+C,EAAUY,KACX,IAEIhN,EAAAC,EAAAC,cAAC+M,GAAD,CAAoB/D,OAAQA,EAAQC,eAAgB2C,EAAQG,eAAgBA,KAmBxEiB,GAhBO,SAAAlO,GAA+B,IAA5BmO,EAA4BnO,EAA5BmO,YAAgB5N,EAAYE,OAAAqD,EAAA,EAAArD,CAAAT,EAAA,iBACjD,OACIgB,EAAAC,EAAAC,cAACkN,GAAD,KACIpN,EAAAC,EAAAC,cAAA,uBAEAF,EAAAC,EAAAC,cAACmN,GAAiB9N,GAElBS,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACmL,GAAD,CAAehG,QAAS8H,GAAxB,ypCC3DhB,IAAMG,GAAyBpQ,IAAOC,IAAVoQ,KAWV,SAAAhO,GAAK,OAAIA,EAAMwB,MAAMyM,sBAGjCC,GAASvQ,IAAOyN,OAAV+C,MAcNC,GAAazQ,YAAOuQ,GAAPvQ,CAAH0Q,KAGYC,EAAQ,MAS9BC,IANiB5Q,YAAOuQ,GAAPvQ,CAAH6Q,KAGQF,EAAQ,MAGlB3Q,IAAOC,IAAV6Q,KAIaH,EAAQ,OAuBrBI,GAdO,SAAAvQ,GAAA,IAAGwQ,EAAHxQ,EAAGwQ,UAAH,OAClBlO,EAAAC,EAAAC,cAACoN,GAAD,KACItN,EAAAC,EAAAC,cAACyN,GAAD,CAAYtI,QAAS,kBAAM6I,EAAUhS,KAArC,QAGA8D,EAAAC,EAAAC,cAAC4N,GAAD,srBCzDR,IAAMK,GAAqBjR,IAAOC,IAAViR,KAiBP,SAAA1Q,GAAA,OAAAA,EAAGqD,MAAkBsN,OAAOC,gBAIvCC,GAAUrR,IAAOC,IAAVqR,MAQPC,GAAOvR,IAAOwR,KAAVC,KAGG,SAAAvQ,GAAA,OAAAA,EAAG2C,MAAkBsN,OAAOC,gBAwB1BM,GAnBM,SAAA5P,GAAsB,IAAnB2M,EAAmB3M,EAAnB2M,aACdkD,EAAkBlD,EAAaoB,MAAM,EAH1B,GAIX+B,EAAWnD,EAAatL,OAJb,EAMjB,OACIL,EAAAC,EAAAC,cAACiO,GAAD,KACInO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACV0O,EAAgB9B,MAAM,EATlB,GASmCxM,IAAI,SAACoG,EAAKC,GAAN,OACxC5G,EAAAC,EAAAC,cAACqO,GAAD,CAASjO,IAAKsG,GACV5G,EAAAC,EAAAC,cAACsF,GAAD/F,OAAAW,OAAA,GAAauG,EAAb,CAAkB/I,SAAU,SAInCkR,EAAW,GAAK9O,EAAAC,EAAAC,cAACuO,GAAD,UAASK,whBClD1C,IAAMC,GAAuB7R,IAAOC,IAAV6R,KAGR,SAAAtR,GAAA,OAAAA,EAAGqD,MAAkBsN,OAAOY,kBAIxCC,GAAchS,IAAOC,IAAVgS,KAQJ,SAAA/Q,GAAA,OAAAA,EAAG2C,MAAkBsN,OAAOe,MAOxB,SAAApQ,GAAA,OAAAA,EAAG+B,MAAkBsN,OAAOC,gBAiB9Be,GAbD,SAAAhQ,GAA6B,IAA1BiK,EAA0BjK,EAA1BiK,MAAOqC,EAAmBtM,EAAnBsM,aACpB,OACI3L,EAAAC,EAAAC,cAAC6O,GAAD,KACI/O,EAAAC,EAAAC,cAACgP,GAAD,KACIlP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,SACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASmJ,IAE7BtJ,EAAAC,EAAAC,cAACoP,GAAD,CAAc3D,aAAcA,i7CClCxC,IAAM7O,GAAQ,SAACC,GAAD,OAAYT,YAAXiT,KAKgBxS,EAAaA,GAMZA,GAAcA,IAIxCyS,GAActS,IAAOC,IAAVsS,KAWO,SAAA/R,GAAA,OAAAA,EAAGqD,MAAkB+D,MAAM4K,QAGvB,SAAAtR,GAAA,OAAAA,EAAG2C,MAAkBsN,OAAOY,iBAIlD,SAAAjQ,GAAA,OAAAA,EAAG8F,MAAoB,GAAKxH,YAAbqS,OAIf,SAAAtQ,GAAA,OAAAA,EAAGyF,OAAqB,GAAKxH,YAAdsS,KACA9S,GAAM,OAGrB,SAAA0D,GAAA,OAAAA,EAAGsE,OAAqB,GAAKxH,YAAduS,KACA/S,GAAM,MAGrB,SAAAwE,GAAA,OAAAA,EAAGwD,OAAqB,GAAKxH,YAAdwS,KACAhT,GAAM,MAIrBiT,GAAU7S,IAAOC,IAAV6S,KAGK,SAAAzO,GAA6B,IAA1B0O,EAA0B1O,EAA1B0O,MAAOnL,EAAmBvD,EAAnBuD,MAAO/D,EAAYQ,EAAZR,MAC3B,OAAKkP,EACDnL,GAAS,EAAU/D,EAAM+D,MAAMoL,OAC/BpL,GAAS,EAAU/D,EAAM+D,MAAMqL,QAC5BpP,EAAM+D,MAAMmL,MAHAlP,EAAM+D,MAAMI,MAMT,SAAAxD,GAAA,OAAAA,EAAGX,MAAkB+D,MAAMsL,eAoB1CC,GAZD,SAAA1O,GAAqC,IAAA2O,EAAA3O,EAAlCmD,MAASI,EAAyBoL,EAAzBpL,KAAMD,EAAmBqL,EAAnBrL,MAAOsL,EAAYD,EAAZC,IAC7BC,EAAYvL,EAAQC,EAE1B,OACIlF,EAAAC,EAAAC,cAACsP,GAAD,CAAa1K,MAAO0L,GACfC,KAAM,SAACC,GAAD,OACH1Q,EAAAC,EAAAC,cAAC6P,GAAD,CAASzP,IAAKoQ,EAAO5L,MAAO0L,EAAWP,MAAOS,EAAQF,KACvDD,4ZC3Ef,IAAMI,GAAczT,IAAOC,IAAVyT,KASC,SAAAlT,GAAA,OAAAA,EAAGqD,MAAkBsN,OAAOY,iBAIjC,SAAA7Q,GAAA,OAAAA,EAAG2C,MAAkBsN,OAAOe,MAKxB,SAAApQ,GAAA,OAAAA,EAAG+B,MAAkBsN,OAAOC,gBAW9BuC,GAPD,SAAAxR,GAAA,IAAGgK,EAAHhK,EAAGgK,MAAH,OACVrJ,EAAAC,EAAAC,cAACyQ,GAAD,KACI3Q,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,SACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASkJ,gWCvBjC,IAAMyH,GAAa5T,IAAOC,IAAV4T,KAeE,SAAArT,GAAA,OAAAA,EAAGqD,MAAkByM,sBAYxBwD,GATO,SAACzR,GAAD,OAClBS,EAAAC,EAAAC,cAAC4Q,GAAD,KACI9Q,EAAAC,EAAAC,cAAC+Q,GAAU1R,GACXS,EAAAC,EAAAC,cAACgR,GAAU3R,EAAM+J,OAEjBtJ,EAAAC,EAAAC,cAACiR,GAAU5R,gUCtBnB,IAAM6R,GAAgBlU,IAAOC,IAAVkU,MAiBb5L,GAAe,CACjB6L,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,SACXtO,MAAO,IACPC,OAAQ,GACRsO,YAAa,GACbC,WAAY,GACZjM,WAAU,WAAAlG,OAXG,IAWH,2BAAAA,OAXG,IAWH,eACVmG,QAAS,EACTlB,UAAW,cAGTmB,GAAmB,CACrBC,SAAU,CAAEF,QAAS,EAAGlB,UAAW,cACnCqB,QAAS,CAAEH,QAAS,EAAGlB,UAAW,YAClCsB,QAAS,CAAEJ,QAAS,EAAGlB,UAAW,eAGhCuB,GAAO,SAAAtI,GAAA,IAAGiC,EAAHjC,EAAGiC,SAAaJ,EAAhBE,OAAAqD,EAAA,EAAArD,CAAA/B,EAAA,qBACTsC,EAAAC,EAAAC,cAAC+F,EAAA,WAADxG,OAAAW,OAAA,GAAgBb,EAAhB,CAAuBK,QAvBV,MAwBR,SAAClB,GAAD,OACGsB,EAAAC,EAAAC,cAAA,OAAKyE,MAAKlF,OAAAyG,EAAA,EAAAzG,CAAA,GAAOgG,GAAiBG,GAAiBlH,KAC9CiB,MA0CFiS,8MAnCXlT,MAAQ,CACJmT,cAAe,MAGnBC,IAAM,8FAE0C,IAAA3S,EAAAC,KAApBiK,EAAoBjL,EAApBiL,MAAoBjL,EAAb2T,UAC/B,GAAI3S,KAAKG,MAAM8J,QAAUA,GAASjK,KAAKG,MAAMwS,YAAc9V,EAAsB,CAC7E,IAAMqD,EAAQ+J,EAAQjK,KAAKG,MAAM8J,MACjCjK,KAAKL,SAAS,SAACL,GAAD,MAAY,CAAEmT,cAAa,GAAArS,OAAAC,OAAAC,EAAA,EAAAD,CAAMf,EAAMmT,eAAZ,CAA2B,CAAEhT,GAAIM,EAAK2S,IAAKxS,cACpFF,KAAK0S,IAAM1S,KAAK0S,IAAM,EAEtBjS,WAAW,WACPV,EAAKJ,SAAS,SAACL,GAAD,MAAY,CAAEmT,cAAeG,KAAK,EAAGtT,EAAMmT,mBAC1D,uCAIF,IACGA,EAAkBzS,KAAKV,MAAvBmT,cAER,OACI7R,EAAAC,EAAAC,cAACkR,GAAD,KACIpR,EAAAC,EAAAC,cAAC+F,EAAA,gBAAD,KACK4L,EAActR,IAAI,SAAC0R,EAAQrL,GAAT,OACf5G,EAAAC,EAAAC,cAACgS,GAAD,CAAM5R,IAAK2R,EAAOpT,IAAlB,KACOoT,EAAO3S,kBA3BTmB,IAAMC,+BCtDpByR,GAAA,SAACC,EAAKC,GAAN,OAAc,SAAC/S,GAC1B,OAAIA,EAAQ8S,EAAYC,EACpB/S,EAAQ+S,EAAYD,EACjB9S,ICFIgT,GAAA,SAACC,GAAD,OAAaC,KAAKC,MAAMD,KAAKhR,SAAW+Q,GAAW,GCI5DG,GAAgB,SAACC,GAAD,OAAgB,SAACjU,EAAOkU,GAAR,OAClClU,EAAMG,KAAO+T,EAAO/T,GAChB8T,EAAWjU,EAAOkU,GAClBlU,IAGKmU,GAAcH,GAAc,SAAAhV,EAAsBkV,GAAtB,IAAGtT,EAAH5B,EAAG4B,MAAUZ,EAAbe,OAAAqD,EAAA,EAAArD,CAAA/B,EAAA,kBAAA+B,OAAAyG,EAAA,EAAAzG,CAAA,GAClCf,EADkC,CAErCY,MAAO6S,GAAc,EAAGzT,EAAM6T,QAAvBJ,CAAgC7S,EAAQ,OAGtCwT,GAAgBJ,GAAc,SAAAtU,EAAsBwU,GAAtB,IAAGtT,EAAHlB,EAAGkB,MAAUZ,EAAbe,OAAAqD,EAAA,EAAArD,CAAArB,EAAA,kBAAAqB,OAAAyG,EAAA,EAAAzG,CAAA,GACpCf,EADoC,CAEvCY,MAAO6S,GAAc,EAAGzT,EAAM6T,QAAvBJ,CAAgC7S,EAAQ,OAGtCyT,GAAkBL,GAAc,SAAA1T,EAAsB4T,GAG/D,IAH0E,IAA9BtT,EAA8BN,EAA9BM,MAAUZ,EAAoBe,OAAAqD,EAAA,EAAArD,CAAAT,EAAA,WACtEgU,EAAOV,GAAQ5T,EAAM6T,SAElBS,IAAS1T,GACZ0T,EAAOV,GAAQ5T,EAAM6T,SAGzB,OAAO9S,OAAAyG,EAAA,EAAAzG,CAAA,GAAMf,EAAb,CAAoBY,MAAO0T,MAQzBC,GAAe,SAAC3T,GAClB,OAAQA,GACJ,KAAK,EACD,OAAO,EACX,KAAK,EACD,OAAO,EACX,KAAK,EACD,OAAO,EACX,KAAK,EACD,OAAO,EACX,KAAK,EACD,OAAO,EACX,KAAK,EACL,QACI,OAAO,IAIN4T,GAAgBR,GAAc,SAAAlS,EAAsBoS,GAAtB,IAAGtT,EAAHkB,EAAGlB,MAAUZ,EAAbe,OAAAqD,EAAA,EAAArD,CAAAe,EAAA,kBAAAf,OAAAyG,EAAA,EAAAzG,CAAA,GACpCf,EADoC,CAEvCY,MAAO2T,GAAa3T,OAGlB0F,GAAY,SAACtG,EAAOkU,GACtB,OAAQlU,EAAMf,SACV,KAAKjC,EAAUC,GACX,OAAOkX,GAAYnU,EAAOkU,GAC9B,KAAKlX,EAAUE,KACX,OAAOkX,GAAcpU,EAAOkU,GAChC,KAAKlX,EAAUG,OACX,OAAOkX,GAAgBrU,EAAOkU,GAClC,KAAKlX,EAAUK,KACX,OAAOmX,GAAcxU,EAAOkU,GAChC,KAAKlX,EAAUM,KACX,OAvCU,SAAAqD,EAAsBuT,GAAtB,IAAGtT,EAAHD,EAAGC,MAAUZ,EAAbe,OAAAqD,EAAA,EAAArD,CAAAJ,EAAA,kBAAAI,OAAAyG,EAAA,EAAAzG,CAAA,GACff,EADe,CAElBY,MAAOA,EAAQ,IAqCA6T,CAAczU,GACzB,QACI,OAAOA,IAIb0U,GAAUV,GAAc,SAAChU,EAAD4C,GAAA,IAAUsB,EAAVtB,EAAUsB,EAAGC,EAAbvB,EAAauB,EAAb,OAAApD,OAAAyG,EAAA,EAAAzG,CAAA,GAA2Bf,EAA3B,CAAkCkE,IAAGC,unEClEnE,IAAMwQ,GAAmBnW,IAAOC,IAAVmW,MAMhBC,GAAajX,YAAHkX,MAOVC,GAAcnX,YAAHoX,MAOXC,GAAiBzW,IAAOyN,OAAViJ,KAgBN,SAAAlW,GAAA,OAAAA,EAAGqD,MAAkB8J,YAUV0I,GAQAE,IASnBI,GAAmB3W,IAAOC,IAAV2W,MAUhBC,GAAe7W,IAAOC,IAAV6W,KAeD,SAAA5V,GAAA,OAAAA,EAAG2C,MAAkBkT,sBAIhC7P,GAAYlH,IAAOyN,OAAVuJ,MAgBTC,GAAoB,CACtB,CACItV,GAAI,EACJlB,QAASjC,EAAUC,GACnB2D,MAAO,EACPiT,QAAS,EACT6B,YAAa,qBACbC,QAASxB,IAEb,CACIhU,GAAI,EACJlB,QAASjC,EAAUE,KACnB0D,MAAO,EACPiT,QAAS,EACT6B,YAAa,mBACbC,QAASvB,IAEb,CACIjU,GAAI,EACJlB,QAASjC,EAAUK,KACnBuD,MAAO,EACPiT,QAAS,EACT6B,YAAa,gCACbC,QAASnB,IAEb,CACIrU,GAAI,EACJlB,QAASjC,EAAUG,OACnByD,MAAO,EACPiT,QAAS,EACT6B,YAAa,oBACbC,QAAStB,IAEb,CACIlU,GAAI,EACJlB,QAASjC,EAAUI,QACnBwD,MAAO,EACPiT,QAAS,EACT6B,YAAa,uCAEjB,CACIvV,GAAI,EACJlB,QAASjC,EAAUM,KACnBsD,MAAO,EACPiT,QAAS,EACT6B,YAAa,kCAqDNE,GAjDE,WAAM,IAAAhN,EACeC,mBAAS,GADxBK,EAAAnI,OAAAoI,GAAA,EAAApI,CAAA6H,EAAA,GACZiN,EADY3M,EAAA,GACD4M,EADC5M,EAAA,GAAA6M,EAE2BlN,mBAAS4M,IAFpCO,EAAAjV,OAAAoI,GAAA,EAAApI,CAAAgV,EAAA,GAEZE,EAFYD,EAAA,GAEKE,EAFLF,EAAA,GAIbG,EAAUN,GAAa,EACvBO,EAAQP,GAAaJ,GAAkB9T,OAAS,EAEhD0U,EAAW,SAACC,GAAD,OAAeR,EAC5BS,iBAAMV,EAAYS,EAAW,EAAGb,GAAkB9T,OAAS,KAc/D,OAFA6U,QAAQC,IAAI,kBAAmBR,GAG3B3U,EAAAC,EAAAC,cAACmT,GAAD,KACIrT,EAAAC,EAAAC,cAACyT,GAAD,CAAgBxT,UAAS,QAAAX,OAAUsV,EAAQ,UAAY,IAAMzP,QAAS,kBAAM0P,GAAU,IAAIK,SAAUP,GAApG,KAGA7U,EAAAC,EAAAC,cAACyT,GAAD,CAAgBxT,UAAS,SAAAX,OAAWqV,EAAU,UAAY,IAAMxP,QAAS,kBAAM0P,EAAS,IAAIK,SAAUN,GAAtG,KAIA9U,EAAAC,EAAAC,cAAC2T,GAAD,CAAkBlP,MAAO,CAAExB,MAAK,GAAA3D,OAAgC,IAA3B2U,GAAkB9T,OAAvB,KAAwCmR,KAAI,GAAAhS,QAAkB,IAAb+U,EAAL,OACvEI,EAAgBpU,IAAI,SAAAvB,GAAA,IAAGH,EAAHG,EAAGH,GAAIlB,EAAPqB,EAAOrB,QAAS2B,EAAhBN,EAAgBM,MAAO8U,EAAvBpV,EAAuBoV,YAAaC,EAApCrV,EAAoCqV,QAApC,OACjBrU,EAAAC,EAAAC,cAAC6T,GAAD,CAAczT,IAAKzB,GACfmB,EAAAC,EAAAC,cAACmV,GAAD,CAAWhQ,QAAS,WAChBgP,GAxBA,SAACxV,GACrB+V,EAAmBD,EAAgBpU,IAAI,SAACoG,GACpC,OAAKA,EAAI0N,QACLxV,IAAO8H,EAAI9H,GAAW8H,EAEnBA,EAAI0N,QAAQ1N,EAAK,CAAE9H,OAHD8H,KAsBE9B,CAAgBhG,KAE3BmB,EAAAC,EAAAC,cAACqF,GAAD,CAAiB5H,QAASA,EAAS2B,MAAOA,EAAO1B,SAAU,IACvDoC,EAAAC,EAAAC,cAACsF,GAAD,CAAS7H,QAASA,EAAS2B,MAAOA,EAAO1B,SAAU,OAG3DoC,EAAAC,EAAAC,cAAA,SAAIkU,yvBCtM5B,IAAMkB,GAAapY,IAAOxC,EAAV6a,MAMVC,GAAStY,IAAOC,IAAVsY,KAMoB,SAAA/X,GAAA,OAAAA,EAAGqD,MAAkB2U,UAM/CC,GAAOzY,IAAOxC,EAAVkb,MAIJC,GAAa3Y,IAAOC,IAAV2Y,MAQVC,GAAe7Y,IAAOC,IAAV6Y,KACO,SAAA5X,GAAA,OAAAA,EAAG2C,MAAkB2U,UAsD/BO,GAlDG,SAAAjX,GAA+BA,EAA5BmO,YAA4B,IAAZ5N,EAAYE,OAAAqD,EAAA,EAAArD,CAAAT,EAAA,iBAC7C,OACIgB,EAAAC,EAAAC,cAACkN,GAAD,CAAOlC,iBAAe,GAClBlL,EAAAC,EAAAC,cAACsV,GAAD,oBAEAxV,EAAAC,EAAAC,cAACyV,GAAD,uCAIA3V,EAAAC,EAAAC,cAACoV,GAAD,KACItV,EAAAC,EAAAC,cAAC2V,GAAD,KACI7V,EAAAC,EAAAC,cAACsF,GAAD,CAAS7H,QAASjC,EAAUC,GAAI2D,MAAO,EAAG1B,SAAU,MAExDoC,EAAAC,EAAAC,cAAC2V,GAAD,KACI7V,EAAAC,EAAAC,cAACsF,GAAD,CAAS7H,QAASjC,EAAUC,GAAI2D,MAAO,EAAG1B,SAAU,MAExDoC,EAAAC,EAAAC,cAAC2V,GAAD,KACI7V,EAAAC,EAAAC,cAACsF,GAAD,CAAS7H,QAASjC,EAAUC,GAAI2D,MAAO,EAAG1B,SAAU,OAI5DoC,EAAAC,EAAAC,cAACyV,GAAD,iDAIA3V,EAAAC,EAAAC,cAACoV,GAAD,KACItV,EAAAC,EAAAC,cAAC6V,GAAD,KACI/V,EAAAC,EAAAC,cAACgR,GAAU3R,EAAM+J,SAIzBtJ,EAAAC,EAAAC,cAACyV,GAAD,6CAIA3V,EAAAC,EAAAC,cAACiR,GAAD,CAAOrM,MAAO,CAAEI,KAAM,EAAGD,MAAO,GAAIsL,IAAK,MAEzCvQ,EAAAC,EAAAC,cAACyV,GAAD,wCAIA3V,EAAAC,EAAAC,cAACsV,GAAD,sBAIAxV,EAAAC,EAAAC,cAACgW,GAAD,kfC3EZ,IAAMC,GAAelB,IAAM,GAAI,IAEzBmB,GAAS,CACXC,MAAO,UACPC,SAAU,UACVC,aAAc,UACdC,aAAc,UACdC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,UAAW,UACXC,UAAW,UACXC,IAAK,UACLC,KAAM,UACNC,MAAO,UACPC,OAAQ,UACRC,MAAO,WAGLC,GAAkB,CACpBf,UAEAvL,WAAYuL,GAAOE,SACnBrC,oBAAqBmC,GAAOK,SAE5BpQ,WAAY+P,GAAOC,MACnB7I,oBAAqB4I,GAAOQ,UAC5BlB,QAASU,GAAOO,SAEhBtI,OAAQ,CACJhI,WAAY+P,GAAOQ,UACnB3H,gBAAiBmH,GAAOC,MACxBjH,KAAMgH,GAAOE,SACbhI,cAAe8H,GAAOK,UAG1B3R,MAAO,CACH4K,OAAQ0G,GAAOM,SACftG,aAAc,kBACdlL,KAAMkR,GAAOK,SACbxG,MAAOmG,GAAOY,MACd7G,QAASiG,GAAOa,OAChB/G,OAAQkG,GAAOU,KAGnB9V,KAAM,CACFE,IAAKkV,GAAOE,SACZpU,GAAIkU,GAAOU,IACX7V,KAAMmV,GAAOW,KACbvV,OAAQ4U,GAAOa,OACf7V,QAASgV,GAAOK,SAChB3U,KAAMsU,GAAOc,QAYfE,IARc3X,OAAAyG,EAAA,EAAAzG,CAAA,GACb0X,GADa,CAGhB9Q,WAAY+P,GAAOG,aACnB/I,oBAAqB4I,GAAOI,aAC5Ba,mBAAoBjB,GAAOI,eAGVtZ,IAAOC,IAAVma,KASA,SAAA/X,GAAK,OAAIA,EAAMwB,MAAMsF,cAGjCkR,GAAgBra,IAAOC,IAAVqa,KAGD,SAAAjY,GAAK,OAAIA,EAAMwB,MAAMsF,aAGjCoR,GAAcC,YAAHC,KAEK,SAAApY,GAAK,OAAIA,EAAMwB,MAAMsF,aAarCuR,8MACFlZ,MAAQ,CAAEd,SAAU,KAYpBia,YAAc,kBAAM/Y,EAAKC,SAAS,iBAAO,CAAEnB,SAAUuY,IAAc2B,OAAOC,WAAa,IAAM5b,2FATzFiD,KAAKyY,cAELC,OAAOE,iBAAiB,SAAU5Y,KAAKyY,4DAIvCC,OAAOG,oBAAoB,SAAU7Y,KAAKyY,8CAMzBC,OAAOI,WAAW,gCAAgCC,QAAnE,IACMpX,EAAQoW,GAFTpX,EAODX,KAAKG,MAFLwS,EALChS,EAKDgS,UACAqG,EANCrY,EAMDqY,MAIAxa,EACAwB,KAAKV,MADLd,SAGJ,OACIoC,EAAAC,EAAAC,cAACmY,EAAA,EAAD,CAAetX,MAAOA,GAClBf,EAAAC,EAAAC,cAACuX,GAAD,MACAzX,EAAAC,EAAAC,cAACoY,GAAA,EAAD,KACItY,EAAAC,EAAAC,cAAA,QAAMsL,KAAK,cAAc+M,QAASxX,EAAMyM,uBAE5CxN,EAAAC,EAAAC,cAACkX,GAAD,KACIpX,EAAAC,EAAAC,cAACsY,GAAkBpZ,KAAKG,OACxBS,EAAAC,EAAAC,cAACuY,GAAkBrZ,KAAKG,OACxBS,EAAAC,EAAAC,cAACqX,GAAD,KACIvX,EAAAC,EAAAC,cAACwY,GAADjZ,OAAAW,OAAA,GAAehB,KAAKG,MAApB,CAA2B3B,SAAUA,KACrCoC,EAAAC,EAAAC,cAACyY,GAAmBvZ,KAAKG,QAG5BwS,IAAc9V,GACX+D,EAAAC,EAAAC,cAAC0Y,GAAkBxZ,KAAKG,OAG3B6Y,IAAUlc,GACP8D,EAAAC,EAAAC,cAAC2Y,GAAczZ,KAAKG,gBA/C1BmB,aAuDHoK,eAhES,SAACpM,GAAD,OAAWA,GAER,SAACqM,GAAD,MAAe,CACtC/F,UAAW,SAACnG,GAAD,OAAQkM,EAAS,CAAEE,KAAMtQ,EAAQE,WAAYgE,QACxDsO,YAAa,kBAAMpC,EAAS,CAAEE,KAAMtQ,EAAQY,cAC5C2S,UAAW,SAACkK,GAAD,OAAWrN,EAAS,CAAEE,KAAMtQ,EAAQa,WAAY4c,WAC3DpN,WAAY,kBAAMD,EAAS,CAAEE,KAAMtQ,EAAQc,iBA0DhCqP,CAA6C8M,mDCjKtDkB,GAAkB,SAACnb,GAAyB,IAAhB4U,EAAgBrL,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,GAAAA,UAAA,GAAN,EACxC,OAAQvJ,GACJ,KAAKjC,EAAUM,KACX,OAAOuW,EACX,QACI,OAAOD,GAAQC,KAWZwG,GAPQ,SAACpb,GAAD,IAAU4U,EAAVrL,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,GAAAA,UAAA,GAAoB,EAApB,MAA2B,CAC9CrI,GAAIma,aAAO,GACXrb,UACA4U,UACAjT,MAAOwZ,GAAgBnb,EAAS4U,KCXrB0G,GANS,SAACC,GAAD,OAAW,SAACtW,EAAGC,GAAJ,OAAUqW,EAAMvM,KAAK,SAAChG,GAAD,OACpDA,GACAA,EAAI/D,IAAMA,GACV+D,EAAI9D,IAAMA,qECGRsW,GAAiB,SAACxS,EAAKyS,GAAN,OACnBzS,GACAyS,GACAzS,EAAIrH,QAAU8Z,EAAQ9Z,OAuDpB+Z,GAAQ,SAAC1S,GAAD,OAASA,EAAI9H,IACrBya,GAAmBC,KAAeF,IAClCG,GAAWC,KAAOJ,IAyBTK,GAvBK,SAAChb,GACjB,IAAIib,EAzDsB,SAACT,GAI3B,IAHA,IAAMU,EAASX,GAAgBC,GACzBW,EAAc,GAEXhX,EAAI,EAAGA,EAAIzG,EAAcyG,IAG9B,IAFA,IAAIiX,EAAY,GAEPlX,EAAI,EAAGA,EAAIzG,EAAayG,IAAK,CAClC,IAAM+D,EAAMiT,EAAOhX,EAAGC,GAChBuW,EAAUQ,EAAOhX,EAAI,EAAGC,GAE9BiX,EAAUC,KAAKpT,GAEf,IAAMqT,EAAWb,GAAexS,EAAKyS,IAEhCY,GAAYF,EAAUzZ,QzBmBP,GyBlBhBwZ,EAAYE,KAAKD,GAGhBE,IAAUF,EAAY,IAInC,OAAOD,EAkCgBI,CAAsBvb,GACzCwb,EAhCoB,SAAChB,GAIzB,IAHA,IAAMU,EAASX,GAAgBC,GACzBW,EAAc,GAEXjX,EAAI,EAAGA,EAAIzG,EAAayG,IAG7B,IAFA,IAAIkX,EAAY,GAEPjX,EAAI,EAAGA,EAAIzG,EAAcyG,IAAK,CACnC,IAAM8D,EAAMiT,EAAOhX,EAAGC,GAChBuW,EAAUQ,EAAOhX,EAAGC,EAAI,GAE9BiX,EAAUC,KAAKpT,GAEf,IAAMqT,EAAWb,GAAexS,EAAKyS,IAEhCY,GAAYF,EAAUzZ,QzBPP,GyBQhBwZ,EAAYE,KAAKI,KAAQL,IAGxBE,IAAUF,EAAY,IAInC,OAAOD,EASeO,CAAoB1b,GAe1C,OAZAib,EAAmBA,EAAiBpZ,IAAI,SAAC8Z,GACrC,IAAMC,EAAoBJ,EAAgBvN,KAAK,SAAC4N,GAAD,OAAYjB,GAAiB,CACxEiB,EACAF,MAGJ,OAAKC,GAELJ,EAAkBA,EAAgBjb,OAAO,SAACsb,GAAD,OAAYA,IAAWD,IACzDd,GAAQ,GAAAha,OAAAC,OAAAC,EAAA,EAAAD,CAAK4a,GAAL5a,OAAAC,EAAA,EAAAD,CAAgB6a,MAHAD,IAMnC,GAAA7a,OAAAC,OAAAC,EAAA,EAAAD,CACOka,GADPla,OAAAC,EAAA,EAAAD,CAEOya,KCrELM,GAAiB,WAGnB,IAFA,IAAI9T,GAEIA,GAAa+T,GAAiB/T,GAAWrG,QAC7CqG,EAbJ+J,KAAM,kBAAMsI,GAAerd,EAAUC,KAAKQ,EAAcC,GACvDmE,IAAI,SAACoG,EAAKC,GACP,IAAMhE,EAAIgE,EAAIzK,EACR0G,EAAI2P,KAAKC,MAAM7L,EAAIzK,GAEzB,OAAOsD,OAAAyG,EAAA,EAAAzG,CAAA,GAAKkH,EAAZ,CAAiB/D,IAAGC,QAWxB,OAAO6D,GAGLgU,GAAc,SAAChc,EAAOkU,GAAR,OAAmBlU,EAAM6B,IAAI,SAACoa,GAAD,OPiDlC,SAACjc,EAAQkU,GACpB,OAAQA,EAAO3H,MACX,KAAKtQ,EAAQE,WACT,OAAOmK,GAAUtG,EAAOkU,GAC5B,KAAKjY,EAAQK,SACT,OAAOoY,GAAQ1U,EAAOkU,GAC1B,QACI,OAAOlU,GOxD4Ckc,CAAWD,EAAU/H,MAM9EiI,GAAgB,SAACnc,GACnB,IAAMkb,EAASX,GAAgBva,GAE/B,OAAOA,EAAMiO,KAAK,SAAAvO,GAAA,IAAGwE,EAAHxE,EAAGwE,EAAGC,EAANzE,EAAMyE,EAANzE,EAASS,GAAT,OAAkBgE,EAAIzG,EAAe,IAAMwd,EAAOhX,EAAGC,EAAI,MCpCzEiY,GAAe,CAAE5V,KAAM,EAAGD,MAAO,GAAIsL,IAAK,yBCM1CwK,GAAW9F,IAAM,EAAG+F,KAEpBC,GAAQ,SAAA3b,GAAK,OAAIkT,KAAKyI,MAAM3b,IAC5B6V,GAAM,SAAC7V,GAAD,OAAWkT,KAAK0I,MAAM5b,IAG5B6b,GAAe,SAAC7R,GAAD,OAAWyR,GAASE,GAAmB,EAAb9F,GAAI7L,MAC7C8R,GAAe,SAAC9R,GAAD,OAAWyR,GAASE,GAAmB,EAAb9F,GAAI7L,IAAc,IAC3D+R,GAAiB,SAAC/R,GAAD,OAPThK,EAO0Byb,GAASE,GAAmB,EAAb9F,GAAI7L,IAAc,KAPlDkJ,KAAKC,MAAMnT,GAApB,IAAAA,GAQRgc,GAAkB,SAAChS,GAAD,OAAWyR,GAASE,GAAmB,IAAb9F,GAAI7L,IAAgB,IAChEiS,GAAe,SAACjS,GAClB,OAAIA,GAAS,IAAWA,EAAQ,IAAM,EAAI,EACnC,GAGLkS,GAAe,WACjB,IADqC,IAAnBC,EAAmBvU,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,GAAAA,UAAA,GAAP,GACrBN,EAAI,EAAGA,EAAI6U,EAAUpb,OAAQuG,IAAK,CACvC,IAAMtH,EAAQmc,EAAU7U,GAAGtH,MAE3B,GACImc,EAAU7U,EAAI,IAAM6U,EAAU7U,EAAI,GAAGtH,QAAUA,GAC/Cmc,EAAU7U,EAAI,IAAM6U,EAAU7U,EAAI,GAAGtH,QAAUA,EAG/C,OADA4V,QAAQC,IAAI,YAAasG,EAAW7U,EAAGA,EAAE,EAAGA,EAAE,IACvC,EAIf,OAAO,GAGL8U,GAAe,SAACpS,GAiBlB,IAAImS,EAhBJvG,QAAQC,IACJ,aAAc7L,EACd,KA7BsB,GA8BtB,OAAQ6R,GAAa7R,GACrB,OAAQ8R,GAAa9R,GACrB,SAAU+R,GAAe/R,GACzB,UAAWgS,GAAgBhS,GAC3B,OAAQiS,GAAajS,GACrB,QAnCsB,GAoCd6R,GAAa7R,GACb+R,GAAe/R,GACfgS,GAAgBhS,GAChB8R,GAAa9R,GACbiS,GAAajS,IAIzB,IAAIqS,EAAW,EAEf,GACIF,EAAYG,KAAO,GAAApc,OAAAC,OAAAC,EAAA,EAAAD,CACZgR,KAAM,kBAAMsI,GAAerd,EAAUC,KAhDtB,KA+CH8D,OAAAC,EAAA,EAAAD,CAEZgR,KAAM,kBAAMsI,GAAerd,EAAUE,OAAOuf,GAAa7R,KAF7C7J,OAAAC,EAAA,EAAAD,CAGZgR,KAAM,kBAAMsI,GAAerd,EAAUG,SAASwf,GAAe/R,KAHjD7J,OAAAC,EAAA,EAAAD,CAIZgR,KAAM,kBAAMsI,GAAerd,EAAUI,UAAUwf,GAAgBhS,KAJnD7J,OAAAC,EAAA,EAAAD,CAKZgR,KAAM,kBAAMsI,GAAerd,EAAUK,OAAOqf,GAAa9R,KAL7C7J,OAAAC,EAAA,EAAAD,CAMZgR,KAAM,kBAAMsI,GAAerd,EAAUM,OAAOuf,GAAajS,OAGhEqS,UACKA,EAAW,GAAKH,GAAaC,IAEtC,OAAOA,GAGLjB,GAAiB,iBAAO,CAC1BlR,MAAO,EACPoC,YAAa,EACbC,aAAc+P,GAAa,KC5EzBZ,GAAe7e,ECCf6e,GAAe,CACjBhP,OAAQkN,eACRjN,UAAW,IAAItC,KACfuC,QAAS,MCKE6P,gBAAgB,CAC3BnV,UL+CW,WAAsC,IAArChI,EAAqCwI,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,GAAAA,UAAA,GAA7BsT,KAAkB5H,EAAW1L,UAAA7G,OAAA,EAAA6G,UAAA,QAAAC,EACjD,OAAQyL,EAAO3H,MACX,KAAKtQ,EAAQE,WACT,OAAO6f,GAAYhc,EAAOkU,GAC9B,KAAKjY,EAAQG,WACT,OAjCM,SAAC4D,EAAOkU,GAAR,OAAmBlU,EAAMO,OAAO,SAAC0b,GAAD,OAAcA,EAAS9b,KAAO+T,EAAO/T,KAiCpEid,CAAUpd,EAAOkU,GAC5B,KAAKjY,EAAQI,QACT,OAjCG,SAAC2D,EAADhB,GAAA,IAAUiJ,EAAVjJ,EAAUiJ,IAAV,SAAAnH,OAAAC,OAAAC,EAAA,EAAAD,CAA0Bf,GAA1B,CAAiCiI,IAiC7BoV,CAAOrd,EAAOkU,GACzB,KAAKjY,EAAQM,aACT,OA3BQ,SAACyD,EAAOkU,GAIxB,IAHA,IAAIoJ,EAAetd,EACfud,EAAapB,GAAcmB,GAExBC,GACHD,EAAetB,GAAYsB,EAAc,CACrC/Q,KAAMtQ,EAAQK,SACd6D,GAAIod,EAAWpd,GACf+D,EAAGqZ,EAAWrZ,EACdC,EAAGoZ,EAAWpZ,EAAI,IAGtBoZ,EAAapB,GAAcmB,GAG/B,OAAOA,EAYQE,CAAYxd,GACvB,KAAK/D,EAAQY,WACT,OAAOif,KACX,QACI,OAAO9b,IK3Df2K,MCTW,WAAkC,IAAjC3K,EAAiCwI,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,GAAAA,UAAA,GAF5B,EAEiB0L,EAAW1L,UAAA7G,OAAA,EAAA6G,UAAA,QAAAC,EAC7C,OAAQyL,EAAO3H,MACX,KAAKtQ,EAAQC,UACT,OAAO8D,EAAQkU,EAAOvJ,MAAQuJ,EAAOuJ,WACzC,KAAKxhB,EAAQY,WACT,OAPS,EAQb,QACI,OAAOmD,IDGfqG,aEVW,WAAkC,IAAjCrG,IAAiCwI,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,KAAAA,UAAA,GAC7C,QAD6CA,UAAA7G,OAAA,EAAA6G,UAAA,QAAAC,GAC9B8D,MACX,KAAKtQ,EAAQO,cACT,OAAO,EACX,KAAKP,EAAQQ,aAEb,KAAKR,EAAQY,WACT,OATS,EAUb,QACI,OAAOmD,IFEfoG,MJXW,WAAkC,IAAjCpG,EAAiCwI,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,GAAAA,UAAA,GAAzB4T,GAAclI,EAAW1L,UAAA7G,OAAA,EAAA6G,UAAA,QAAAC,EAC7C,OAAQyL,EAAO3H,MACX,KAAKtQ,EAAQE,WACT,OAAO4E,OAAAyG,EAAA,EAAAzG,CAAA,GAAKf,EAAZ,CAAmBwG,KAAMxG,EAAMwG,KAAO,IAC1C,KAAKvK,EAAQS,UACT,OAAOqE,OAAAyG,EAAA,EAAAzG,CAAA,GAAKf,EAAZ,CAAmBuG,MAAOuN,KAAKJ,IAAI1T,EAAMuG,MAAQ2N,EAAO9N,MAAOpG,EAAMwG,KAAOxG,EAAM6R,OACtF,KAAK5V,EAAQY,WACT,OAAOuf,GACX,QACI,OAAOpc,IIGf4K,MHiFW,WAAsC,IAArC5K,EAAqCwI,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,GAAAA,UAAA,GAA7BsT,KAAkB5H,EAAW1L,UAAA7G,OAAA,EAAA6G,UAAA,QAAAC,EACjD,OAAQyL,EAAO3H,MACX,KAAKtQ,EAAQI,QACT,OAnBG,SAAC2D,EAAOkU,GACnB,IAAItJ,EAAQ5K,EAAM4K,MACdqC,EAAejN,EAAMiN,aAAaoB,MAAM,GAO5C,OAL4B,IAAxBpB,EAAatL,SAEbsL,EAAe+P,GADfpS,GAAgB,IAIb7J,OAAAyG,EAAA,EAAAzG,CAAA,GACAf,EADP,CAEI4K,QACAqC,iBAOWoQ,CAAOrd,GAClB,KAAK/D,EAAQG,WACT,OAAO2E,OAAAyG,EAAA,EAAAzG,CAAA,GAAKf,EAAZ,CAAmBgN,YAAahN,EAAMgN,YAAc,IACxD,KAAK/Q,EAAQU,UACT,OAAOoE,OAAAyG,EAAA,EAAAzG,CAAA,GAAKf,EAAZ,CAAmB4K,MAAOsJ,EAAOtJ,MAAOqC,aAAc+P,GAAa9I,EAAOtJ,SAC9E,KAAK3O,EAAQY,WACT,OAAOif,KACX,QACI,OAAO9b,IG3FfqT,UFbW,WAAkC,IAAjCrT,EAAiCwI,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,GAAAA,UAAA,GAAzB4T,GACpB,QAD6C5T,UAAA7G,OAAA,EAAA6G,UAAA,QAAAC,GAC9B8D,MACX,KAAKtQ,EAAQW,SACT,OAAOW,EACX,KAAKtB,EAAQY,WACT,OAAOuf,GACX,QACI,OAAOpc,IEOfmN,SDTW,WAAkC,IAAjCnN,EAAiCwI,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,GAAAA,UAAA,GAAzB4T,GACpB,QAD6C5T,UAAA7G,OAAA,EAAA6G,UAAA,QAAAC,GAC9B8D,MACX,KAAKtQ,EAAQW,SACT,OAAOmE,OAAAyG,EAAA,EAAAzG,CAAA,GACAf,EADP,CAEIsN,QAAS,IAAIvC,OAErB,KAAK9O,EAAQY,WACT,MAAO,CACHuQ,OAAQkN,eACRjN,UAAW,IAAItC,KACfuC,QAAS,MAEjB,QACI,OAAOtN,ICJf0Z,MGfW,WAAkC,IAAjC1Z,EAAiCwI,UAAA7G,OAAA,QAAA8G,IAAAD,UAAA,GAAAA,UAAA,GAF5B,KAEiB0L,EAAW1L,UAAA7G,OAAA,EAAA6G,UAAA,QAAAC,EAC7C,OAAQyL,EAAO3H,MACX,KAAKtQ,EAAQa,WACT,OAAOoX,EAAOwF,MAClB,KAAKzd,EAAQc,YACT,OAAO,KACX,QACI,OAAOiD,yFCwBTqd,iBAcAK,iBA6BAC,iBA+CAC,iBA2BAC,IA9IJC,GAAQ,SAACC,GAAD,OAAc,IAAIC,QAAQ,SAAAC,GAAO,OAAI9c,WAAW8c,EAASF,MAEjEpD,GAAQ,SAAC1S,GAAD,OAASA,EAAI9H,IAErB+d,GAAgB,SAACC,GACnB,OAAQA,GACJ,KAAK,EACD,OAAO,EACX,KAAK,EACD,OAAO,IACX,KAAK,EACD,OAAO,IACX,KAAK,EACD,OAAO,IACX,QACI,OAAOrK,KAAKH,IAAwB,KAAnBwK,EAAc,GAAU,GAAK,MAIpDC,GAAqB,SAACD,EAAaE,GAGrC,OAAOA,GAFiBF,GAAe,EAAI,GAAK,KAKpD,SAAUd,GAAOiB,GAAjB,IAAAte,EAAA0a,EAAAxW,EAAAC,EAAA,OAAAoa,GAAAhd,EAAAid,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACkB,OADlBF,EAAAE,KAAA,EACwBC,eADxB,OAOI,OANM5e,EADVye,EAAAI,KAGUnE,EAAU1a,EAAM4K,MAAMqC,aAAa,GACnC/I,EAAIoa,EAAWpa,EACfC,GAAKzG,EALf+gB,EAAAE,KAAA,EAOUG,aAAI,CAAEvS,KAAMtQ,EAAQI,QAAS4L,IAAIlH,OAAAyG,EAAA,EAAAzG,CAAA,GAAM2Z,EAAP,CAAgBxW,IAAGC,QAP7D,OASI,OATJsa,EAAAE,KAAA,GASUb,GAAM,KAThB,QAWI,OAXJW,EAAAE,KAAA,GAWUG,aAAI,CAAEvS,KAAMtQ,EAAQM,eAX9B,yBAAAkiB,EAAAM,SAAAC,IAcA,SAAUtB,GAAiBuB,EAAYC,GAAvC,IAAAlf,EAAAmf,EAAAC,EAAAzU,EAAA0U,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxX,EAAA,OAAAsW,GAAAhd,EAAAid,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACkB,OADlBe,EAAAf,KAAA,EACwBC,eADxB,OAMI,OALM5e,EADV0f,EAAAb,KAGUM,EAAenf,EAAMgI,UAAUnG,IAAI8Y,IACnCyE,EAAeH,EAAW1e,OAAO,SAAA0H,GAAG,OAAI0X,KAAShF,GAAM1S,GAAMkX,KAJvEO,EAAAf,KAAA,EAMUiB,aAAIR,EAAavd,IAAI,SAACoG,GAAD,OAAS6W,aAAI,CAAEvS,KAAMtQ,EAAQG,WAAY+D,GAAI8H,EAAI9H,QANhF,OAQI,OARJuf,EAAAf,KAAA,EAQUb,GAAM,KARhB,OAUI,OAVJ4B,EAAAf,KAAA,GAUUG,aAAI,CAAEvS,KAAMtQ,EAAQM,eAV9B,QAcI,OAFMoO,EAASuT,GAAckB,EAAazd,QAAUyc,GAAmBgB,EAAazd,OAAQke,KAAMT,GAAcxe,OAZpH8e,EAAAf,KAAA,GAcUG,aAAI,CACNvS,KAAMtQ,EAAQC,UACdyO,MAAOA,EACP8S,WAAYyB,IAjBpB,QAoBI,OApBJQ,EAAAf,KAAA,GAoBUb,GAAM,KApBhB,QAAAuB,GAAA,EAAAC,GAAA,EAAAC,OAAA9W,EAAAiX,EAAAhB,KAAA,GAAAc,EAsBoBJ,EAtBpBU,OAAAC,YAAA,WAAAV,GAAAI,EAAAD,EAAAb,QAAAqB,KAAA,CAAAN,EAAAf,KAAA,SAuBQ,OADK1W,EAtBbwX,EAAA7e,MAAA8e,EAAAf,KAAA,GAuBctB,GAAOpV,GAvBrB,QAAAoX,GAAA,EAAAK,EAAAf,KAAA,iBAAAe,EAAAf,KAAA,iBAAAe,EAAAhB,KAAA,GAAAgB,EAAAO,GAAAP,EAAA,UAAAJ,GAAA,EAAAC,EAAAG,EAAAO,GAAA,QAAAP,EAAAhB,KAAA,GAAAgB,EAAAhB,KAAA,GAAAW,GAAA,MAAAG,EAAAU,QAAAV,EAAAU,SAAA,WAAAR,EAAAhB,KAAA,IAAAY,EAAA,CAAAI,EAAAf,KAAA,eAAAY,EAAA,eAAAG,EAAAS,OAAA,mBAAAT,EAAAS,OAAA,YA0BI,OA1BJT,EAAAf,KAAA,GA0BUb,GAAM,KA1BhB,yBAAA4B,EAAAX,SAAAqB,GAAA,kCA6BA,SAAUzC,GAAclE,GAAxB,IAAAyF,EAAAlf,EAAAqgB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxB,EAAA3B,EAAAoD,EAAAC,EAAAnY,UAAA,OAAA+V,GAAAhd,EAAAid,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,OACI,OAD6BO,EAAjCyB,EAAAhf,OAAA,QAAA8G,IAAAkY,EAAA,GAAAA,EAAA,GAAkD,EAAlDC,EAAAjC,KAAA,EACUb,GAAM,KADhB,UAGSrE,EAAQ9X,OAHjB,CAAAif,EAAAjC,KAAA,eAAAiC,EAAAC,OAAA,iBAKkB,OALlBD,EAAAjC,KAAA,EAKwBC,eALxB,OAKU5e,EALV4gB,EAAA/B,KAAAwB,GAAA,EAAAC,GAAA,EAAAC,OAAA9X,EAAAmY,EAAAlC,KAAA,GAAA8B,EAO2B/G,EAP3BqG,OAAAC,YAAA,WAAAM,GAAAI,EAAAD,EAAA7B,QAAAqB,KAAA,CAAAY,EAAAjC,KAAA,SAQQ,OADKM,EAPbwB,EAAA7f,MAAAggB,EAAAjC,KAAA,GAQcjB,GAAiBuB,EAAYC,GAR3C,QASQ,OATR0B,EAAAjC,KAAA,GAScb,GAAM,KATpB,QAAAuC,GAAA,EAAAO,EAAAjC,KAAA,iBAAAiC,EAAAjC,KAAA,iBAAAiC,EAAAlC,KAAA,GAAAkC,EAAAX,GAAAW,EAAA,UAAAN,GAAA,EAAAC,EAAAK,EAAAX,GAAA,QAAAW,EAAAlC,KAAA,GAAAkC,EAAAlC,KAAA,GAAA2B,GAAA,MAAAG,EAAAN,QAAAM,EAAAN,SAAA,WAAAU,EAAAlC,KAAA,IAAA4B,EAAA,CAAAM,EAAAjC,KAAA,eAAA4B,EAAA,eAAAK,EAAAT,OAAA,mBAAAS,EAAAT,OAAA,YAYyB,OAZzBS,EAAAjC,KAAA,GAY+BC,eAZ/B,WAYUtB,EAZVsD,EAAA/B,KAaU6B,EAAc3E,GAAiBuB,EAAatV,WAE9ChI,EAAM4K,MAAMA,QAAU0S,EAAa1S,MAAMA,MAfjD,CAAAgW,EAAAjC,KAAA,SAgBQ,OAhBRiC,EAAAjC,KAAA,GAgBcG,aAAI,CAAEvS,KAAMtQ,EAAQS,UAAW0J,MAAO,KAhBpD,QAmBI,OAnBJwa,EAAAjC,KAAA,GAmBUb,GAAM,KAnBhB,YAqBQ4C,EAAY/e,OArBpB,CAAAif,EAAAjC,KAAA,SAsBe,OAtBfiC,EAAAjC,KAAA,GAsBqBhB,GAAc+C,EAAaxB,EAAiB,GAtBjE,eAAA0B,EAAAC,OAAA,SAAAD,EAAA/B,MAAA,yBAAA+B,EAAA7B,SAAA+B,GAAA,kCA0BA,IAAMC,GAAc,CAChB,CAAC,EAAG,GACJ,EAAE,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GACxB,EAAE,EAAG,GAAW,CAAC,EAAG,GACpB,EAAE,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAGnBC,GAAoB,SAAChZ,GACvB,IAAMiZ,EAAW1G,GAAgBvS,GAUjC,OARsBA,EACjBzH,OAAO,SAAC0H,GAAD,OAASA,EAAIhJ,UAAYjC,EAAUM,MAAQ2K,EAAIrH,OAAS,IAC/DiB,IAAI,SAAAoG,GAAG,OACJ8Y,GACKlf,IAAI,SAAA7C,GAAA,IAAAU,EAAAqB,OAAAoI,GAAA,EAAApI,CAAA/B,EAAA,GAAEkiB,EAAFxhB,EAAA,GAAWyhB,EAAXzhB,EAAA,UAAwBuhB,EAAShZ,EAAI/D,EAAIgd,EAASjZ,EAAI9D,EAAIgd,KAC9D5gB,OAAO,SAAA0H,GAAG,QAAMA,OAMjC,SAAU2V,KAAV,IAAA5d,EAAAyZ,EAAA2H,EAAAC,EAAAC,EAAA,OAAA/C,GAAAhd,EAAAid,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,OACI,OADJ4C,EAAA5C,KAAA,EACUG,aAAI,CAAEvS,KAAMtQ,EAAQO,gBAD9B,OAGkB,OAHlB+kB,EAAA5C,KAAA,EAGwBC,eAHxB,UAGU5e,EAHVuhB,EAAA1C,OAIUpF,EAAUsC,GAAiB/b,EAAMgI,YAE3BrG,OANhB,CAAA4f,EAAA5C,KAAA,SAOQ,OAPR4C,EAAA5C,KAAA,EAOcb,GAAM,KAPpB,OAQQ,OARRyD,EAAA5C,KAAA,GAQchB,GAAclE,EAAS,GARrC,QAW2B,OAX3B8H,EAAA5C,KAAA,GAWiCC,eAXjC,WAWUwC,EAXVG,EAAA1C,OAYUwC,EAAgBL,GAAkBI,EAAepZ,YACrCrG,OAbtB,CAAA4f,EAAA5C,KAAA,SAcQ,OAdR4C,EAAA5C,KAAA,GAccb,GAAM,KAdpB,QAeQ,OAfRyD,EAAA5C,KAAA,GAechB,GAAc0D,EAAe,GAf3C,QAkBI,OAlBJE,EAAA5C,KAAA,GAkBUG,aAAI,CAAEvS,KAAMtQ,EAAQQ,eAlB9B,QAoBuB,OApBvB8kB,EAAA5C,KAAA,GAoB6BC,eApB7B,cAoBU0C,EApBVC,EAAA1C,MAqBmBzY,MAAMG,MAAQ+a,EAAWlb,MAAMI,MAAQ,GArB1D,CAAA+a,EAAA5C,KAAA,SAsBQ,OAtBR4C,EAAA5C,KAAA,GAsBcb,GAAM,KAtBpB,QAuBe,OAvBfyD,EAAA5C,KAAA,GAuBqBG,aAAI,CAAEvS,KAAMtQ,EAAQW,WAvBzC,eAAA2kB,EAAAV,OAAA,SAAAU,EAAA1C,MAAA,yBAAA0C,EAAAxC,SAAAyC,IA2BA,SAAU3D,KAAV,OAAAU,GAAAhd,EAAAid,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,OACI,OADJ8C,EAAA9C,KAAA,EACU+C,aAAUzlB,EAAQE,WAAYyhB,IADxC,wBAAA6D,EAAA1C,SAAA4C,IAIe9D,UCpJT+D,GCES,WACX,IAAMC,EAAiBC,eAgBjBF,EAd4BG,aAC9BC,wBAAa,CACTC,WAAW,EACXlE,UAAU,IAEdmE,gBAAK,CACDC,UAAW,kBACXC,aAAc,CACV,kBAGRP,EAX8BE,CAYhCM,KAEYC,CAA0BC,GAAaC,gBAAK,CACtDL,UAAW,qBAOf,OAJAN,EAAeY,IAAIC,IAEnBtJ,OAAOuJ,OAASf,EAETA,ED3BGgB,GAEdC,IAASC,OACLxhB,EAAAC,EAAAC,cAACuhB,EAAA,EAAD,CAAUnB,MAAOA,IACbtgB,EAAAC,EAAAC,cAACwhB,GAAD,CAAKpB,MAAOA,MAEjBqB,SAASC,eAAe","file":"static/js/main.775006ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-help.c70881f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-settings.9693a6fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/dicematch-logo-wide.715a1ddf.svg\";","export const ACTIONS = {\n    ADD_SCORE: 'ADD_SCORE',\n\n    UPDATE_DIE: 'UPDATE_DIE',\n    REMOVE_DIE: 'REMOVE_DIE',\n    ADD_DIE: 'ADD_DIE',\n    MOVE_DIE: 'MOVE_DIE',\n\n    CASCADE_DICE: 'CASCADE_DICE',\n\n    INPUT_DISABLE: 'INPUT_DISABLE',\n    INPUT_ENABLE: 'INPUT_ENABLE',\n\n    ADD_MOVES: 'ADD_MOVES',\n\n    SET_LEVEL: 'SET_LEVEL',\n\n    GAME_END: 'GAME_END',\n    GAME_RESET: 'GAME_RESET',\n\n    OPEN_MODAL: 'OPEN_MODAL',\n    CLOSE_MODAL: 'CLOSE_MODAL',\n};\n\nexport const DIE_TYPES = {\n    UP: 'UP',\n    DOWN: 'DOWN',\n    RANDOM: 'RANDOM',\n    BLOCKER: 'BLOCKER',\n    FLIP: 'FLIP',\n    BOMB: 'BOMB',\n}\n\nexport const GAME_STATES = {\n    ACTIVE: 'ACTIVE',\n    FINISHED: 'FINISHED',\n};\n\nexport const MODALS = {\n    HELP: 'HELP',\n    SETTINGS: 'SETTINGS',\n    SCORE: 'SCORE',\n};\n\nexport const BOARD_WIDTH = 5;\nexport const BOARD_HEIGHT = 6;\n\nexport const MIN_MATCH_LENGTH = 3;\n","import React from 'react';\nimport styled, { keyframes, css } from 'styled-components';\n\nimport { DIE_TYPES } from '../constants';\n\nconst ANIMATION_DUR = 200;\n\nconst scaleInVertical = keyframes`\n    0% { transform: scaleY(0); filter: brightness(0.5); }\n    100% { transform: scaleY(1); filter: brightness(1); }\n`;\n\nconst scaleOutVertical = keyframes`\n    0% { transform: scaleY(1); filter: brightness(1); }\n    100% { transform: scaleY(0); filter: brightness(0.5); }\n`;\n\nconst scaleInHorizontal = keyframes`\n    0% { transform: scaleX(0); filter: brightness(0.5); }\n    100% { transform: scaleX(1); filter: brightness(1); }\n`;\n\nconst scaleOutHorizontal = keyframes`\n    0% { transform: scaleX(1); filter: brightness(1); }\n    100% { transform: scaleX(0); filter: brightness(0.5); }\n`;\n\nconst shake = (degree) => keyframes`\n    0% {\n        transform: rotate(0deg);\n    }\n    25% {\n        transform: rotate(-${degree}deg);\n    }\n    50% {\n      transform: rotate(0deg);\n    }\n    75% {\n        transform: rotate(${degree}deg);\n    }\n`;\n\nconst getEnterAnimation = ({ dieType, diceSize, animate }) => {\n    if (!animate) return null;\n\n    switch (dieType) {\n        case DIE_TYPES.DOWN:\n            return css`\n                animation: ${scaleInVertical} ${ANIMATION_DUR}ms linear forwards;\n                transform-origin: top center;\n            `;\n        case DIE_TYPES.RANDOM:\n            return css`\n                animation: ${shake(10)} 10ms linear infinite;\n            `;\n        case DIE_TYPES.FLIP:\n            return css`\n                animation: ${scaleInHorizontal} 100ms ease-in-out forwards;\n            `;\n        default:\n            return css`\n                animation: ${scaleInVertical} ${ANIMATION_DUR}ms linear forwards;\n                transform-origin: bottom center;\n            `;\n    }\n};\n\nconst getExitAnimation = ({ dieType, diceSize }) => {\n    switch (dieType) {\n        case DIE_TYPES.DOWN:\n            return css`\n                animation: ${scaleOutVertical} ${ANIMATION_DUR}ms linear forwards;\n                transform-origin: bottom center;\n            `;\n        case DIE_TYPES.RANDOM:\n            return css`\n                animation: ${shake(10)} 10ms linear infinite;\n            `;\n        case DIE_TYPES.FLIP:\n            return css`\n                animation: ${scaleOutHorizontal} 100ms ease-in-out forwards;\n            `;\n        default:\n            return css`\n                animation: ${scaleOutVertical} ${ANIMATION_DUR}ms linear forwards;\n                transform-origin: top center;\n            `;\n    }\n}\n\nconst FaceContainer = styled.div`\n    position: relative;\n`;\n\nconst animatedChild = css`\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    transform: translate3d(0, 0, 0);\n`;\n\nconst CurrentChild = styled.div`\n    ${animatedChild}\n    ${getEnterAnimation}\n`;\n\nconst PrevChild = styled.div`\n    ${animatedChild}\n    ${getExitAnimation}\n`;\n\nclass AnimatedDieFace extends React.Component {\n    state = { prevChildren: [] };\n\n    componentWillReceiveProps({ value }) {\n        if (value !== this.props.value) {\n            const id = this.props.value;\n\n            this.setState((state) => ({\n                prevChildren: [\n                    ...state.prevChildren,\n                    {\n                        child: this.props.children,\n                        id: id,\n                        timeout: setTimeout(this.removePrevChild(id), ANIMATION_DUR)\n                    }\n                ]\n            }));\n        }\n    }\n\n    removePrevChild = (id) => () => (\n        this.setState(({ prevChildren }) => ({\n            prevChildren: prevChildren.filter((child) => child.id !== id),\n        }))\n    );\n\n    render() {\n        const { prevChildren } = this.state;\n        const { children, value } = this.props;\n\n        return (\n            <FaceContainer className=\"FACE\">\n                <CurrentChild {...this.props} animate={prevChildren.length} key={value}>\n                    {children}\n                </CurrentChild>\n\n                {prevChildren.map(({ child, id }) => <PrevChild {...this.props} key={id}>{child}</PrevChild>)}\n            </FaceContainer>\n        )\n    }\n}\n\nexport default AnimatedDieFace;\n","import { css, keyframes } from 'styled-components';\n\nimport { DIE_TYPES } from '../constants';\n\nconst flicker = keyframes`\n    0% { opacity: 0; }\n    50% { opacity: 1; }\n    100% { opacity: 0; }\n`;\n\nconst getDieColor = ({ dieType, value }) => {\n    switch (dieType) {\n        case DIE_TYPES.DOWN:\n            return css`\n                background: ${({ theme }) => theme.dice.down};\n\n                circle {\n                    fill: ${({ theme }) => theme.dice.pip};\n                    opacity: 0.7;\n                }\n            `;\n        case DIE_TYPES.BLOCKER:\n            return css`\n                background: ${({ theme }) => theme.dice.blocker};\n\n                circle {\n                    fill: ${({ theme }) => theme.dice.pip};\n                    opacity: 0.4;\n                }\n            `;\n        case DIE_TYPES.BOMB:\n            return css`\n                background: ${({ theme }) => theme.dice.blocker};\n\n                circle {\n                    fill: ${({ theme }) => theme.dice.random};\n                    animation: ${flicker} ${(value)*200}ms ease-in-out infinite;\n                }\n            `;\n        case DIE_TYPES.RANDOM:\n            return css`\n                background: ${({ theme }) => theme.dice.random};\n\n                circle {\n                    fill: ${({ theme }) => theme.dice.pip};\n                    opacity: 0.7;\n                }\n            `;\n        case DIE_TYPES.FLIP:\n            return css`\n                background: ${({ theme }) => theme.dice.flip};\n                border-radius: 50%;\n\n                circle {\n                    fill: ${({ theme }) => theme.dice.pip};\n                    opacity: 0.7;\n                }\n            `;\n        case DIE_TYPES.UP:\n        default:\n            return css`\n                background: ${({ theme }) => theme.dice.up};\n\n                circle {\n                    fill: ${({ theme }) => theme.dice.pip};\n                    opacity: 0.7;\n                }\n            `;\n    }\n};\n\nexport default getDieColor;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport getDieColor from './getDieColor';\n\nconst DieSvg = styled.svg`\n    border-radius: 15%;\n\n    ${getDieColor}\n`;\n\nconst getPos = (size, percent) => {\n    const margin = size * 0.25;\n    return margin + percent * (size - margin * 2);\n}\n\nconst Pip = ({ x, y, diceSize, ...rest }) => (\n    <circle r={diceSize * 0.08} cx={getPos(diceSize, x)} cy={getPos(diceSize, y)} />\n)\n\nconst Face0 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize} />\n);\n\nconst Face1 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0.5} y={0.5} />\n    </DieSvg>\n);\n\nconst Face2 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0} y={1} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0} />\n    </DieSvg>\n);\n\nconst Face3 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0} y={1} />\n        <Pip {...props} diceSize={diceSize} x={0.5} y={0.5} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0} />\n    </DieSvg>\n);\n\nconst Face4 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0} y={0} />\n        <Pip {...props} diceSize={diceSize} x={0} y={1} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0} />\n        <Pip {...props} diceSize={diceSize} x={1} y={1} />\n    </DieSvg>\n);\n\n\nconst Face5 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0} y={0} />\n        <Pip {...props} diceSize={diceSize} x={0} y={1} />\n        <Pip {...props} diceSize={diceSize} x={0.5} y={0.5} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0} />\n        <Pip {...props} diceSize={diceSize} x={1} y={1} />\n    </DieSvg>\n);\n\nconst Face6 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0} y={0} />\n        <Pip {...props} diceSize={diceSize} x={0} y={0.5} />\n        <Pip {...props} diceSize={diceSize} x={0} y={1} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0.5} />\n        <Pip {...props} diceSize={diceSize} x={1} y={1} />\n    </DieSvg>\n);\n\nconst DieFace = (props) => {\n    switch (props.value) {\n        case 1:\n            return <Face1 {...props} />;\n        case 2:\n            return <Face2 {...props} />;\n        case 3:\n            return <Face3 {...props} />;\n        case 4:\n            return <Face4 {...props} />;\n        case 5:\n            return <Face5 {...props} />;\n        case 6:\n            return <Face6 {...props} />;\n        default:\n            return <Face0 {...props} />;\n    }\n};\n\nexport default DieFace;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport AnimatedDieFace from './AnimatedDieFace';\nimport DieFace from './DieFace';\n\nimport { DIE_TYPES } from '../constants';\n\nconst DieButton = styled.div`\n    padding: 0;\n    border: 0;\n\n    background: transparent;\n\n    text-align: center;\n\n    cursor: pointer;\n    outline: none;\n`;\n\nconst Positioner = styled.div`\n    position: absolute;\n    transition: transform 0.5s ease-in;\n    perspective: 500px;\n    perspective-origin: 50% 50%;\n`;\n\nconst getInlineStyle = ({ x, y, diceSize }) => ({\n    transform: `translate(${diceSize * x}px, ${diceSize * y + 10}px)`\n});\n\nconst DiePositioner = ({ children, ...props }) => (\n    <Positioner style={getInlineStyle(props)}>\n        {children}\n    </Positioner>\n);\n\nclass Die extends React.Component {\n    shouldComponentUpdate({ value, x, y }) {\n        return !(\n            value === this.props.value &&\n            x === this.props.x &&\n            y === this.props.y\n        );\n    }\n\n    handleDieUpdate = () => {\n        const {\n            moves,\n            inputEnabled,\n            dieType,\n            updateDie,\n            id,\n        } = this.props;\n\n        if (\n            moves.limit - moves.used <= 0 ||\n            !inputEnabled ||\n            (dieType === DIE_TYPES.BLOCKER || dieType === DIE_TYPES.BOMB)\n        ) return;\n\n        updateDie(id);\n    }\n\n    render() {\n        const {\n            diceSize,\n            x,\n            y,\n            id,\n        } = this.props;\n\n        return (\n            <DiePositioner {...this.props}>\n                <DieButton {...this.props}\n                        onClick={this.handleDieUpdate}\n                        title={`id: ${id} x: ${x} y: ${y}`}>\n                    <AnimatedDieFace {...this.props}>\n                        <DieFace {...this.props} diceSize={diceSize - 2} />\n                    </AnimatedDieFace>\n                </DieButton>\n            </DiePositioner>\n        );\n    };\n}\n\nexport default Die;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Transition, TransitionGroup } from 'react-transition-group';\n\nimport Die from './Die';\n\nimport { BOARD_WIDTH, BOARD_HEIGHT } from '../constants';\n\nconst duration = 300;\n\nconst defaultStyle = {\n    transition: `opacity ${duration}ms ease-in`,\n    opacity: 0,\n}\n\nconst transitionStyles = {\n    entering: { opacity: 1 },\n    entered:  { opacity: 1 },\n    exiting:  { opacity: 0 },\n};\n\nconst Fade = ({ children, ...props }) => (\n    <Transition {...props} timeout={duration}>\n        {(state) => (\n            <span style={{ ...defaultStyle, ...transitionStyles[state] }}>\n                {children}\n            </span>\n        )}\n    </Transition>\n);\n\nconst BoardWrapper = styled.div`\n    padding: 0 10px;\n    overflow: hidden;\n    background: ${props => props.theme.background};\n`;\n\nconst Board = styled.div`\n    position: relative;\n`;\n\nconst getBoardSize = ({ diceSize }) => ({\n    width: diceSize * BOARD_WIDTH,\n    height: diceSize * BOARD_HEIGHT + 20,\n})\n\nconst GameBoard = ({ gameBoard, ...props }) => (\n    <BoardWrapper>\n        <Board style={getBoardSize(props)}>\n            <TransitionGroup>\n                {gameBoard.map((die, i) => (\n                    <Fade key={die.id}>\n                        <Die {...props} {...die} />\n                    </Fade>\n                ))}\n            </TransitionGroup>\n        </Board>\n    </BoardWrapper>\n);\n\nexport default GameBoard;\n","// Adapted from https://usehooks.com/useLocalStorage/\nimport { useState } from 'react';\n\nconst useLocalStorage = (key, initialValue, transformFn = JSON.parse) => {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? transformFn(item) : initialValue;\n        } catch (error) {\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore = value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        localStorage.setItem(key, JSON.stringify(valueToStore));\n    };\n\n    return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n    width: 100%;\n`;\n\nconst Th = styled.th`\n    font-weight: bold;\n    text-align: left;\n\n    &.last {\n        text-align: right;\n    }\n`;\n\nconst Td = styled.td`\n    text-align: left;\n\n    &.last {\n        text-align: right;\n    }\n`;\n\nconst ScoreEntry = styled.tr`\n    background: ${({ currentScore }) =>currentScore ? 'yellow' : 'transparent'}\n`;\n\nconst ScoreTable = ({ scores, currentScoreId }) => (\n    <Table>\n        <thead>\n        <tr>\n            <Th>\n                Score\n            </Th>\n            <Th>\n                Level\n            </Th>\n            <Th className='last'>\n                Date\n            </Th>\n        </tr>\n        </thead>\n        <tbody>\n        {scores.map(({ id, endTime, score, level }) => {\n            const isCurrentScore = currentScoreId === id;\n            const gameEndDate = endTime && new Date(endTime);\n            const gameEndDateFormat = gameEndDate.toLocaleDateString(undefined, { year: 'numeric', month: 'numeric', day: 'numeric' })\n\n            return (\n                <ScoreEntry key={id} currentScore={isCurrentScore}>\n                    <Td>\n                        {score}\n                    </Td>\n                    <Td>\n                        {level}\n                    </Td>\n                    <Td className='last'>\n                        {gameEndDateFormat}\n                    </Td>\n                </ScoreEntry>\n            );\n        })}\n        </tbody>\n    </Table>\n);\n\nexport default ScoreTable;\n","import React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { ACTIONS } from '../../constants';\nimport { connect } from 'react-redux';\n\nconst containerEnter = keyframes`\n    0% { opacity: 0; }\n    100% { opacity: 1; }\n`;\n\nconst modalEnter = keyframes`\n    0% { transform: scale(0.9); }\n    100% { transform: scale(1); }\n`;\n\nconst containerExit = keyframes`\n    0% { opacity: 1; }\n    50% { opacity: 1; }\n    100% { opacity: 0; }\n`;\n\nconst modalExit = keyframes`\n    0% { transform: scale(1); }\n    100% { transform: scale(0.9) }\n`;\n\nconst ModalContainer = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    padding: 1rem;\n    background: rgba(0, 0, 0, 0.7);\n\n    animation: ${containerEnter} 0.25s ease-in-out forwards;\n\n    &.closing {\n        animation: ${containerExit} 0.25s ease-in-out forwards;\n    }\n`;\n\nconst StyledModal = styled.div`\n    background: ${(({ theme }) => theme.background)};\n    padding: 1rem;\n    border-radius: 0.8rem;\n    text-align: center;\n    font-size: 1rem;\n\n    animation: ${modalEnter} 0.25s ease-in-out forwards;\n\n    .closing & {\n        animation: ${modalExit} 0.25s ease-in-out forwards;\n    }\n`;\n\nconst CloseButton = styled.button`\n    position: absolute;\n\n    top: 0;\n    right: 0;\n\n    width: 3rem;\n    height: 3rem;\n\n    border 0;\n\n    font-size: 1rem;\n    font-family: inherit;\n    color: ${(({ theme }) => theme.foreground)};\n\n    background: transparent;\n`;\n\nconst mapDispatchToProps = (dispatch) => ({\n    closeModal: () => dispatch({ type: ACTIONS.CLOSE_MODAL }),\n});\n\nconst Modal = ({ showCloseButton, children, closeModal }) => {\n    const [closing, setClosing] = useState();\n\n    const handleCloseClick = () => {\n        setClosing(true);\n        setTimeout(() => {\n            closeModal();\n            setClosing(false);\n        }, 250);\n    };\n\n    return (\n        <ModalContainer className={closing ? 'closing' : undefined}>\n            <StyledModal>\n                {showCloseButton && <CloseButton onClick={handleCloseClick}>X</CloseButton>}\n                {children}\n            </StyledModal>\n        </ModalContainer>\n    );\n}\n\nexport default connect(null, mapDispatchToProps)(Modal);\n","import React, { useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport useLocalStorage from '../../util/useLocalStorage';\n\nimport GameOverScoreTable from './GameOverScoreTable';\nimport Modal from './Modal';\n\nconst RestartButton = styled.button`\n    padding: 10px 20px;\n    border: 0;\n    background: lightblue;\n    font-size: 18px;\n    outline: none;\n`;\n\nconst ScoreDisplay = ({\n    name,\n    score,\n    level: { level, clearedDice, upcomingDice },\n    moves: { used },\n    tracking: { gameId, gameStart, gameEnd },\n    setInputActive,\n}) => {\n    const [scores, setScores] = useLocalStorage('dicematch.scores', []);\n\n    const currentGameScore = {\n        id: gameId,\n        score,\n        level,\n        diceCleared: clearedDice,\n        diceRemainingInLevel: upcomingDice.length,\n        turnsUsed: used,\n        startTime: gameStart,\n        endTime: gameEnd,\n    };\n\n    useEffect(() => {\n        if (scores.find(({ id }) => id === gameId)) return;\n\n        const previousScores = scores\n            .filter(score => !!score)\n            .sort((a, b) => b.score - a.score)\n            .slice(0, 10);\n\n        const newScores = [\n            ...previousScores,\n            currentGameScore\n        ].sort((a, b) => b.score - a.score);\n\n        setScores(newScores)\n    }, []);\n\n    return <GameOverScoreTable scores={scores} currentScoreId={gameId} setInputActive={setInputActive} />;\n};\n\nconst GameOverModal = ({ restartGame, ...props }) => {\n    return (\n        <Modal>\n            <h1>Game over</h1>\n\n            <ScoreDisplay {...props} />\n\n            <p>\n                <RestartButton onClick={restartGame}>\n                    Restart\n                </RestartButton>\n            </p>\n        </Modal>\n    );\n}\n\nexport default GameOverModal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { MODALS } from '../../constants';\n\nconst GameHeaderBarContainer = styled.div`\n    display: grid;\n\n    width: 100vw;\n\n    grid-template-columns: 3rem auto 3rem;\n    grid-template-rows: 3rem;\n\n    justify-items: center;\n    align-items: center;\n\n    background: ${props => props.theme.backgroundSecondary};\n`;\n\nconst Button = styled.button`\n    width: 3rem;\n    height: 3rem;\n\n    background-color: transparent;\n    background-size: 1.5rem;\n    background-position: center;\n    background-repeat: no-repeat;\n    border: 0;\n\n    font-size: 0;\n    color: rgba(0,0,0,0);\n`;\n\nconst HelpButton = styled(Button)`\n    width: 2rem;\n    height: 2rem;\n    background-image: url(${require('./icon-help.svg')});\n`;\n\nconst SettingsButton = styled(Button)`\n    width: 2rem;\n    height: 2rem;\n    background-image: url(${require('./icon-settings.svg')});\n`;\n\nconst GameTitle = styled.div`\n    height: 1.5rem;\n    width: 100%;\n\n    background-image: url(${require('./dicematch-logo-wide.svg')});\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n\n    font-size: 0;\n    color: rgba(0,0,0,0);\n`;\n\nconst GameHeaderBar = ({ openModal }) => (\n    <GameHeaderBarContainer>\n        <HelpButton onClick={() => openModal(MODALS.HELP)}>\n            Help\n        </HelpButton>\n        <GameTitle>\n            DICE MATCH\n        </GameTitle>\n        {/* <SettingsButton onClick={() => openModal(MODALS.SETTINGS)}>\n            Settings\n        </SettingsButton> */}\n    </GameHeaderBarContainer>\n);\n\nexport default GameHeaderBar;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport DieFace from '../DieFace';\n\nconst StyledUpcomingDice = styled.div`\n    grid-area: upcoming;\n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    .dice {\n        display: flex;\n        align-items: center;\n    }\n\n    .title {\n        margin-right: 1rem;\n\n        font-size: 0.8rem;\n        font-weight: bold;\n        color: ${({ theme }) => theme.header.textSecondary};\n    }\n`;\n\nconst MiniDie = styled.div`\n    margin-right: 1px;\n\n    svg {\n        display: block;\n    }\n`;\n\nconst More = styled.span`\n    margin-left: 0.3rem;\n    font-size: 0.8rem;\n    color: ${({ theme }) => theme.header.textSecondary};\n`;\n\nconst DICE_TO_SHOW = 5;\n\nconst UpcomingDice = ({ upcomingDice }) => {\n    const nextNiceDisplay = upcomingDice.slice(0, DICE_TO_SHOW);\n    const nextMore = upcomingDice.length - DICE_TO_SHOW;\n\n    return (\n        <StyledUpcomingDice>\n            <div className='dice'>\n                {nextNiceDisplay.slice(0, DICE_TO_SHOW).map((die, i) => (\n                    <MiniDie key={i}>\n                        <DieFace {...die} diceSize={18} />\n                    </MiniDie>\n                ))}\n\n                {nextMore > 0 && <More>+ {nextMore}</More>}\n            </div>\n        </StyledUpcomingDice>\n    );\n}\n\nexport default UpcomingDice;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport UpcomingDice from './UpcomingDice';\n\nconst StyledLevelContainer = styled.div`\n    grid-area: level;\n    padding: 0.3rem 0.5rem 0.5rem;\n    background: ${({ theme }) => theme.header.backgroundInset};\n    border-radius: 0.5rem\n`;\n\nconst StyledLevel = styled.div`\n    display: flex;\n\n    align-items: center;\n    margin-bottom: 0.3rem;\n\n    font-size: 0.8rem;\n    font-weight: bold;\n    color: ${({ theme }) => theme.header.text};\n\n    .title {\n        margin-right: 0.5rem;\n\n        font-size: 0.8rem;\n        font-weight: bold;\n        color: ${({ theme }) => theme.header.textSecondary};\n    }\n`;\n\nconst Level = ({ level, upcomingDice }) => {\n    return (\n        <StyledLevelContainer>\n            <StyledLevel>\n                <span className=\"title\">Level</span>\n                <span className=\"score\">{level}</span>\n            </StyledLevel>\n            <UpcomingDice upcomingDice={upcomingDice} />\n        </StyledLevelContainer>\n\n    );\n};\n\nexport default Level;\n","import React from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport times from 'lodash/fp/times';\n\nconst shake = (degree) => keyframes`\n    0% {\n        transform: translate(0px, 0px);\n    }\n    25% {\n        transform: translate(${degree}px, ${degree}px);\n    }\n    50% {\n        transform: translate(0px, 0px);\n    }\n    75% {\n        transform: translate(${-degree}px, ${-degree}px);\n    }\n`;\n\nconst StyledMoves = styled.div`\n    grid-area: moves;\n\n    display: grid;\n\n    width: auto;\n    height: 1.5rem;\n\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: auto;\n\n    border: 1px solid ${({ theme }) => theme.moves.border};\n    border-radius: 0.2rem;\n\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.header.backgroundInset};\n\n    overflow: hidden;\n\n    ${({ moves }) => moves < 6 && css`\n        color: red;\n    `}\n\n    ${({ moves }) => moves <= 3 && css`\n        animation: ${shake(0.25)} 0.1s linear infinite;\n    `}\n\n    ${({ moves }) => moves <= 2 && css`\n        animation: ${shake(0.5)} 0.1s linear infinite;\n    `}\n\n    ${({ moves }) => moves <= 1 && css`\n        animation: ${shake(1)} 0.1s linear infinite;\n    `}\n`;\n\nconst StepBox = styled.div`\n    height: 100%;\n\n    background: ${({ ready, moves, theme }) => {\n        if (!ready) return theme.moves.used;\n        if (moves <= 1) return theme.moves.danger;\n        if (moves <= 3) return theme.moves.warning;\n        return theme.moves.ready;\n    }};\n\n    border-right: 1px solid ${({ theme }) => theme.moves.insideBorder};\n    transition: background 0.1s linear;\n\n    &:last-of-type {\n        border-right: 0;\n    }\n`;\n\nconst Moves = ({ moves: { used, limit, cap } }) => {\n    const movesLeft = limit - used;\n\n    return (\n        <StyledMoves moves={movesLeft}>\n            {times((index) => (\n                <StepBox key={index} moves={movesLeft} ready={index < movesLeft} />\n            ), cap)}\n        </StyledMoves>\n    );\n}\n\nexport default Moves;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst StyledScore = styled.div`\n    grid-area: score;\n\n    display: flex;\n\n    align-items: center;\n    justify-content: space-between;\n\n    padding: 0.2rem 0.5rem;\n    background: ${({ theme }) => theme.header.backgroundInset};\n    border-radius: 0.5rem;\n\n    font-size: 1.2rem;\n    color: ${({ theme }) => theme.header.text};\n\n    .title {\n        font-size: 0.8rem;\n        font-weight: bold;\n        color: ${({ theme }) => theme.header.textSecondary};\n    }\n`;\n\nconst Score = ({ score }) => (\n    <StyledScore>\n        <span className=\"title\">Score</span>\n        <span className=\"score\">{score}</span>\n    </StyledScore>\n);\n\nexport default Score;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Level from './Level';\nimport Moves from './Moves';\nimport Score from './Score';\n\nconst GameStatus = styled.div`\n    display: grid;\n\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto;\n\n    column-gap: 0.5rem;\n    row-gap: 0.5rem;\n\n    padding: 0.5rem 0.5rem;\n\n    grid-template-areas:\n        \"level score\"\n        \"moves moves\";\n\n    background: ${({ theme }) => theme.backgroundSecondary};\n`;\n\nconst GameStatusBar = (props) => (\n    <GameStatus>\n        <Score {...props} />\n        <Level {...props.level} />\n\n        <Moves {...props} />\n    </GameStatus>\n);\n\nexport default GameStatusBar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport drop from 'lodash/fp/drop';\nimport { Transition, TransitionGroup } from 'react-transition-group';\n\nimport { GAME_STATES } from '../constants';\n\nconst Announcements = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    font-size: 48px;\n    pointer-events: none;\n    touch-action: none;\n    color: white;\n\n    text-shadow: 0 0 5px rgba(0,0,0,1);\n`;\n\nconst duration = 200;\n\nconst defaultStyle = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    textAlign: 'center',\n    width: 150,\n    height: 50,\n    marginLeft: -75,\n    marginTop: -25,\n    transition: `opacity ${duration}ms ease-out, transform ${duration}ms ease-out`,\n    opacity: 0,\n    transform: 'scale(0.5)',\n}\n\nconst transitionStyles = {\n    entering: { opacity: 0, transform: 'scale(0.5)' },\n    entered: { opacity: 1, transform: 'scale(1)' },\n    exiting: { opacity: 0, transform: 'scale(2.5)' },\n};\n\nconst Fade = ({ children, ...props }) => (\n    <Transition {...props} timeout={duration}>\n        {(state) => (\n            <div style={{ ...defaultStyle, ...transitionStyles[state] }}>\n                {children}\n            </div>\n        )}\n    </Transition>\n);\n\nclass ScoreAnnouncer extends React.Component {\n    state = {\n        announcements: [],\n    };\n\n    aId = 0;\n\n    componentWillReceiveProps({ score, gameState }) {\n        if (this.props.score !== score && this.props.gameState !== GAME_STATES.FINISHED) {\n            const value = score - this.props.score;\n            this.setState((state) => ({ announcements: [...state.announcements, { id: this.aId, value }] }));\n            this.aId = this.aId + 1;\n\n            setTimeout(() => {\n                this.setState((state) => ({ announcements: drop(1, state.announcements) }));\n            }, 1000);\n        }\n    }\n\n    render() {\n        const { announcements } = this.state;\n\n        return (\n            <Announcements>\n                <TransitionGroup>\n                    {announcements.map((change, i) => (\n                        <Fade key={change.id}>\n                            + {change.value}\n                        </Fade>\n                    ))}\n                </TransitionGroup>\n            </Announcements>\n        );\n    }\n}\n\nexport default ScoreAnnouncer;\n","export default (min, max) => (value) => {\n    if (value < min) return max;\n    if (value > max) return min;\n    return value;\n}\n","\nexport default (dieSize) => Math.floor(Math.random() * dieSize) + 1;\n","import circularClamp from '../util/circularClamp';\nimport rollDie from '../util/rollDie';\n\nimport { ACTIONS, DIE_TYPES } from '../constants';\n\nconst ensureIdMatch = (subReducer) => (state, action) => (\n    state.id === action.id ?\n        subReducer(state, action) :\n        state\n);\n\nexport const updateDieUp = ensureIdMatch(({ value, ...state }, action) => ({\n    ...state,\n    value: circularClamp(1, state.dieSize)(value + 1),\n}));\n\nexport const updateDieDown = ensureIdMatch(({ value, ...state }, action) => ({\n    ...state,\n    value: circularClamp(1, state.dieSize)(value - 1),\n}));\n\nexport const updateDieRandom = ensureIdMatch(({ value, ...state }, action) => {\n    let roll = rollDie(state.dieSize);\n\n    while (roll === value) {\n        roll = rollDie(state.dieSize);\n    }\n\n    return ({ ...state, value: roll });\n});\n\nconst updateDieBomb = ({ value, ...state }, action) => ({\n    ...state,\n    value: value - 1,\n});\n\nconst valueForFlip = (value) => {\n    switch (value) {\n        case 1:\n            return 6;\n        case 2:\n            return 5;\n        case 3:\n            return 4;\n        case 4:\n            return 3;\n        case 5:\n            return 2;\n        case 6:\n        default:\n            return 1;\n    }\n};\n\nexport const updateDieFlip = ensureIdMatch(({ value, ...state }, action) => ({\n    ...state,\n    value: valueForFlip(value),\n}));\n\nconst updateDie = (state, action) => {\n    switch (state.dieType) {\n        case DIE_TYPES.UP:\n            return updateDieUp(state, action);\n        case DIE_TYPES.DOWN:\n            return updateDieDown(state, action);\n        case DIE_TYPES.RANDOM:\n            return updateDieRandom(state, action);\n        case DIE_TYPES.FLIP:\n            return updateDieFlip(state, action);\n        case DIE_TYPES.BOMB:\n            return updateDieBomb(state, action);\n        default:\n            return state;\n    }\n}\n\nconst moveDie = ensureIdMatch((state, { x, y }) => ({ ...state, x, y }));\n\nexport default (state , action) => {\n    switch (action.type) {\n        case ACTIONS.UPDATE_DIE:\n            return updateDie(state, action);\n        case ACTIONS.MOVE_DIE:\n            return moveDie(state, action);\n        default:\n            return state;\n    }\n};\n","import React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { clamp } from 'lodash';\n\nimport DieFace from '../DieFace';\n\nimport { DIE_TYPES } from '../../constants';\nimport { updateDieDown, updateDieFlip, updateDieRandom, updateDieUp } from '../../reducers/dieReducer';\nimport AnimatedDieFace from '../AnimatedDieFace';\n\nconst MeetDieContainer = styled.div`\n    position: relative;\n    height: 12rem;\n    overflow: hidden;\n`;\n\nconst bounceLeft = keyframes`\n    0% { transform: translate(0, 0); }\n    5% { transform: translate(-3px, 0); }\n    20% { transform: translate(0, 0); }\n    100% { transform: translate(0, 0); }\n`;\n\nconst bounceRight = keyframes`\n    0% { transform: translate(0, 0); }\n    5% { transform: translate(3px, 0); }\n    20% { transform: translate(0, 0); }\n    100% { transform: translate(0, 0); }\n`;\n\nconst NavigateButton = styled.button`\n    position: absolute;\n    display: flex;\n\n    align-items: center;\n    justify-content: center;\n\n    top: 0;\n\n    width: 3rem;\n    height: 100%;\n\n    border 0;\n\n    font-size: 1rem;\n    font-family: inherit;\n    color: ${(({ theme }) => theme.foreground)};\n\n    background: transparent;\n\n    z-index: 1;\n\n    &.left {\n        left: -1rem;\n\n        &.animate {\n            animation: ${bounceLeft} 0.7s linear infinite;\n        }\n    }\n\n    &.right {\n        right: -1rem;\n\n        &.animate {\n            animation: ${bounceRight} 0.7s linear infinite;\n        }\n    }\n\n    &:disabled {\n        opacity: 0.2;\n    }\n`;\n\nconst DieListContainer = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: flex;\n    height: 100%;\n\n    transition: left 0.3s ease-in-out;\n`;\n\nconst DieContainer = styled.div`\n    position: relative;\n\n    display: flex;\n    flex-direction: column;\n\n    align-items: center;\n    justify-content: center;\n\n    width: 100%;\n    height: 100%;\n\n    p {\n        position: absolute;\n        bottom: -1rem;\n        color: ${({ theme }) => theme.foregroundSecondary}\n    }\n`;\n\nconst DieButton = styled.button`\n    display: flex;\n    flex-direction: column;\n\n    align-items: flex-start;\n    justify-content: flex-start;\n\n    width: calc(64px + 2rem);\n    height: calc(64px + 2rem);\n\n    border 0;\n    padding: 1rem;\n\n    background: transparent;\n`;\n\nconst DICE_DESCRIPTIONS = [\n    {\n        id: 1,\n        dieType: DIE_TYPES.UP,\n        value: 1,\n        dieSize: 6,\n        description: 'Increases in value',\n        updater: updateDieUp,\n    },\n    {\n        id: 2,\n        dieType: DIE_TYPES.DOWN,\n        value: 2,\n        dieSize: 6,\n        description: 'Goes down smooth',\n        updater: updateDieDown,\n    },\n    {\n        id: 3,\n        dieType: DIE_TYPES.FLIP,\n        value: 3,\n        dieSize: 6,\n        description: 'Flip-flops. Always adds to 7.',\n        updater: updateDieFlip,\n    },\n    {\n        id: 4,\n        dieType: DIE_TYPES.RANDOM,\n        value: 4,\n        dieSize: 6,\n        description: 'Rolls kinda wild.',\n        updater: updateDieRandom,\n    },\n    {\n        id: 5,\n        dieType: DIE_TYPES.BLOCKER,\n        value: 5,\n        dieSize: 6,\n        description: 'Can’t be moved. Still matches.',\n    },\n    {\n        id: 6,\n        dieType: DIE_TYPES.BOMB,\n        value: 6,\n        dieSize: 6,\n        description: 'Explosive if it reaches zero.',\n    },\n];\n\nconst MeetDice = () => {\n    const [viewIndex, setViewIndex] = useState(0);\n    const [dieDescriptions, setDieDescriptions] = useState(DICE_DESCRIPTIONS);\n\n    const atStart = viewIndex <= 0;\n    const atEnd = viewIndex >= DICE_DESCRIPTIONS.length - 1;\n\n    const navigate = (direction) => setViewIndex(\n        clamp(viewIndex + direction, 0, DICE_DESCRIPTIONS.length - 1)\n    );\n\n    const handleDieUpdate = (id) => {\n        setDieDescriptions(dieDescriptions.map((die) => {\n            if (!die.updater) return die;\n            if (id !== die.id) return die;\n\n            return die.updater(die, { id })\n        }))\n    };\n\n    console.log('dieDescriptions', dieDescriptions);\n\n    return (\n        <MeetDieContainer>\n            <NavigateButton className={`left ${atEnd ? 'animate' : ''}`} onClick={() => navigate(-1)} disabled={atStart}>\n                &lt;\n            </NavigateButton>\n            <NavigateButton className={`right ${atStart ? 'animate' : ''}`} onClick={() => navigate(1)} disabled={atEnd}>\n                &gt;\n            </NavigateButton>\n\n            <DieListContainer style={{ width: `${DICE_DESCRIPTIONS.length * 100}%`, left: `${viewIndex * -100}%` }}>\n                {dieDescriptions.map(({ id, dieType, value, description, updater }) => (\n                    <DieContainer key={id}>\n                        <DieButton onClick={() => {\n                            updater && handleDieUpdate(id);\n                        }}>\n                            <AnimatedDieFace dieType={dieType} value={value} diceSize={64}>\n                                <DieFace dieType={dieType} value={value} diceSize={64} />\n                            </AnimatedDieFace>\n                        </DieButton>\n                        <p>{description}</p>\n                    </DieContainer>\n                ))}\n            </DieListContainer>\n        </MeetDieContainer>\n    );\n};\n\nexport default MeetDice;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { DIE_TYPES } from '../../constants';\nimport DieFace from '../DieFace';\nimport Level from '../gameStatus/Level';\nimport Moves from '../gameStatus/Moves';\nimport MeetDice from './MeetDice';\n\nimport Modal from './Modal';\n\nconst FlexCenter = styled.p`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Header = styled.div`\n    margin-left: -1rem;\n    margin-right: -1rem;\n\n    padding-bottom: 1rem;\n\n    border-bottom: 1px solid ${(({ theme }) => theme.divider)};\n\n    font-size: 1rem;\n    font-weight: bold;\n`;\n\nconst Line = styled.p`\n    font-size: 1rem;\n`;\n\nconst DieDisplay = styled.div`\n    margin-right: 1px;\n\n    svg {\n        display: block;\n    }\n`;\n\nconst LevelDisplay = styled.div`\n    border: 1px solid ${(({ theme }) => theme.divider)};\n    border-radius: 0.5rem\n`;\n\nconst HelpModal = ({ restartGame, ...props }) => {\n    return (\n        <Modal showCloseButton>\n            <Header>How to play</Header>\n\n            <Line>\n                Tap a die to change its value.\n            </Line>\n\n            <FlexCenter>\n                <DieDisplay>\n                    <DieFace dieType={DIE_TYPES.UP} value={3} diceSize={48} />\n                </DieDisplay>\n                <DieDisplay>\n                    <DieFace dieType={DIE_TYPES.UP} value={3} diceSize={48} />\n                </DieDisplay>\n                <DieDisplay>\n                    <DieFace dieType={DIE_TYPES.UP} value={3} diceSize={48} />\n                </DieDisplay>\n            </FlexCenter>\n\n            <Line>\n                Match three or more with the same value.\n            </Line>\n\n            <FlexCenter>\n                <LevelDisplay>\n                    <Level {...props.level} />\n                </LevelDisplay>\n            </FlexCenter>\n\n            <Line>\n                Clear all the dice from the level...\n            </Line>\n\n            <Moves moves={{ used: 3, limit: 10, cap: 10 }} />\n\n            <Line>\n                ...before you run out of turns.\n            </Line>\n\n            <Header>\n                Meet the dice\n            </Header>\n\n            <MeetDice />\n        </Modal>\n    );\n}\n\nexport default HelpModal;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport clamp from 'lodash/fp/clamp';\n\nimport GameBoard from './components/GameBoard';\nimport GameOverModal from './components/modal/GameOverModal';\nimport GameHeaderBar from './components/header/GameHeaderBar';\nimport GameStatusBar from './components/gameStatus/GameStatusBar';\nimport ScoreAnnouncer from './components/ScoreAnnouncer';\n\nimport { GAME_STATES, ACTIONS, BOARD_WIDTH, MODALS } from './constants';\nimport { Helmet } from 'react-helmet';\nimport HelpModal from './components/modal/HelpModal';\n\nconst clampDieSize = clamp(30, 80);\n\nconst colors = {\n    white: '#ffffff',\n    charcoal: '#282B40',\n    charcoal_200: '#191D23',\n    charcoal_100: '#111717',\n    grey_500: '#757784',\n    grey_700: '#9A9DAD',\n    grey_900: '#C5C9D8',\n    grey_1000: '#E6E8EF',\n    grey_1100: '#f8f8f8',\n    red: '#FC4349',\n    teal: '#3C989B',\n    green: '#14DD89',\n    yellow: '#FFAC00',\n    beige: '#CEC8B6',\n};\n\nconst styleThemeLight = {\n    colors,\n\n    foreground: colors.charcoal,\n    foregroundSecondary: colors.grey_500,\n\n    background: colors.white,\n    backgroundSecondary: colors.grey_1000,\n    divider: colors.grey_900,\n\n    header: {\n        background: colors.grey_1000,\n        backgroundInset: colors.white,\n        text: colors.charcoal,\n        textSecondary: colors.grey_500,\n    },\n\n    moves: {\n        border: colors.grey_700,\n        insideBorder: 'rgba(0,0,0,0.2)',\n        used: colors.grey_500,\n        ready: colors.green,\n        warning: colors.yellow,\n        danger: colors.red,\n    },\n\n    dice: {\n        pip: colors.charcoal,\n        up: colors.red,\n        down: colors.teal,\n        random: colors.yellow,\n        blocker: colors.grey_500,\n        flip: colors.beige,\n    },\n};\n\nconst styleThemeDark = {\n    ...styleThemeLight,\n\n    background: colors.charcoal_200,\n    backgroundSecondary: colors.charcoal_100,\n    backgroundTertiary: colors.charcoal_100,\n};\n\nconst AppContainer = styled.div`\n    display: grid;\n\n    grid-template-columns: auto;\n    grid-template-rows: auto auto 1fr;\n\n    height: 90vh;\n    width: 100vw;\n\n    background: ${props => props.theme.background};\n`;\n\nconst GameContainer = styled.div`\n    align-self: end;\n    padding: 1rem 0;\n    background: ${props => props.theme.background};\n`;\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        background: ${props => props.theme.background};\n    }\n`;\n\nconst mapStateToProps = (state) => state;\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateDie: (id) => dispatch({ type: ACTIONS.UPDATE_DIE, id }),\n    restartGame: () => dispatch({ type: ACTIONS.GAME_RESET }),\n    openModal: (modal) => dispatch({ type: ACTIONS.OPEN_MODAL, modal }),\n    closeModal: () => dispatch({ type: ACTIONS.CLOSE_MODAL }),\n});\n\nclass App extends Component {\n    state = { diceSize: 0 };\n\n    componentWillMount() {\n        this.getDiceSize();\n\n        window.addEventListener('resize', this.getDiceSize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getDiceSize);\n    }\n\n    getDiceSize = () => this.setState(() => ({ diceSize: clampDieSize((window.innerWidth - 20) / BOARD_WIDTH) }));\n\n    render() {\n        const darkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        const theme = styleThemeLight;\n\n        const {\n            gameState,\n            modal,\n        } = this.props;\n\n        const {\n            diceSize,\n        } = this.state;\n\n        return (\n            <ThemeProvider theme={theme}>\n                <GlobalStyle />\n                <Helmet>\n                    <meta name=\"theme-color\" content={theme.backgroundSecondary} />\n                </Helmet>\n                <AppContainer>\n                    <GameHeaderBar {...this.props} />\n                    <GameStatusBar {...this.props} />\n                    <GameContainer>\n                        <GameBoard {...this.props} diceSize={diceSize} />\n                        <ScoreAnnouncer {...this.props} />\n                    </GameContainer>\n\n                    {gameState === GAME_STATES.FINISHED && (\n                        <GameOverModal {...this.props} />\n                    )}\n\n                    {modal === MODALS.HELP && (\n                        <HelpModal {...this.props} />\n                    )}\n                </AppContainer>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { nanoid } from 'nanoid';\nimport rollDie from '../util/rollDie';\n\nimport { DIE_TYPES } from '../constants';\n\nconst initialValueFor = (dieType, dieSize = 6) => {\n    switch (dieType) {\n        case DIE_TYPES.BOMB:\n            return dieSize;\n        default:\n            return rollDie(dieSize);\n    }\n}\n\nconst createDieState = (dieType, dieSize = 6) => ({\n    id: nanoid(8),\n    dieType,\n    dieSize,\n    value: initialValueFor(dieType, dieSize),\n});\n\nexport default createDieState;\n","\nconst getDieFromBoard = (board) => (x, y) => board.find((die) => (\n    die &&\n    die.x === x &&\n    die.y === y\n))\n\nexport default getDieFromBoard;\n","import getDieFromBoard from './getDieFromBoard';\nimport intersectionBy from 'lodash/fp/intersectionBy';\nimport uniqBy from  'lodash/fp/uniqBy';\nimport reverse from  'lodash/fp/reverse';\n\nimport { BOARD_WIDTH, BOARD_HEIGHT, MIN_MATCH_LENGTH } from '../constants';\n\nconst checkDiceMatch = (die, nextDie) => (\n    die &&\n    nextDie &&\n    die.value === nextDie.value\n);\n\nconst findMatchesHorizontal = (board) => {\n    const getDie = getDieFromBoard(board);\n    const matchGroups = [];\n\n    for (let y = 0; y < BOARD_HEIGHT; y++) {\n        let currGroup = [];\n\n        for (let x = 0; x < BOARD_WIDTH; x++) {\n            const die = getDie(x, y);\n            const nextDie = getDie(x + 1, y);\n\n            currGroup.push(die);\n\n            const hasMatch = checkDiceMatch(die, nextDie);\n\n            if (!hasMatch && currGroup.length >= MIN_MATCH_LENGTH) {\n                matchGroups.push(currGroup);\n            }\n\n            if (!hasMatch) currGroup = [];\n        }\n    }\n\n    return matchGroups;\n};\n\nconst findMatchesVertical = (board) => {\n    const getDie = getDieFromBoard(board);\n    const matchGroups = [];\n\n    for (let x = 0; x < BOARD_WIDTH; x++) {\n        let currGroup = [];\n\n        for (let y = 0; y < BOARD_HEIGHT; y++) {\n            const die = getDie(x, y);\n            const nextDie = getDie(x, y + 1);\n\n            currGroup.push(die);\n\n            const hasMatch = checkDiceMatch(die, nextDie);\n\n            if (!hasMatch && currGroup.length >= MIN_MATCH_LENGTH) {\n                matchGroups.push(reverse(currGroup));\n            }\n\n            if (!hasMatch) currGroup = [];\n        }\n    }\n\n    return matchGroups;\n};\n\nconst getId = (die) => die.id;\nconst intersectionById = intersectionBy(getId);\nconst uniqById = uniqBy(getId);\n\nconst findMatches = (state) => {\n    let horzontalMatches = findMatchesHorizontal(state);\n    let verticalMatches = findMatchesVertical(state);\n\n    // find matches that are both in the horizontal & vertical axis & combine into single group for more points\n    horzontalMatches = horzontalMatches.map((hGroup) => {\n        const intersectingGroup = verticalMatches.find((vGroup) => intersectionById([\n            vGroup,\n            hGroup,\n        ]));\n\n        if (!intersectingGroup) return hGroup;\n\n        verticalMatches = verticalMatches.filter((vGroup) => vGroup !== intersectingGroup);\n        return uniqById([...hGroup, ...intersectingGroup]);\n    });\n\n    return [\n        ...horzontalMatches,\n        ...verticalMatches,\n    ];\n}\n\nexport default findMatches;\n","import times from 'lodash/fp/times';\n\nimport dieReducer from './dieReducer';\nimport createDieState from './createDieState';\nimport findBoardMatches from '../util/findBoardMatches';\nimport getDieFromBoard from '../util/getDieFromBoard';\n\nimport { ACTIONS, DIE_TYPES, BOARD_WIDTH, BOARD_HEIGHT } from '../constants';\n\nconst createGameBoard = () => (\n    times(() => createDieState(DIE_TYPES.UP), BOARD_WIDTH * BOARD_HEIGHT)\n    .map((die, i) => {\n        const x = i % BOARD_WIDTH;\n        const y = Math.floor(i / BOARD_WIDTH);\n\n        return { ...die, x, y };\n    })\n);\n\nconst getInitalState = () => {\n    let gameBoard;\n\n    while (!gameBoard || findBoardMatches(gameBoard).length) {\n        gameBoard = createGameBoard();\n    }\n\n    return gameBoard;\n};\n\nconst deferToDice = (state, action) => state.map((dieState) => dieReducer(dieState, action));\n\nconst removeDie = (state, action) => state.filter((dieState) => dieState.id !== action.id);\n\nconst addDie = (state, { die }) => ([ ...state, die ]);\n\nconst getDieToShift = (state) => {\n    const getDie = getDieFromBoard(state);\n\n    return state.find(({ x, y, id }) => y < BOARD_HEIGHT - 1 && !getDie(x, y + 1));\n}\n\nconst cascadeDice = (state, action) => {\n    let updatedState = state;\n    let dieToShift = getDieToShift(updatedState);\n\n    while (dieToShift) {\n        updatedState = deferToDice(updatedState, {\n            type: ACTIONS.MOVE_DIE,\n            id: dieToShift.id,\n            x: dieToShift.x,\n            y: dieToShift.y + 1,\n        });\n\n        dieToShift = getDieToShift(updatedState)\n    }\n\n    return updatedState;\n};\n\nexport default (state = getInitalState(), action) => {\n    switch (action.type) {\n        case ACTIONS.UPDATE_DIE:\n            return deferToDice(state, action);\n        case ACTIONS.REMOVE_DIE:\n            return removeDie(state, action);\n        case ACTIONS.ADD_DIE:\n            return addDie(state, action);\n        case ACTIONS.CASCADE_DICE:\n            return cascadeDice(state, action);\n        case ACTIONS.GAME_RESET:\n            return getInitalState();\n        default:\n            return state;\n    }\n};\n","import { ACTIONS } from '../constants';\n\nconst initialState = { used: 0, limit: 10, cap: 10 };\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.UPDATE_DIE:\n            return { ...state, used: state.used + 1 };\n        case ACTIONS.ADD_MOVES:\n            return { ...state, limit: Math.min(state.limit + action.moves, state.used + state.cap) };\n        case ACTIONS.GAME_RESET:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","import times from 'lodash/fp/times';\nimport shuffle from 'lodash/fp/shuffle';\nimport clamp from 'lodash/fp/clamp';\n\nimport createDieState from './createDieState';\n\nimport { ACTIONS, DIE_TYPES } from '../constants';\n\nconst clampVal = clamp(0, Infinity);\nconst floor = value => Math.floor(value);\nconst round = value => Math.round(value);\nconst log = (value) => Math.log10(value);\n\nconst getCountUp = (level) => 10;\nconst getCountDown = (level) => clampVal(round(log(level) * 5));\nconst getCountFlip = (level) => clampVal(round(log(level) * 4) - 2);\nconst getCountRandom = (level) => floor(clampVal(round(log(level) * 4) - 2.5));\nconst getCountBlocker = (level) => clampVal(round(log(level) * 2.5) - 2);\nconst getCountBomb = (level) => {\n    if (level >= 15) return level % 5 === 0 ? 1 : 0;\n    return 0;\n};\n\nconst checkForRuns = (levelDice = []) => {\n    for (var i = 0; i < levelDice.length; i++) {\n        const value = levelDice[i].value;\n\n        if (\n            levelDice[i + 1] && levelDice[i + 1].value === value &&\n            levelDice[i + 2] && levelDice[i + 2].value === value\n        ) {\n            console.log('found run', levelDice, i, i+1, i+2);\n            return true;\n        }\n    }\n\n    return false;\n}\n\nconst getLevelDice = (level) => {\n    console.log(\n        'NEXT LEVEL', level,\n        'UP', getCountUp(level),\n        'DOWN', getCountDown(level),\n        'FLIP', getCountFlip(level),\n        'RANDOM', getCountRandom(level),\n        'BLOCKER', getCountBlocker(level),\n        'BOMB', getCountBomb(level),\n        'total', getCountUp(level) +\n                getCountDown(level) +\n                getCountRandom(level) +\n                getCountBlocker(level) +\n                getCountFlip(level) +\n                getCountBomb(level)\n    )\n\n    let levelDice;\n    let attempts = 0;\n\n    do {\n        levelDice = shuffle([\n            ...times(() => createDieState(DIE_TYPES.UP), getCountUp(level)),\n            ...times(() => createDieState(DIE_TYPES.DOWN), getCountDown(level)),\n            ...times(() => createDieState(DIE_TYPES.RANDOM), getCountRandom(level)),\n            ...times(() => createDieState(DIE_TYPES.BLOCKER), getCountBlocker(level)),\n            ...times(() => createDieState(DIE_TYPES.FLIP), getCountFlip(level)),\n            ...times(() => createDieState(DIE_TYPES.BOMB), getCountBomb(level)),\n        ]);\n\n        attempts++;\n    } while (attempts < 5 && checkForRuns(levelDice));\n\n    return levelDice;\n};\n\nconst getInitalState = () => ({\n    level: 1,\n    clearedDice: 0,\n    upcomingDice: getLevelDice(1),\n});\n\nconst addDie = (state, action) => {\n    let level = state.level;\n    let upcomingDice = state.upcomingDice.slice(1);\n\n    if (upcomingDice.length === 0) {\n        level = level + 1;\n        upcomingDice = getLevelDice(level);\n    }\n\n    return {\n        ...state,\n        level,\n        upcomingDice,\n    }\n}\n\nexport default (state = getInitalState(), action) => {\n    switch (action.type) {\n        case ACTIONS.ADD_DIE:\n            return addDie(state, action);\n        case ACTIONS.REMOVE_DIE:\n            return { ...state, clearedDice: state.clearedDice + 1 };\n        case ACTIONS.SET_LEVEL:\n            return { ...state, level: action.level, upcomingDice: getLevelDice(action.level) };\n        case ACTIONS.GAME_RESET:\n            return getInitalState();\n        default:\n            return state;\n    }\n}\n","import { GAME_STATES, ACTIONS } from '../constants';\n\nconst initialState = GAME_STATES.ACTIVE;\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.GAME_END:\n            return GAME_STATES.FINISHED;\n        case ACTIONS.GAME_RESET:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","import { nanoid } from 'nanoid';\nimport { ACTIONS } from '../constants';\n\nconst initialState = {\n    gameId: nanoid(),\n    gameStart: new Date(),\n    gameEnd: null,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.GAME_END:\n            return {\n                ...state,\n                gameEnd: new Date(),\n            };\n        case ACTIONS.GAME_RESET:\n            return {\n                gameId: nanoid(),\n                gameStart: new Date(),\n                gameEnd: null,\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport gameBoard from './gameBoardReducer';\nimport score from './scoreReducer';\nimport inputEnabled from './inputEnabledReducer';\nimport moves from './movesReducer';\nimport level from './levelReducer';\nimport gameState from './gameStateReducer';\nimport tracking from './trackingReducer';\nimport modal from './modalReducer';\n\nexport default combineReducers({\n    gameBoard,\n    score,\n    inputEnabled,\n    moves,\n    level,\n    gameState,\n    tracking,\n    modal,\n});\n","import { ACTIONS } from '../constants';\n\nconst initialState = 0;\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.ADD_SCORE:\n            return state + action.score * action.multiplier;\n        case ACTIONS.GAME_RESET:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","import { ACTIONS } from '../constants';\n\nconst initialState = true;\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.INPUT_DISABLE:\n            return false;\n        case ACTIONS.INPUT_ENABLE:\n            return true;\n        case ACTIONS.GAME_RESET:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","import { ACTIONS } from '../constants';\n\nconst initialState = null;\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.OPEN_MODAL:\n            return action.modal;\n        case ACTIONS.CLOSE_MODAL:\n            return null;\n        default:\n            return state;\n    }\n}\n","import { put, select, takeEvery, all } from 'redux-saga/effects'\n\nimport first from 'lodash/fp/first';\nimport includes from 'lodash/fp/includes';\n\nimport findBoardMatches from '../util/findBoardMatches';\nimport getDieFromBoard from '../util/getDieFromBoard';\n\nimport { ACTIONS, BOARD_HEIGHT, DIE_TYPES } from '../constants';\n\nconst delay = (duration) => new Promise(resolve => setTimeout(resolve, duration));\n\nconst getId = (die) => die.id;\n\nconst getMatchScore = (matchLength) => {\n    switch (matchLength) {\n        case 3:\n            return 0;\n        case 4:\n            return 100;\n        case 5:\n            return 300;\n        case 6:\n            return 500;\n        default:\n            return Math.max((matchLength - 6) * 300, 0) + 500;\n    }\n};\n\nconst getScoreValueBonus = (matchLength, matchValue) => {\n    const valueMulitplier = matchLength <= 3 ? 10 : 20;\n\n    return matchValue * valueMulitplier;\n};\n\nfunction *addDie(removedDie) {\n    const state = yield select();\n\n    const nextDie = state.level.upcomingDice[0];\n    const x = removedDie.x;\n    const y = -BOARD_HEIGHT;\n\n    yield put({ type: ACTIONS.ADD_DIE, die: { ...nextDie, x, y } });\n\n    yield delay(100);\n\n    yield put({ type: ACTIONS.CASCADE_DICE });\n};\n\nfunction *handleMatchGroup(matchGroup, scoreMultipler) {\n    const state = yield select();\n\n    const gameBoardIds = state.gameBoard.map(getId);\n    const diceToRemove = matchGroup.filter(die => includes(getId(die), gameBoardIds));\n\n    yield all(diceToRemove.map((die) => put({ type: ACTIONS.REMOVE_DIE, id: die.id })));\n\n    yield delay(250);\n\n    yield put({ type: ACTIONS.CASCADE_DICE });\n\n    const score = (getMatchScore(diceToRemove.length) + getScoreValueBonus(diceToRemove.length, first(diceToRemove).value));\n\n    yield put({\n        type: ACTIONS.ADD_SCORE,\n        score: score,\n        multiplier: scoreMultipler\n    });\n\n    yield delay(250);\n\n    for (let die of diceToRemove) {\n        yield addDie(die);\n    }\n\n    yield delay(100);\n};\n\nfunction *removeMatches(matches, scoreMultipler = 1) {\n    yield delay(100);\n\n    if (!matches.length) return;\n\n    const state = yield select();\n\n    for (let matchGroup of matches) {\n        yield handleMatchGroup(matchGroup, scoreMultipler);\n        yield delay(250);\n    }\n\n    const updatedState = yield select();\n    const nextMatches = findBoardMatches(updatedState.gameBoard);\n\n    if (state.level.level !== updatedState.level.level) {\n        yield put({ type: ACTIONS.ADD_MOVES, moves: 10 });\n    }\n\n    yield delay(300);\n\n    if (nextMatches.length) {\n        return yield removeMatches(nextMatches, scoreMultipler + 1);\n    }\n}\n\nconst BOMB_MATRIX = [\n    [0, 0], // bomb itself is first so that the score value bonus == 0\n    [-1, -1], [0, -1], [1, -1],\n    [-1, 0],        [1, 0],\n    [-1, 1], [0, 1], [1, 1]\n];\n\nconst findDiceToExplode = (gameBoard) => {\n    const getDieAt = getDieFromBoard(gameBoard);\n\n    const diceToExplode = gameBoard\n        .filter((die) => die.dieType === DIE_TYPES.BOMB && die.value <= 0)\n        .map(die => (\n            BOMB_MATRIX\n                .map(([offsetX, offsetY]) => getDieAt(die.x + offsetX, die.y + offsetY))\n                .filter(die => !!die)\n        ));\n\n    return diceToExplode;\n}\n\nfunction *onUpdateDie() {\n    yield put({ type: ACTIONS.INPUT_DISABLE });\n\n    const state = yield select();\n    const matches = findBoardMatches(state.gameBoard);\n\n    if (matches.length) {\n        yield delay(250);\n        yield removeMatches(matches, 1);\n    }\n\n    const postMatchState = yield select();\n    const diceToExplode = findDiceToExplode(postMatchState.gameBoard);\n    if (diceToExplode.length) {\n        yield delay(250);\n        yield removeMatches(diceToExplode, 1);\n    }\n\n    yield put({ type: ACTIONS.INPUT_ENABLE });\n\n    const finalState = yield select();\n    if (finalState.moves.limit - finalState.moves.used <= 0) {\n        yield delay(800);\n        return yield put({ type: ACTIONS.GAME_END });\n    }\n}\n\nfunction* matchSaga() {\n    yield takeEvery(ACTIONS.UPDATE_DIE, onUpdateDie);\n}\n\nexport default matchSaga;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\nimport configureStore from './store/configureStore';\nimport { Provider } from 'react-redux'\n\nconst store = configureStore();\n\nReactDOM.render((\n    <Provider store={store}>\n        <App store={store} />\n    </Provider>\n), document.getElementById('root'));\n","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\n\nimport createSagaMiddleware from 'redux-saga';\nimport { save, load } from 'redux-localstorage-simple';\n\nimport rootReducer from '../reducers/rootReducer';\n\nimport sagas from './matchSagas';\n\nexport default () => {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const createStoreWithMiddleware = applyMiddleware(\n        createLogger({\n            collapsed: true,\n            duration: true,\n        }),\n        save({\n            namespace: 'dicematch.state',\n            ignoreStates: [\n                'inputEnabled',\n            ],\n        }),\n        sagaMiddleware,\n    )(createStore);\n\n    const store = createStoreWithMiddleware(rootReducer, load({\n        namespace: 'dicematch.state',\n    }));\n\n    sagaMiddleware.run(sagas);\n\n    window._store = store;\n\n    return store;\n};\n"],"sourceRoot":""}