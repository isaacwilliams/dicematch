{"version":3,"sources":["constants/index.js","components/AnimatedDieFace.js","components/getDieColor.js","components/DieFace.js","components/Die.js","components/GameBoard.js","components/Score.js","components/Moves.js","components/Level.js","util/randomEmoji.js","components/GameOverScoreTable.js","components/GameOverModal.js","components/ScoreAnnouncer.js","App.js","util/circularClamp.js","util/rollDie.js","reducers/dieReducer.js","reducers/createDieState.js","util/getDieFromBoard.js","util/findBoardMatches.js","reducers/gameBoardReducer.js","reducers/movesReducer.js","reducers/levelReducer.js","reducers/gameStateReducer.js","reducers/trackingReducer.js","reducers/rootReducer.js","reducers/scoreReducer.js","reducers/inputEnabledReducer.js","store/matchSagas.js","index.js","store/configureStore.js"],"names":["ACTIONS","ADD_SCORE","UPDATE_DIE","REMOVE_DIE","ADD_DIE","MOVE_DIE","CASCADE_DICE","INPUT_DISABLE","INPUT_ENABLE","ADD_MOVES","SET_LEVEL","GAME_END","GAME_RESET","DIE_TYPES","UP","DOWN","RANDOM","BLOCKER","FLIP","GAME_STATES","BOARD_WIDTH","BOARD_HEIGHT","scaleInVertical","keyframes","_templateObject","scaleOutVertical","_templateObject2","scaleInHorizontal","_templateObject3","scaleOutHorizontal","_templateObject4","shake","degree","_templateObject5","FaceContainer","styled","div","_templateObject14","animatedChild","css","_templateObject15","CurrentChild","_templateObject16","_ref","dieType","diceSize","animate","_templateObject6","_templateObject7","_templateObject8","_templateObject9","PrevChild","_templateObject17","_ref2","_templateObject10","_templateObject11","_templateObject12","_templateObject13","AnimatedDieFace","state","prevChildren","removePrevChild","id","_this","setState","_ref3","filter","child","_this2","this","_ref4","value","props","concat","Object","toConsumableArray","children","timeout","setTimeout","_this3","_this$props","react_default","a","createElement","className","assign","length","key","map","_ref5","React","Component","COLORS","flicker","getDieColor_templateObject","getDieColor","getDieColor_templateObject2","getDieColor_templateObject3","BOMB","getDieColor_templateObject4","getDieColor_templateObject5","getDieColor_templateObject6","getDieColor_templateObject7","DieSvg","svg","DieFace_templateObject","getPos","size","percent","margin","Pip","x","y","objectWithoutProperties","r","cx","cy","Face0","width","height","Face1","DieFace_Pip","Face2","Face3","Face4","_ref6","Face5","_ref7","Face6","_ref8","DieFace","DieFace_Face1","DieFace_Face2","DieFace_Face3","DieFace_Face4","DieFace_Face5","DieFace_Face6","DieFace_Face0","DieButton","Die_templateObject","Positioner","Die_templateObject2","getInlineStyle","transform","DiePositioner","style","Die","handleDieUpdate","moves","inputEnabled","updateDie","limit","used","_this$props2","Die_DiePositioner","onClick","title","components_AnimatedDieFace","components_DieFace","defaultStyle","transition","opacity","transitionStyles","entering","entered","exiting","Fade","react_transition_group","objectSpread","BoardWrapper","GameBoard_templateObject","Board","GameBoard_templateObject2","getBoardSize","GameBoard","gameBoard","die","i","GameBoard_Fade","components_Die","StyledScore","Score_templateObject","Score","score","StyledMoves","Moves_templateObject","Moves_templateObject2","Count","span","Moves_templateObject3","Moves_templateObject4","Moves_templateObject5","Moves_templateObject6","Moves_templateObject7","Moves","_ref5$moves","cap","StyledLevel","Level_templateObject","UpcomingDice","Level_templateObject2","MiniDie","Level_templateObject3","More","Level_templateObject4","Level","level","upcomingDice","nextNiceDisplay","slice","nextMore","EMOJI_LIST","randomEmoji","Math","floor","random","Table","table","GameOverScoreTable_templateObject","Th","th","GameOverScoreTable_templateObject2","Td","td","GameOverScoreTable_templateObject3","ScoreEntry","tr","GameOverScoreTable_templateObject4","currentScore","ScoreTable","button","GameOverScoreTable_templateObject5","scores","savedScore","setInputActive","_id","playerName","isCurrentScore","name","uniqById","uniqBy","get","containerEnter","GameOverModal_templateObject","modalEnter","GameOverModal_templateObject2","ModalContainer","GameOverModal_templateObject3","Modal","GameOverModal_templateObject4","RestartButton","GameOverModal_templateObject5","SCORE_SERVER_DOMAIN","ScoreDisplay","_ref$level","clearedDice","_ref$tracking","tracking","gameStart","gameEnd","restartGame","setSavedScore","_useState","useState","_useState2","slicedToArray","setScores","useEffect","asyncToGenerator","regenerator_default","mark","_callee","myScore","createdScoreResponse","_createdScoreResponse","loadedScoresResponse","loadedScores","allScores","wrap","_context","prev","next","axios","post","diceCleared","diceRemainingInLevel","turnsUsed","startTime","toString","endTime","sent","data","t0","console","error","put","t1","params","sort","b","log","t2","stop","apply","arguments","fetchScores","GameOverScoreTable","GameOverModal","_useLocalStorage","useLocalStorage","_useLocalStorage2","setName","_useState3","_useState4","GameOverModal_ScoreDisplay","Announcements","ScoreAnnouncer_templateObject","position","top","left","textAlign","marginLeft","marginTop","ScoreAnnouncer","announcements","aId","gameState","drop","change","ScoreAnnouncer_Fade","clampDieSize","clamp","AppContainer","App_templateObject","GameStatus","App_templateObject2","GameContainer","App_templateObject3","App","getDiceSize","window","innerWidth","addEventListener","removeEventListener","components_Level","components_Moves","components_Score","components_GameBoard","components_ScoreAnnouncer","components_GameOverModal","connect","dispatch","type","circularClamp","min","max","rollDie","dieSize","ensureIdMatch","subReducer","action","updateDieUp","updateDieDown","updateDieRandom","roll","valueForFlip","updateDieFlip","updateDieBomb","moveDie","initialValueFor","undefined","createDieState","uniqueId","getDieFromBoard","board","find","checkDiceMatch","nextDie","getId","intersectionById","intersectionBy","findMatches","horzontalMatches","getDie","matchGroups","currGroup","push","hasMatch","findMatchesHorizontal","verticalMatches","reverse","findMatchesVertical","hGroup","intersectingGroup","vGroup","getInitalState","findBoardMatches","times","deferToDice","dieState","dieReducer","getDieToShift","initialState","clampVal","Infinity","round","log10","getCountDown","getCountFlip","getCountRandom","getCountBlocker","getCountBomb","checkForRuns","levelDice","getLevelDice","attempts","shuffle","Date","combineReducers","removeDie","addDie","updatedState","dieToShift","cascadeDice","multiplier","handleMatchGroup","removeMatches","onUpdateDie","matchSaga","delay","duration","Promise","resolve","getMatchScore","matchLength","getScoreValueBonus","matchValue","removedDie","select","_marked","matchGroup","scoreMultipler","gameBoardIds","diceToRemove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context2","includes","all","first","Symbol","iterator","done","return","finish","_marked2","matches","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","nextMatches","_args3","_context3","abrupt","_marked3","BOMB_MATRIX","findDiceToExplode","getDieAt","offsetX","offsetY","postMatchState","diceToExplode","finalState","_context4","_marked4","_context5","takeEvery","_marked5","store","sagaMiddleware","createSagaMiddleware","middleware","createLogger","collapsed","createStore","rootReducer","applyMiddleware","run","sagas","_store","configureStore","ReactDOM","render","src_App","document","getElementById"],"mappings":"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AAC2E,GAADpF,OAAAW,OAAA,GAAa2F,EAAb,CAAkBnI,SAAU,SAGnCqK,EAAW,GAAKjI,EAAAC,EAAAC,cAACwH,GAAD,UAASO,+HCzCpCC,GAAa,CACf,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,gBAOWC,GAJK,kBAChBD,GAAWE,KAAKC,MAAMD,KAAKE,SAAWJ,GAAW7H,6mBC7HrD,IAAMkI,GAAQrL,IAAOsL,MAAVC,MAILC,GAAKxL,IAAOyL,GAAVC,MAKFC,GAAK3L,IAAO4L,GAAVC,MAIFC,GAAa9L,IAAO+L,GAAVC,KACE,SAAAxL,GAAA,OAAAA,EAAGyL,aAAiC,SAAW,gBAkDlDC,IA/CUlM,IAAOmM,OAAVC,MASH,SAAAlL,GAAA,IAAGmL,EAAHnL,EAAGmL,OAAQC,EAAXpL,EAAWoL,WAAXpL,EAAuBqL,eAAvB,OACfzJ,EAAAC,EAAAC,cAACqI,GAAD,KACIvI,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACwI,GAAD,eAGA1I,EAAAC,EAAAC,cAACwI,GAAD,cAGA1I,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","file":"static/js/main.dba274c1.chunk.js","sourcesContent":["export const ACTIONS = {\n    ADD_SCORE: 'ADD_SCORE',\n\n    UPDATE_DIE: 'UPDATE_DIE',\n    REMOVE_DIE: 'REMOVE_DIE',\n    ADD_DIE: 'ADD_DIE',\n    MOVE_DIE: 'MOVE_DIE',\n\n    CASCADE_DICE: 'CASCADE_DICE',\n\n    INPUT_DISABLE: 'INPUT_DISABLE',\n    INPUT_ENABLE: 'INPUT_ENABLE',\n\n    ADD_MOVES: 'ADD_MOVES',\n\n    SET_LEVEL: 'SET_LEVEL',\n\n    GAME_END: 'GAME_END',\n    GAME_RESET: 'GAME_RESET',\n};\n\nexport const DIE_TYPES = {\n    UP: 'UP',\n    DOWN: 'DOWN',\n    RANDOM: 'RANDOM',\n    BLOCKER: 'BLOCKER',\n    FLIP: 'FLIP',\n}\n\nexport const GAME_STATES = {\n    ACTIVE: 'ACTIVE',\n    FINISHED: 'FINISHED',\n};\n\nexport const BOARD_WIDTH = 5;\nexport const BOARD_HEIGHT = 6;\n\nexport const MIN_MATCH_LENGTH = 3;\n","import React from 'react';\nimport styled, { keyframes, css } from 'styled-components';\n\nimport { DIE_TYPES } from '../constants';\n\nconst ANIMATION_DUR = 200;\n\nconst scaleInVertical = keyframes`\n    0% { transform: scaleY(0); filter: brightness(0.5); }\n    100% { transform: scaleY(1); filter: brightness(1); }\n`;\n\nconst scaleOutVertical = keyframes`\n    0% { transform: scaleY(1); filter: brightness(1); }\n    100% { transform: scaleY(0); filter: brightness(0.5); }\n`;\n\nconst scaleInHorizontal = keyframes`\n    0% { transform: scaleX(0); filter: brightness(0.5); }\n    100% { transform: scaleX(1); filter: brightness(1); }\n`;\n\nconst scaleOutHorizontal = keyframes`\n    0% { transform: scaleX(1); filter: brightness(1); }\n    100% { transform: scaleX(0); filter: brightness(0.5); }\n`;\n\nconst shake = (degree) => keyframes`\n    0% {\n        transform: rotate(0deg);\n    }\n    25% {\n        transform: rotate(-${degree}deg);\n    }\n    50% {\n      transform: rotate(0deg);\n    }\n    75% {\n        transform: rotate(${degree}deg);\n    }\n`;\n\nconst getEnterAnimation = ({ dieType, diceSize, animate }) => {\n    if (!animate) return null;\n\n    switch (dieType) {\n        case DIE_TYPES.DOWN:\n            return css`\n                animation: ${scaleInVertical} ${ANIMATION_DUR}ms linear forwards;\n                transform-origin: top center;\n            `;\n        case DIE_TYPES.RANDOM:\n            return css`\n                animation: ${shake(10)} 10ms linear infinite;\n            `;\n        case DIE_TYPES.FLIP:\n            return css`\n                animation: ${scaleInHorizontal} 100ms ease-in-out forwards;\n            `;\n        default:\n            return css`\n                animation: ${scaleInVertical} ${ANIMATION_DUR}ms linear forwards;\n                transform-origin: bottom center;\n            `;\n    }\n};\n\nconst getExitAnimation = ({ dieType, diceSize }) => {\n    switch (dieType) {\n        case DIE_TYPES.DOWN:\n            return css`\n                animation: ${scaleOutVertical} ${ANIMATION_DUR}ms linear forwards;\n                transform-origin: bottom center;\n            `;\n        case DIE_TYPES.RANDOM:\n            return css`\n                animation: ${shake(10)} 10ms linear infinite;\n            `;\n        case DIE_TYPES.FLIP:\n            return css`\n                animation: ${scaleOutHorizontal} 100ms ease-in-out forwards;\n            `;\n        default:\n            return css`\n                animation: ${scaleOutVertical} ${ANIMATION_DUR}ms linear forwards;\n                transform-origin: top center;\n            `;\n    }\n}\n\nconst FaceContainer = styled.div`\n    position: relative;\n`;\n\nconst animatedChild = css`\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    transform: translate3d(0, 0, 0);\n`;\n\nconst CurrentChild = styled.div`\n    ${animatedChild}\n    ${getEnterAnimation}\n`;\n\nconst PrevChild = styled.div`\n    ${animatedChild}\n    ${getExitAnimation}\n`;\n\nclass AnimatedDieFace extends React.Component {\n    state = { prevChildren: [] };\n\n    componentWillReceiveProps({ value }) {\n        if (value !== this.props.value) {\n            const id = this.props.value;\n\n            this.setState((state) => ({\n                prevChildren: [\n                    ...state.prevChildren,\n                    {\n                        child: this.props.children,\n                        id: id,\n                        timeout: setTimeout(this.removePrevChild(id), ANIMATION_DUR)\n                    }\n                ]\n            }));\n        }\n    }\n\n    removePrevChild = (id) => () => (\n        this.setState(({ prevChildren }) => ({\n            prevChildren: prevChildren.filter((child) => child.id !== id),\n        }))\n    );\n\n    render() {\n        const { prevChildren } = this.state;\n        const { children, value } = this.props;\n\n        return (\n            <FaceContainer className=\"FACE\">\n                <CurrentChild {...this.props} animate={prevChildren.length} key={value}>\n                    {children}\n                </CurrentChild>\n\n                {prevChildren.map(({ child, id }) => <PrevChild {...this.props} key={id}>{child}</PrevChild>)}\n            </FaceContainer>\n        )\n    }\n}\n\nexport default AnimatedDieFace;\n","import { css, keyframes } from 'styled-components';\n\nimport { DIE_TYPES } from '../constants';\n\nconst COLORS = {\n    PIP: '#282B40',\n    UP: '#FC4349',\n    DOWN: '#3C989B',\n    RANDOM: '#FFAC00',\n    BLOCKER: '#757784',\n    FLIP: '#CEC8B6',\n};\n\nconst flicker = keyframes`\n    0% { opacity: 0; }\n    50% { opacity: 1; }\n    100% { opacity: 0; }\n`;\n\n\nconst getDieColor = ({ dieType, value }) => {\n    switch (dieType) {\n        case DIE_TYPES.DOWN:\n            return css`\n                background: ${COLORS.DOWN};\n\n                circle {\n                    fill: ${COLORS.PIP};\n                    opacity: 0.7;\n                }\n            `;\n        case DIE_TYPES.BLOCKER:\n            return css`\n                background: ${COLORS.BLOCKER};\n\n                circle {\n                    fill: ${COLORS.PIP};\n                    opacity: 0.4;\n                }\n            `;\n        case DIE_TYPES.BOMB:\n            return css`\n                background: ${COLORS.BLOCKER};\n\n                circle {\n                    fill: ${COLORS.RANDOM};\n                    animation: ${flicker} ${(value)*200}ms ease-in-out infinite;\n                }\n            `;\n        case DIE_TYPES.RANDOM:\n            return css`\n                background: ${COLORS.RANDOM};\n\n                circle {\n                    fill: ${COLORS.PIP};\n                    opacity: 0.7;\n                }\n            `;\n        case DIE_TYPES.FLIP:\n            return css`\n                background: ${COLORS.FLIP};\n                border-radius: 50%;\n\n                circle {\n                    fill: ${COLORS.PIP};\n                    opacity: 0.7;\n                }\n            `;\n        case DIE_TYPES.UP:\n        default:\n            return css`\n                background: ${COLORS.UP};\n\n                circle {\n                    fill: ${COLORS.PIP};\n                    opacity: 0.7;\n                }\n            `;\n    }\n};\n\nexport default getDieColor;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport getDieColor from './getDieColor';\n\nconst DieSvg = styled.svg`\n    border-radius: 4px;\n\n    ${getDieColor}\n`;\n\nconst getPos = (size, percent) => {\n    const margin = size * 0.25;\n    return margin + percent * (size - margin * 2);\n}\n\nconst Pip = ({ x, y, diceSize, ...rest }) => (\n    <circle r={diceSize * 0.08} cx={getPos(diceSize, x)} cy={getPos(diceSize, y)} />\n)\n\nconst Face0 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize} />\n);\n\nconst Face1 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0.5} y={0.5} />\n    </DieSvg>\n);\n\nconst Face2 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0} y={1} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0} />\n    </DieSvg>\n);\n\nconst Face3 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0} y={1} />\n        <Pip {...props} diceSize={diceSize} x={0.5} y={0.5} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0} />\n    </DieSvg>\n);\n\nconst Face4 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0} y={0} />\n        <Pip {...props} diceSize={diceSize} x={0} y={1} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0} />\n        <Pip {...props} diceSize={diceSize} x={1} y={1} />\n    </DieSvg>\n);\n\n\nconst Face5 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0} y={0} />\n        <Pip {...props} diceSize={diceSize} x={0} y={1} />\n        <Pip {...props} diceSize={diceSize} x={0.5} y={0.5} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0} />\n        <Pip {...props} diceSize={diceSize} x={1} y={1} />\n    </DieSvg>\n);\n\nconst Face6 = ({ diceSize, ...props }) => (\n    <DieSvg {...props} width={diceSize} height={diceSize}>\n        <Pip {...props} diceSize={diceSize} x={0} y={0} />\n        <Pip {...props} diceSize={diceSize} x={0} y={0.5} />\n        <Pip {...props} diceSize={diceSize} x={0} y={1} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0} />\n        <Pip {...props} diceSize={diceSize} x={1} y={0.5} />\n        <Pip {...props} diceSize={diceSize} x={1} y={1} />\n    </DieSvg>\n);\n\nconst DieFace = (props) => {\n    switch (props.value) {\n        case 1:\n            return <Face1 {...props} />;\n        case 2:\n            return <Face2 {...props} />;\n        case 3:\n            return <Face3 {...props} />;\n        case 4:\n            return <Face4 {...props} />;\n        case 5:\n            return <Face5 {...props} />;\n        case 6:\n            return <Face6 {...props} />;\n        default:\n            return <Face0 {...props} />;\n    }\n};\n\nexport default DieFace;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport AnimatedDieFace from './AnimatedDieFace';\nimport DieFace from './DieFace';\n\nimport { DIE_TYPES } from '../constants';\n\nconst DieButton = styled.div`\n    padding: 0;\n    border: 0;\n\n    background: transparent;\n\n    text-align: center;\n\n    cursor: pointer;\n    outline: none;\n`;\n\nconst Positioner = styled.div`\n    position: absolute;\n    transition: transform 0.5s ease-in;\n    perspective: 500px;\n    perspective-origin: 50% 50%;\n`;\n\nconst getInlineStyle = ({ x, y, diceSize }) => ({\n    transform: `translate(${diceSize * x}px, ${diceSize * y + 10}px)`\n});\n\nconst DiePositioner = ({ children, ...props }) => (\n    <Positioner style={getInlineStyle(props)}>\n        {children}\n    </Positioner>\n);\n\nclass Die extends React.Component {\n    shouldComponentUpdate({ value, x, y }) {\n        return !(\n            value === this.props.value &&\n            x === this.props.x &&\n            y === this.props.y\n        );\n    }\n\n    handleDieUpdate = () => {\n        const {\n            moves,\n            inputEnabled,\n            dieType,\n            updateDie,\n            id,\n        } = this.props;\n\n        if (\n            moves.limit - moves.used <= 0 ||\n            !inputEnabled ||\n            (dieType === DIE_TYPES.BLOCKER || dieType === DIE_TYPES.BOMB)\n        ) return;\n\n        updateDie(id);\n    }\n\n    render() {\n        const {\n            diceSize,\n            x,\n            y,\n            id,\n        } = this.props;\n\n        return (\n            <DiePositioner {...this.props}>\n                <DieButton {...this.props}\n                        onClick={this.handleDieUpdate}\n                        title={`id: ${id} x: ${x} y: ${y}`}>\n                    <AnimatedDieFace {...this.props}>\n                        <DieFace {...this.props} diceSize={diceSize - 2} />\n                    </AnimatedDieFace>\n                </DieButton>\n            </DiePositioner>\n        );\n    };\n}\n\nexport default Die;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Transition, TransitionGroup } from 'react-transition-group';\n\nimport Die from './Die';\n\nimport { BOARD_WIDTH, BOARD_HEIGHT } from '../constants';\n\nconst duration = 300;\n\nconst defaultStyle = {\n    transition: `opacity ${duration}ms ease-in`,\n    opacity: 0,\n}\n\nconst transitionStyles = {\n    entering: { opacity: 1 },\n    entered:  { opacity: 1 },\n    exiting:  { opacity: 0 },\n};\n\nconst Fade = ({ children, ...props }) => (\n    <Transition {...props} timeout={duration}>\n        {(state) => (\n            <span style={{ ...defaultStyle, ...transitionStyles[state] }}>\n                {children}\n            </span>\n        )}\n    </Transition>\n);\n\nconst BoardWrapper = styled.div`\n    padding: 0 10px;\n    background: white;\n    overflow: hidden;\n`;\n\nconst Board = styled.div`\n    position: relative;\n`;\n\nconst getBoardSize = ({ diceSize }) => ({\n    width: diceSize * BOARD_WIDTH,\n    height: diceSize * BOARD_HEIGHT + 20,\n})\n\nconst GameBoard = ({ gameBoard, ...props }) => (\n    <BoardWrapper>\n        <Board style={getBoardSize(props)}>\n            <TransitionGroup>\n                {gameBoard.map((die, i) => (\n                    <Fade key={die.id}>\n                        <Die {...props} {...die} />\n                    </Fade>\n                ))}\n            </TransitionGroup>\n        </Board>\n    </BoardWrapper>\n);\n\nexport default GameBoard;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledScore = styled.div`\n    font-size: 24px;\n`;\n\nconst Score = ({ score }) => <StyledScore>Score: {score}</StyledScore>;\n\nexport default Score;\n","import React from 'react';\nimport styled, { css, keyframes } from 'styled-components';\n\nconst StyledMoves = styled.div`\n    padding: 0 5px;\n    font-size: 18px;\n    height: ${18 + 10}px;\n`;\n\nconst shake = (degree) => keyframes`\n    0% {\n        transform: rotate(0deg);\n    }\n    25% {\n        transform: rotate(-${degree}deg);\n    }\n    50% {\n      transform: rotate(0deg);\n    }\n    75% {\n        transform: rotate(${degree}deg);\n    }\n`;\n\nconst Count = styled.span`\n    display: inline-block;\n\n    ${({ moves }) => moves < 6 && css`\n        color: red;\n    `}\n\n    ${({ moves }) => moves <= 4 && css`\n        animation: ${shake(5)} 0.1s linear infinite;\n        > div { transform: scale(1.2); }\n    `}\n\n    ${({ moves }) => moves <= 2 && css`\n        animation: ${shake(15)} 0.1s linear infinite;\n        > div { transform: scale(1.5); }\n    `}\n\n    ${({ moves }) => moves <= 1 && css`\n        animation: ${shake(20)} 0.1s linear infinite;\n        > div { transform: scale(1.8); }\n    `}\n`;\n\nconst Moves = ({ moves: { used, limit, cap } }) => (\n    <StyledMoves>\n        Moves left: <Count moves={limit - used}><div>{limit - used}</div></Count>\n    </StyledMoves>\n);\n\nexport default Moves;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport DieFace from './DieFace';\n\nconst StyledLevel = styled.div`\n    padding: 0 5px;\n    font-size: 18px;\n`;\n\nconst UpcomingDice = styled.div`\n    display: flex;\n    font-size: 16px;\n\n    .title {\n        margin-right: 10px;\n    }\n`;\n\nconst MiniDie = styled.div`\n    margin-right: 1px;\n`;\n\nconst More = styled.span`\n    font-size: 16px;\n`;\n\nconst Level = ({ level, upcomingDice }) => {\n    const nextNiceDisplay = upcomingDice.slice(0, 4);\n    const nextMore = upcomingDice.length - 4;\n\n    return (\n        <StyledLevel>\n            Level: {level}\n            <UpcomingDice>\n                <span className='title'>Upcoming:</span>\n                {nextNiceDisplay.slice(0, 4).map((die, i) => (\n                    <MiniDie key={i}>\n                        <DieFace {...die} diceSize={18} />\n                    </MiniDie>\n                ))}\n                {nextMore > 0 && <More>+ {nextMore}</More>}\n            </UpcomingDice>\n        </StyledLevel>\n    );\n};\n\nexport default Level;\n","const EMOJI_LIST = [\n    '🐶',\n    '🐱',\n    '🐭',\n    '🐹',\n    '🐰',\n    '🦊',\n    '🐻',\n    '🐼',\n    '🐨',\n    '🐯',\n    '🦁',\n    '🐮',\n    '🐷',\n    '🐸',\n    '🐵',\n    '🐔',\n    '🐧',\n    '🐦',\n    '🐥',\n    '🦆',\n    '🐺',\n    '🐗',\n    '🐴',\n    '🦄',\n    '🐝',\n    '🦋',\n    '🐞',\n    '🐜',\n    '🐢',\n    '🦎',\n    '🦖',\n    '🦕',\n    '🐙',\n    '🦑',\n    '🦞',\n    '🦀',\n    '🐡',\n    '🐠',\n    '🐟',\n    '🐬',\n    '🐳',\n    '🦍',\n    '🐫',\n    '🦒',\n    '🦘',\n    '🐃',\n    '🐂',\n    '🐄',\n    '🐎',\n    '🐉',\n    '🐲',\n    '🌵',\n    '🌲',\n    '🌳',\n    '🌴',\n    '🌱',\n    '🌿',\n    '☘️',\n    '🍁',\n    '🍄',\n    '🌷',\n    '🌹',\n    '🌺',\n    '🌸',\n    '🌝',\n    '🌛',\n    '⭐️',\n    '☄️',\n    '💥',\n    '🌈',\n    '🍎',\n    '🍐',\n    '🍊',\n    '🍋',\n    '🍌',\n    '🍉',\n    '🍇',\n    '🍓',\n    '🍒',\n    '🍑',\n    '🍍',\n    '🥝',\n    '🍆',\n    '🥑',\n    '🥦',\n    '🌶',\n    '🌽',\n    '🥕',\n    '🍞',\n    '🍳',\n    '🥨',\n    '🧀',\n    '🌮',\n    '🍕',\n    '🍙',\n    '🍰',\n    '🧁',\n    '🍭',\n    '🍬',\n    '🍪',\n    '🍺',\n    '🍹',\n    '🍷',\n    '⚽️',\n    '🏓',\n    '🏏',\n    '🎲',\n    '🧩',\n    '🎷',\n    '🎺',\n    '🎸',\n    '🎰',\n    '🚗',\n    '🚀',\n    '🗿',\n    '⛱',\n    '🌋',\n    '⛰',\n    '💣',\n    '🧨',\n    '⚔️',\n    '🛡',\n    '🔮',\n    '🎉',\n];\n\nconst randomEmoji = () => (\n    EMOJI_LIST[Math.floor(Math.random() * EMOJI_LIST.length)]\n);\n\nexport default randomEmoji;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n    width: 100%;\n`;\n\nconst Th = styled.th`\n    font-weight: bold;\n    text-align: left;\n`;\n\nconst Td = styled.td`\n    text-align: left;\n`;\n\nconst ScoreEntry = styled.tr`\n    background: ${({ currentScore }) =>currentScore ? 'yellow' : 'transparent'}\n`;\n\nconst ChangeNameButton = styled.button`\n    margin: 0;\n    padding: 0;\n    border: none;\n    text-decoration: underline;\n    background: transparent;\n    font-size: 18px;\n`;\n\nconst ScoreTable = ({ scores, savedScore, setInputActive }) => (\n    <Table>\n        <thead>\n        <tr>\n            <Th>\n                Player\n            </Th>\n            <Th>\n                Score\n            </Th>\n            <Th>\n                Level\n            </Th>\n        </tr>\n        </thead>\n        <tbody>\n        {scores.map(({ _id, playerName, score, level }) => {\n            const isCurrentScore = savedScore && savedScore._id === _id;\n            const name = playerName || '-';\n\n            return (\n                <ScoreEntry key={_id} currentScore={isCurrentScore}>\n                    <Td>\n                        {name}\n                    </Td>\n                    <Td>\n                        {score}\n                    </Td>\n                    <Td>\n                        {level}\n                    </Td>\n                </ScoreEntry>\n            );\n        })}\n        </tbody>\n    </Table>\n);\n\nexport default ScoreTable;\n","import React, { useEffect, useState } from 'react';\nimport useLocalStorage from 'react-use-localstorage';\nimport styled, { keyframes } from 'styled-components';\nimport uniqBy from 'lodash/fp/uniqBy';\nimport get from 'lodash/fp/get';\nimport axios from 'axios';\n\nimport randomEmoji from '../util/randomEmoji';\n\nimport GameOverScoreTable from './GameOverScoreTable';\n\nconst uniqById = uniqBy(get('_id'));\n\nconst containerEnter = keyframes`\n    0% { opacity: 0; }\n    100% { opacity: 1; }\n`;\n\nconst modalEnter = keyframes`\n    0% { transform: scale(0.8); }\n    100% { transform: scale(1); }\n`;\n\nconst ModalContainer = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    padding: 20px;\n    background: rgba(0, 0, 0, 0.5);\n\n    animation: ${containerEnter} 0.25s ease-in-out forwards;\n`;\n\nconst Modal = styled.div`\n    background: white;\n    padding: 20px;\n    border-radius: 6px;\n    text-align: center;\n    font-size: 18px;\n\n    animation: ${modalEnter} 0.25s ease-in-out forwards;\n`;\n\nconst RestartButton = styled.button`\n    padding: 10px 20px;\n    border: 0;\n    background: lightblue;\n    font-size: 18px;\n    outline: none;\n`;\n\nconst SCORE_SERVER_DOMAIN = process.env.NODE_ENV === 'production' ?\n    'https://dicematch-server.herokuapp.com' :\n    'http://localhost:5000';\n\nconst ScoreDisplay = ({\n    name,\n    score,\n    level: { level, clearedDice, upcomingDice },\n    moves: { used },\n    tracking: { gameStart, gameEnd },\n    restartGame,\n    savedScore,\n    setSavedScore,\n    setInputActive,\n}) => {\n    const [scores, setScores] = useState(null);\n\n    useEffect(() => {\n        const fetchScores = async () => {\n            let myScore;\n\n            if (!savedScore) {\n                try {\n                    const createdScoreResponse = await axios.post(`${SCORE_SERVER_DOMAIN}/scores`, {\n                        playerName: name,\n                        score,\n                        level,\n                        diceCleared: clearedDice,\n                        diceRemainingInLevel: upcomingDice.length,\n                        turnsUsed: used,\n                        startTime: gameStart && gameStart.toString(),\n                        endTime: gameEnd && gameEnd.toString(),\n                    }, {\n                        timeout: 30 * 1000,\n                    });\n\n                    myScore = createdScoreResponse.data.score\n                    setSavedScore(myScore);\n                } catch (error) {\n                    console.error('error saving score', error);\n                }\n            } else {\n                try {\n                    const createdScoreResponse = await axios.put(`${SCORE_SERVER_DOMAIN}/scores/${savedScore._id}`, {\n                        playerName: name,\n                    }, {\n                        timeout: 30 * 1000,\n                    });\n\n                    myScore = createdScoreResponse.data.score\n                    setSavedScore(myScore);\n                } catch (error) {\n                    console.error('error saving score', error);\n                }\n            }\n\n\n            try {\n                const loadedScoresResponse = await axios.get(`${SCORE_SERVER_DOMAIN}/scores`, {\n                    timeout: 30 * 1000,\n                    params: {\n                        limit: 10,\n                    },\n                });\n                const loadedScores = loadedScoresResponse.data.scores;\n\n                const allScores = uniqById([...loadedScores, myScore])\n                    .filter(score => !!score)\n                    .sort((a, b) => b.score - a.score);\n\n                console.log(allScores);\n\n                setScores(allScores);\n            } catch (error) {\n                console.error('error loading scores', error);\n            }\n        };\n\n        fetchScores();\n    }, []);\n\n    return scores ? (\n        <GameOverScoreTable scores={scores} savedScore={savedScore} setInputActive={setInputActive} />\n    ) : (\n        <div>\n            Loading...\n        </div>\n    );\n};\n\nconst GameOverModal = ({ restartGame, ...props }) => {\n    const [name, setName] = useLocalStorage('dicematch.name', randomEmoji());\n    const [savedScore, setSavedScore] = useState(null);\n\n    return (\n        <ModalContainer>\n            <Modal>\n                <h1>Game over</h1>\n\n                <ScoreDisplay {...props}\n                        name={name}\n                        savedScore={savedScore}\n                        setSavedScore={setSavedScore}\n                        setName={setName} />\n\n                <p>\n                    <RestartButton onClick={restartGame}>\n                        Restart\n                    </RestartButton>\n                </p>\n            </Modal>\n        </ModalContainer>\n    );\n}\n\nexport default GameOverModal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport drop from 'lodash/fp/drop';\nimport { Transition, TransitionGroup } from 'react-transition-group';\n\nimport { GAME_STATES } from '../constants';\n\nconst Announcements = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    font-size: 48px;\n    pointer-events: none;\n    touch-action: none;\n    color: white;\n\n    text-shadow: 0 0 5px rgba(0,0,0,1);\n`;\n\nconst duration = 200;\n\nconst defaultStyle = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    textAlign: 'center',\n    width: 150,\n    height: 50,\n    marginLeft: -75,\n    marginTop: -25,\n    transition: `opacity ${duration}ms ease-out, transform ${duration}ms ease-out`,\n    opacity: 0,\n    transform: 'scale(0.5)',\n}\n\nconst transitionStyles = {\n    entering: { opacity: 0, transform: 'scale(0.5)' },\n    entered: { opacity: 1, transform: 'scale(1)' },\n    exiting: { opacity: 0, transform: 'scale(2.5)' },\n};\n\nconst Fade = ({ children, ...props }) => (\n    <Transition {...props} timeout={duration}>\n        {(state) => (\n            <div style={{ ...defaultStyle, ...transitionStyles[state] }}>\n                {children}\n            </div>\n        )}\n    </Transition>\n);\n\nclass ScoreAnnouncer extends React.Component {\n    state = {\n        announcements: [],\n    };\n\n    aId = 0;\n\n    componentWillReceiveProps({ score, gameState }) {\n        if (this.props.score !== score && this.props.gameState !== GAME_STATES.FINISHED) {\n            const value = score - this.props.score;\n            this.setState((state) => ({ announcements: [...state.announcements, { id: this.aId, value }] }));\n            this.aId = this.aId + 1;\n\n            setTimeout(() => {\n                this.setState((state) => ({ announcements: drop(1, state.announcements) }));\n            }, 1000);\n        }\n    }\n\n    render() {\n        const { announcements } = this.state;\n\n        return (\n            <Announcements>\n                <TransitionGroup>\n                    {announcements.map((change, i) => (\n                        <Fade key={change.id}>\n                            + {change.value}\n                        </Fade>\n                    ))}\n                </TransitionGroup>\n            </Announcements>\n        );\n    }\n}\n\nexport default ScoreAnnouncer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport clamp from 'lodash/fp/clamp';\n\nimport GameBoard from './components/GameBoard';\nimport Score from './components/Score';\nimport Moves from './components/Moves';\nimport Level from './components/Level';\nimport GameOverModal from './components/GameOverModal';\nimport ScoreAnnouncer from './components/ScoreAnnouncer';\n\nimport { GAME_STATES, ACTIONS, BOARD_WIDTH } from './constants';\n\nconst clampDieSize = clamp(30, 80);\n\nconst AppContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    align-content: stretch;\n    height: 100%;\n    width: 100%;\n`;\n\nconst GameStatus = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 10px 10px;\n    background: white;\n    height: 100%;\n    width: 100%;\n`;\n\nconst GameContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n\n    align-items: center;\n\n    padding: 10px 0;\n\n    height: 100%;\n`;\n\n\nconst mapStateToProps = (state) => state;\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateDie: (id) => dispatch({ type: ACTIONS.UPDATE_DIE, id }),\n    restartGame: () => dispatch({ type: ACTIONS.GAME_RESET })\n});\n\nclass App extends Component {\n    state = { diceSize: 0 };\n\n    componentWillMount() {\n        this.getDiceSize();\n\n        window.addEventListener('resize', this.getDiceSize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getDiceSize);\n    }\n\n    getDiceSize = () => this.setState(() => ({ diceSize: clampDieSize((window.innerWidth - 20) / BOARD_WIDTH) }));\n\n    render() {\n        return (\n            <AppContainer>\n                <GameStatus>\n                    <div>\n                        <Level {...this.props.level} />\n                        <Moves {...this.props} />\n                    </div>\n\n                    <Score {...this.props} />\n                </GameStatus>\n                <GameContainer>\n                    <GameBoard {...this.props} diceSize={this.state.diceSize} />\n                    <ScoreAnnouncer {...this.props} />\n                </GameContainer>\n                {this.props.gameState === GAME_STATES.FINISHED &&\n                    <GameOverModal {...this.props} />}\n            </AppContainer>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export default (min, max) => (value) => {\n    if (value < min) return max;\n    if (value > max) return min;\n    return value;\n}\n","\nexport default (dieSize) => Math.floor(Math.random() * dieSize) + 1;\n","import circularClamp from '../util/circularClamp';\nimport rollDie from '../util/rollDie';\n\nimport { ACTIONS, DIE_TYPES } from '../constants';\n\nconst ensureIdMatch = (subReducer) => (state, action) => (\n    state.id === action.id ?\n        subReducer(state, action) :\n        state\n);\n\nconst updateDieUp = ensureIdMatch(({ value, ...state }, action) => ({\n    ...state,\n    value: circularClamp(1, state.dieSize)(value + 1),\n}));\n\nconst updateDieDown = ensureIdMatch(({ value, ...state }, action) => ({\n    ...state,\n    value: circularClamp(1, state.dieSize)(value - 1),\n}));\n\nconst updateDieRandom = ensureIdMatch(({ value, ...state }, action) => {\n    let roll = rollDie(state.dieSize);\n\n    while (roll === value) {\n        roll = rollDie(state.dieSize);\n    }\n\n    return ({ ...state, value: roll });\n});\n\nconst updateDieBomb = ({ value, ...state }, action) => ({\n    ...state,\n    value: value - 1,\n});\n\nconst valueForFlip = (value) => {\n    switch (value) {\n        case 1:\n            return 6;\n        case 2:\n            return 5;\n        case 3:\n            return 4;\n        case 4:\n            return 3;\n        case 5:\n            return 2;\n        case 6:\n        default:\n            return 1;\n    }\n};\n\nconst updateDieFlip = ensureIdMatch(({ value, ...state }, action) => ({\n    ...state,\n    value: valueForFlip(value),\n}));\n\nconst updateDie = (state, action) => {\n    switch (state.dieType) {\n        case DIE_TYPES.UP:\n            return updateDieUp(state, action);\n        case DIE_TYPES.DOWN:\n            return updateDieDown(state, action);\n        case DIE_TYPES.RANDOM:\n            return updateDieRandom(state, action);\n        case DIE_TYPES.FLIP:\n            return updateDieFlip(state, action);\n        case DIE_TYPES.BOMB:\n            return updateDieBomb(state, action);\n        default:\n            return state;\n    }\n}\n\nconst moveDie = ensureIdMatch((state, { x, y }) => ({ ...state, x, y }));\n\nexport default (state , action) => {\n    switch (action.type) {\n        case ACTIONS.UPDATE_DIE:\n            return updateDie(state, action);\n        case ACTIONS.MOVE_DIE:\n            return moveDie(state, action);\n        default:\n            return state;\n    }\n};\n","import uniqueId from 'lodash/fp/uniqueId';\nimport rollDie from '../util/rollDie';\n\nimport { DIE_TYPES } from '../constants';\n\nconst initialValueFor = (dieType, dieSize = 6) => {\n    switch (dieType) {\n        case DIE_TYPES.BOMB:\n            return dieSize;\n        default:\n            return rollDie(dieSize);\n    }\n}\n\nconst createDieState = (dieType, dieSize = 6) => ({\n    id: uniqueId(),\n    dieType,\n    dieSize,\n    value: initialValueFor(dieType, dieSize),\n});\n\nexport default createDieState;\n","\nconst getDieFromBoard = (board) => (x, y) => board.find((die) => (\n    die &&\n    die.x === x &&\n    die.y === y\n))\n\nexport default getDieFromBoard;\n","import getDieFromBoard from './getDieFromBoard';\nimport intersectionBy from 'lodash/fp/intersectionBy';\nimport uniqBy from  'lodash/fp/uniqBy';\nimport reverse from  'lodash/fp/reverse';\n\nimport { BOARD_WIDTH, BOARD_HEIGHT, MIN_MATCH_LENGTH } from '../constants';\n\nconst checkDiceMatch = (die, nextDie) => (\n    die &&\n    nextDie &&\n    die.value === nextDie.value\n);\n\nconst findMatchesHorizontal = (board) => {\n    const getDie = getDieFromBoard(board);\n    const matchGroups = [];\n\n    for (let y = 0; y < BOARD_HEIGHT; y++) {\n        let currGroup = [];\n\n        for (let x = 0; x < BOARD_WIDTH; x++) {\n            const die = getDie(x, y);\n            const nextDie = getDie(x + 1, y);\n\n            currGroup.push(die);\n\n            const hasMatch = checkDiceMatch(die, nextDie);\n\n            if (!hasMatch && currGroup.length >= MIN_MATCH_LENGTH) {\n                matchGroups.push(currGroup);\n            }\n\n            if (!hasMatch) currGroup = [];\n        }\n    }\n\n    return matchGroups;\n};\n\nconst findMatchesVertical = (board) => {\n    const getDie = getDieFromBoard(board);\n    const matchGroups = [];\n\n    for (let x = 0; x < BOARD_WIDTH; x++) {\n        let currGroup = [];\n\n        for (let y = 0; y < BOARD_HEIGHT; y++) {\n            const die = getDie(x, y);\n            const nextDie = getDie(x, y + 1);\n\n            currGroup.push(die);\n\n            const hasMatch = checkDiceMatch(die, nextDie);\n\n            if (!hasMatch && currGroup.length >= MIN_MATCH_LENGTH) {\n                matchGroups.push(reverse(currGroup));\n            }\n\n            if (!hasMatch) currGroup = [];\n        }\n    }\n\n    return matchGroups;\n};\n\nconst getId = (die) => die.id;\nconst intersectionById = intersectionBy(getId);\nconst uniqById = uniqBy(getId);\n\nconst findMatches = (state) => {\n    let horzontalMatches = findMatchesHorizontal(state);\n    let verticalMatches = findMatchesVertical(state);\n\n    // find matches that are both in the horizontal & vertical axis & combine into single group for more points\n    horzontalMatches = horzontalMatches.map((hGroup) => {\n        const intersectingGroup = verticalMatches.find((vGroup) => intersectionById([\n            vGroup,\n            hGroup,\n        ]));\n\n        if (!intersectingGroup) return hGroup;\n\n        verticalMatches = verticalMatches.filter((vGroup) => vGroup !== intersectingGroup);\n        return uniqById([...hGroup, ...intersectingGroup]);\n    });\n\n    return [\n        ...horzontalMatches,\n        ...verticalMatches,\n    ];\n}\n\nexport default findMatches;\n","import times from 'lodash/fp/times';\n\nimport dieReducer from './dieReducer';\nimport createDieState from './createDieState';\nimport findBoardMatches from '../util/findBoardMatches';\nimport getDieFromBoard from '../util/getDieFromBoard';\n\nimport { ACTIONS, DIE_TYPES, BOARD_WIDTH, BOARD_HEIGHT } from '../constants';\n\nconst createGameBoard = () => (\n    times(() => createDieState(DIE_TYPES.UP), BOARD_WIDTH * BOARD_HEIGHT)\n    .map((die, i) => {\n        const x = i % BOARD_WIDTH;\n        const y = Math.floor(i / BOARD_WIDTH);\n\n        return { ...die, x, y };\n    })\n);\n\nconst getInitalState = () => {\n    let gameBoard;\n\n    while (!gameBoard || findBoardMatches(gameBoard).length) {\n        gameBoard = createGameBoard();\n    }\n\n    return gameBoard;\n};\n\nconst deferToDice = (state, action) => state.map((dieState) => dieReducer(dieState, action));\n\nconst removeDie = (state, action) => state.filter((dieState) => dieState.id !== action.id);\n\nconst addDie = (state, { die }) => ([ ...state, die ]);\n\nconst getDieToShift = (state) => {\n    const getDie = getDieFromBoard(state);\n\n    return state.find(({ x, y, id }) => y < BOARD_HEIGHT - 1 && !getDie(x, y + 1));\n}\n\nconst cascadeDice = (state, action) => {\n    let updatedState = state;\n    let dieToShift = getDieToShift(updatedState);\n\n    while (dieToShift) {\n        updatedState = deferToDice(updatedState, {\n            type: ACTIONS.MOVE_DIE,\n            id: dieToShift.id,\n            x: dieToShift.x,\n            y: dieToShift.y + 1,\n        });\n\n        dieToShift = getDieToShift(updatedState)\n    }\n\n    return updatedState;\n};\n\nexport default (state = getInitalState(), action) => {\n    switch (action.type) {\n        case ACTIONS.UPDATE_DIE:\n            return deferToDice(state, action);\n        case ACTIONS.REMOVE_DIE:\n            return removeDie(state, action);\n        case ACTIONS.ADD_DIE:\n            return addDie(state, action);\n        case ACTIONS.CASCADE_DICE:\n            return cascadeDice(state, action);\n        case ACTIONS.GAME_RESET:\n            return getInitalState();\n        default:\n            return state;\n    }\n};\n","import { ACTIONS } from '../constants';\n\nconst initialState = { used: 0, limit: 10, cap: 10 };\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.UPDATE_DIE:\n            return { ...state, used: state.used + 1 };\n        case ACTIONS.ADD_MOVES:\n            return { ...state, limit: Math.min(state.limit + action.moves, state.used + state.cap) };\n        case ACTIONS.GAME_RESET:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","import times from 'lodash/fp/times';\nimport shuffle from 'lodash/fp/shuffle';\nimport clamp from 'lodash/fp/clamp';\n\nimport createDieState from './createDieState';\n\nimport { ACTIONS, DIE_TYPES } from '../constants';\n\nconst clampVal = clamp(0, Infinity);\nconst floor = value => Math.floor(value);\nconst round = value => Math.round(value);\nconst log = (value) => Math.log10(value);\n\nconst getCountUp = (level) => 10;\nconst getCountDown = (level) => clampVal(round(log(level) * 5));\nconst getCountFlip = (level) => clampVal(round(log(level) * 4) - 2);\nconst getCountRandom = (level) => floor(clampVal(round(log(level) * 4) - 2.5));\nconst getCountBlocker = (level) => clampVal(round(log(level) * 2.5) - 2);\nconst getCountBomb = (level) => {\n    if (level >= 15) return level % 5 === 0 ? 1 : 0;\n    return 0;\n};\n\nconst checkForRuns = (levelDice = []) => {\n    for (var i = 0; i < levelDice.length; i++) {\n        const value = levelDice[i].value;\n\n        if (\n            levelDice[i + 1] && levelDice[i + 1].value === value &&\n            levelDice[i + 2] && levelDice[i + 2].value === value\n        ) {\n            console.log('found run', levelDice, i, i+1, i+2);\n            return true;\n        }\n    }\n\n    return false;\n}\n\nconst getLevelDice = (level) => {\n    console.log(\n        'NEXT LEVEL', level,\n        'UP', getCountUp(level),\n        'DOWN', getCountDown(level),\n        'FLIP', getCountFlip(level),\n        'RANDOM', getCountRandom(level),\n        'BLOCKER', getCountBlocker(level),\n        'BOMB', getCountBomb(level),\n        'total', getCountUp(level) +\n                getCountDown(level) +\n                getCountRandom(level) +\n                getCountBlocker(level) +\n                getCountFlip(level) +\n                getCountBomb(level)\n    )\n\n    let levelDice;\n    let attempts = 0;\n\n    do {\n        levelDice = shuffle([\n            ...times(() => createDieState(DIE_TYPES.UP), getCountUp(level)),\n            ...times(() => createDieState(DIE_TYPES.DOWN), getCountDown(level)),\n            ...times(() => createDieState(DIE_TYPES.RANDOM), getCountRandom(level)),\n            ...times(() => createDieState(DIE_TYPES.BLOCKER), getCountBlocker(level)),\n            ...times(() => createDieState(DIE_TYPES.FLIP), getCountFlip(level)),\n            ...times(() => createDieState(DIE_TYPES.BOMB), getCountBomb(level)),\n        ]);\n\n        attempts++;\n    } while (attempts < 5 && checkForRuns(levelDice));\n\n    return levelDice;\n};\n\nconst getInitalState = () => ({\n    level: 1,\n    clearedDice: 0,\n    upcomingDice: getLevelDice(1),\n});\n\nconst addDie = (state, action) => {\n    let level = state.level;\n    let upcomingDice = state.upcomingDice.slice(1);\n\n    if (upcomingDice.length === 0) {\n        level = level + 1;\n        upcomingDice = getLevelDice(level);\n    }\n\n    return {\n        ...state,\n        level,\n        upcomingDice,\n    }\n}\n\nexport default (state = getInitalState(), action) => {\n    switch (action.type) {\n        case ACTIONS.ADD_DIE:\n            return addDie(state, action);\n        case ACTIONS.REMOVE_DIE:\n            return { ...state, clearedDice: state.clearedDice + 1 };\n        case ACTIONS.SET_LEVEL:\n            return { ...state, level: action.level, upcomingDice: getLevelDice(action.level) };\n        case ACTIONS.GAME_RESET:\n            return getInitalState();\n        default:\n            return state;\n    }\n}\n","import { GAME_STATES, ACTIONS } from '../constants';\n\nconst initialState = GAME_STATES.ACTIVE;\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.GAME_END:\n            return GAME_STATES.FINISHED;\n        case ACTIONS.GAME_RESET:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","import { ACTIONS } from '../constants';\n\nconst initialState = {\n    gameStart: new Date(),\n    gameEnd: null,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.GAME_END:\n            return {\n                ...state,\n                gameEnd: new Date(),\n            };\n        case ACTIONS.GAME_RESET:\n            return {\n                gameStart: new Date(),\n                gameEnd: null,\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport gameBoard from './gameBoardReducer';\nimport score from './scoreReducer';\nimport inputEnabled from './inputEnabledReducer';\nimport moves from './movesReducer';\nimport level from './levelReducer';\nimport gameState from './gameStateReducer';\nimport tracking from './trackingReducer';\n\nexport default combineReducers({\n    gameBoard,\n    score,\n    inputEnabled,\n    moves,\n    level,\n    gameState,\n    tracking,\n});\n","import { ACTIONS } from '../constants';\n\nconst initialState = 0;\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.ADD_SCORE:\n            return state + action.score * action.multiplier;\n        case ACTIONS.GAME_RESET:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","import { ACTIONS } from '../constants';\n\nconst initialState = true;\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.INPUT_DISABLE:\n            return false;\n        case ACTIONS.INPUT_ENABLE:\n            return true;\n        case ACTIONS.GAME_RESET:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","import { put, select, takeEvery, all } from 'redux-saga/effects'\n\nimport first from 'lodash/fp/first';\nimport includes from 'lodash/fp/includes';\n\nimport findBoardMatches from '../util/findBoardMatches';\nimport getDieFromBoard from '../util/getDieFromBoard';\n\nimport { ACTIONS, BOARD_HEIGHT, DIE_TYPES } from '../constants';\n\nconst delay = (duration) => new Promise(resolve => setTimeout(resolve, duration));\n\nconst getId = (die) => die.id;\n\nconst getMatchScore = (matchLength) => {\n    switch (matchLength) {\n        case 3:\n            return 0;\n        case 4:\n            return 100;\n        case 5:\n            return 300;\n        case 6:\n            return 500;\n        default:\n            return Math.max((matchLength - 6) * 300, 0) + 500;\n    }\n};\n\nconst getScoreValueBonus = (matchLength, matchValue) => {\n    const valueMulitplier = matchLength <= 3 ? 10 : 20;\n\n    return matchValue * valueMulitplier;\n};\n\nfunction *addDie(removedDie) {\n    const state = yield select();\n\n    const nextDie = state.level.upcomingDice[0];\n    const x = removedDie.x;\n    const y = -BOARD_HEIGHT;\n\n    yield put({ type: ACTIONS.ADD_DIE, die: { ...nextDie, x, y } });\n\n    yield delay(100);\n\n    yield put({ type: ACTIONS.CASCADE_DICE });\n};\n\nfunction *handleMatchGroup(matchGroup, scoreMultipler) {\n    const state = yield select();\n\n    const gameBoardIds = state.gameBoard.map(getId);\n    const diceToRemove = matchGroup.filter(die => includes(getId(die), gameBoardIds));\n\n    yield all(diceToRemove.map((die) => put({ type: ACTIONS.REMOVE_DIE, id: die.id })));\n\n    yield delay(250);\n\n    yield put({ type: ACTIONS.CASCADE_DICE });\n\n    const score = (getMatchScore(diceToRemove.length) + getScoreValueBonus(diceToRemove.length, first(diceToRemove).value));\n\n    yield put({\n        type: ACTIONS.ADD_SCORE,\n        score: score,\n        multiplier: scoreMultipler\n    });\n\n    yield delay(250);\n\n    for (let die of diceToRemove) {\n        yield addDie(die);\n    }\n\n    yield delay(100);\n};\n\nfunction *removeMatches(matches, scoreMultipler = 1) {\n    yield delay(100);\n\n    if (!matches.length) return;\n\n    const state = yield select();\n\n    for (let matchGroup of matches) {\n        yield handleMatchGroup(matchGroup, scoreMultipler);\n        yield delay(250);\n    }\n\n    const updatedState = yield select();\n    const nextMatches = findBoardMatches(updatedState.gameBoard);\n\n    if (state.level.level !== updatedState.level.level) {\n        yield put({ type: ACTIONS.ADD_MOVES, moves: 10 });\n    }\n\n    yield delay(300);\n\n    if (nextMatches.length) {\n        return yield removeMatches(nextMatches, scoreMultipler + 1);\n    }\n}\n\nconst BOMB_MATRIX = [\n    [0, 0], // bomb itself is first so that the score value bonus == 0\n    [-1, -1], [0, -1], [1, -1],\n    [-1, 0],        [1, 0],\n    [-1, 1], [0, 1], [1, 1]\n];\n\nconst findDiceToExplode = (gameBoard) => {\n    const getDieAt = getDieFromBoard(gameBoard);\n\n    const diceToExplode = gameBoard\n        .filter((die) => die.dieType === DIE_TYPES.BOMB && die.value <= 0)\n        .map(die => (\n            BOMB_MATRIX\n                .map(([offsetX, offsetY]) => getDieAt(die.x + offsetX, die.y + offsetY))\n                .filter(die => !!die)\n        ));\n\n    return diceToExplode;\n}\n\nfunction *onUpdateDie() {\n    yield put({ type: ACTIONS.INPUT_DISABLE });\n\n    const state = yield select();\n    const matches = findBoardMatches(state.gameBoard);\n\n    if (matches.length) {\n        yield delay(250);\n        yield removeMatches(matches, 1);\n    }\n\n    const postMatchState = yield select();\n    const diceToExplode = findDiceToExplode(postMatchState.gameBoard);\n    if (diceToExplode.length) {\n        yield delay(250);\n        yield removeMatches(diceToExplode, 1);\n    }\n\n    yield put({ type: ACTIONS.INPUT_ENABLE });\n\n    const finalState = yield select();\n    if (finalState.moves.limit - finalState.moves.used <= 0) {\n        yield delay(800);\n        return yield put({ type: ACTIONS.GAME_END });\n    }\n}\n\nfunction* matchSaga() {\n    yield takeEvery(ACTIONS.UPDATE_DIE, onUpdateDie);\n}\n\nexport default matchSaga;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n// registerServiceWorker();\n","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from '../reducers/rootReducer';\n\nimport sagas from './matchSagas';\n\nexport default (initialState) => {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const middleware = [\n        createLogger({\n            collapsed: true,\n            duration: true,\n        }),\n        sagaMiddleware,\n    ];\n\n    const store = createStore(rootReducer, initialState, applyMiddleware.apply(null, middleware));\n\n    sagaMiddleware.run(sagas);\n\n    window._store = store;\n\n    return store;\n};\n"],"sourceRoot":""}